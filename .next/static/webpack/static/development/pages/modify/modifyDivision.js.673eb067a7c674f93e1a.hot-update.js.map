{"version":3,"file":"static/webpack/static\\development\\pages\\modify\\modifyDivision.js.673eb067a7c674f93e1a.hot-update.js","sources":["webpack:///./src/components/division/SelectDivisionToModify.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Form from \"../styles/Form\";\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\nimport Error from \"../ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport DeleteDivision from \"./DeleteDivision\";\r\n\r\nconst DeleteBlock = styled.div`\r\n  align-content: left;\r\n`;\r\nconst UpdateBlock = styled.button`\r\n  font-weight: bold;\r\n  border-radius: 8px;\r\n  font-size: 1.5rem;\r\n  height: 30px;\r\n  border: none;\r\n  padding: 5px;\r\n  align-items: center;\r\n  background-color: white;\r\n  color: black;\r\n  border: 2px solid #4caf50; /* Green */\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #4c50;\r\n    color: #4caf50;\r\n  }\r\n`;\r\n\r\nconst SelectBlock = styled.div`\r\n  /* display: block; */\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 10px;\r\n`;\r\nconst StyledDivision = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 20fr auto auto;\r\n  grid-gap: 20px;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  width: 70vw;\r\n`;\r\n\r\nconst GET_ALL_REGIONS_QUERY = gql`\r\n  query GET_ALL_REGIONS_QUERY {\r\n    regions(orderBy: regName_DESC) {\r\n      id\r\n      regName\r\n      regCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_DIVISIONS_OF_A_REGION_QUERY = gql`\r\n  query GET_DIVISIONS_OF_A_REGION_QUERY($id: ID!) {\r\n    region(id: $id) {\r\n      id\r\n      regName\r\n      division(orderBy: divName_ASC) {\r\n        id\r\n        divName\r\n        divCode\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass SelectDivisionToModify extends Component {\r\n  state = {\r\n    regionID: \"12\",\r\n    id: \"122\",\r\n    divisionID: \"452\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  getSelectedRegion = dataSource => {\r\n    // 1 copy the data source\r\n    if (dataSource.length > 0) {\r\n      const tempRegions = [...dataSource];\r\n      // get the region object\r\n      const selectedRegion = tempRegions.find(item => item.id === this.state.regionID);\r\n      console.log(\"getting selected region\");\r\n      console.log(selectedRegion);\r\n      return selectedRegion;\r\n    }\r\n  };\r\n  getSelectedDivision = dataSource => {\r\n    // 1 copy the data source\r\n    if (dataSource.length > 0) {\r\n      const tempDivisions = [...dataSource];\r\n      // get the region object\r\n      const selectedDivision = tempDivisions.find(item => item.id === this.state.id);\r\n      console.log(\"getting selected region\");\r\n      console.log(selectedDivision);\r\n      return selectedDivision;\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    const { id } = this.state;\r\n    return (\r\n      <Query query={GET_ALL_REGIONS_QUERY}>\r\n        {({ data, loading, error }) => {\r\n          {\r\n            loading && <p>Loading...</p>;\r\n          }\r\n          {\r\n            error && <Error error={error} />;\r\n          }\r\n          const { regions } = data;\r\n          const anyRegion = regions[0];\r\n          //'getting region from the state')\r\n          console.log(this.state.regions);\r\n\r\n          const getRegions = regions.map(item => (\r\n            <option value={item.id} key={item.id}>\r\n              {item.regName} - {item.regCode}\r\n            </option>\r\n          ));\r\n          return (\r\n            <Query query={GET_DIVISIONS_OF_A_REGION_QUERY} variables={this.getSelectedRegion(regions) || anyRegion}>\r\n              {({ data, loading, error }) => {\r\n                {\r\n                  loading && <p>Loading...</p>;\r\n                }\r\n                {\r\n                  error && <Error error={error} />;\r\n                }\r\n\r\n                console.log(\"these are the divisions of the selected region\");\r\n                console.log(data.region.division);\r\n                const divisionsOptions = data.region.division.map(item => (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.divName}\r\n                  </option>\r\n                ));\r\n\r\n                return (\r\n                  <Form\r\n                    onSubmit={async e => {\r\n                      e.preventDefault();\r\n                      const res = await updateDivision();\r\n                      console.log(res);\r\n                    }}\r\n                  >\r\n                    <h5>Modification d'un Departement</h5>\r\n                    <Error error={error} />\r\n                    <fieldset disabled={loading} aria-busy={loading}>\r\n                      <StyledDivision>\r\n                        <SelectBlock>\r\n                          <select\r\n                            type=\"select\"\r\n                            id=\"regionID\"\r\n                            name=\"regionID\"\r\n                            value={this.state.regionID}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                          >\r\n                            <option> Choisissez la region</option>\r\n                            {getRegions}\r\n                          </select>\r\n                          <select type=\"select\" id=\"id\" name=\"id\" value={this.state.id} onChange={this.handleChange} required>\r\n                            <option>Departement a modifier</option>\r\n                            {divisionsOptions}\r\n                          </select>\r\n                        </SelectBlock>\r\n\r\n                        <UpdateBlock>\r\n                          <Link href={{ pathname: \"../updates/updateDivision\", query: { id } }}>\r\n                            <a>Valider</a>\r\n                          </Link>\r\n                        </UpdateBlock>\r\n                        <DeleteBlock>\r\n                          <DeleteDivision id={this.state.id}>Delete</DeleteDivision>\r\n                        </DeleteBlock>\r\n                      </StyledDivision>\r\n                    </fieldset>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Query>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  };\r\n}\r\n\r\nexport default SelectDivisionToModify;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AASA;AAUA;AACA;AAaA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAGA;AACA;;;;;AA5HA;AACA;AA6HA;;;;A","sourceRoot":""}