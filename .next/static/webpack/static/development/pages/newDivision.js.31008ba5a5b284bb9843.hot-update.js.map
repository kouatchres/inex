{"version":3,"file":"static/webpack/static\\development\\pages\\newDivision.js.31008ba5a5b284bb9843.hot-update.js","sources":["webpack:///./src/components/CreateDivision.jsx"],"sourcesContent":["import React, {Component} from 'react'\r\nimport {Mutation, Query} from 'react-apollo'\r\nimport Form from './styles/Form'\r\nimport gql from 'graphql-tag'\r\nimport Error from './ErrorMessage'\r\nimport styled from 'styled-components';\r\nimport { storeRegion } from '../../src/data'\r\n\r\nconst StyledDivision = styled.div `\r\ndisplay: block; \r\ntext-align:center;\r\nmargin: 0 auto;\r\nmin-width:350px;\r\n`;\r\nconst LOCAL_STATE_QUERY = gql `\r\nquery{\r\n    regions @client\r\n}\r\n\r\n\r\n`;\r\n\r\n\r\nconst GET_ALL_REGIONS_QUERY = gql `\r\nquery GET_ALL_REGIONS_QUERY{\r\n  regions{\r\n      id\r\n     regName\r\n     regCode\r\n}\r\n}\r\n`;\r\nconst SELECT_A_REGION = gql `\r\n  query SELECT_A_REGION($id: ID!){\r\n      region(id: $id){\r\n          id\r\n          regName\r\n          regCode\r\n      }\r\n  }\r\n`;\r\n\r\nconst CREATE_DIVISION_MUTATION = gql `\r\n   mutation CREATE_DIVISION_MUTATION(\r\n $divName: String!,\r\n $divCode: String!,\r\n $region: RegionCreateWithoutDivisionInput!\r\n\r\n   ){\r\ncreateDivision(\r\n         divName: $divName,\r\n           divCode: $divCode,\r\n           region: $region\r\n){\r\n            id\r\n            divName\r\n            \r\n   }\r\n   }\r\n `;\r\n\r\nclass createDivision extends Component {\r\n\r\n    state = {\r\n        divName: \"\",\r\n        divCode: \"\",\r\n        regionID: '12',\r\n        region:storeRegion\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        this.setState({[name]: value});\r\n        \r\n    }\r\n    \r\n    removeTypeName=()=>{\r\n    //   const  region={id:\"ck34nq828n2pd0919yxj6db5c\", regName:\"Guantanamera\", regCode:\"GR\"}\r\n    const region= this.state.region\r\n      const allowed = ['id', 'regName','regCode'];\r\n\r\n      const filtered = Object.keys(region)\r\n        .filter(key => allowed.includes(key))\r\n        .reduce((obj, key) => {\r\n          obj[key] = region[key];\r\n          return obj;\r\n        }, \r\n        {});\r\n            console.log(filtered)\r\n      return filtered;\r\n      \r\n    }\r\n   \r\n\r\n    handleRegionChange = (dataSource) => {\r\n        // 1 copy the data sourceif()\r\n      if(dataSource.length>0){\r\n          const tempRegions = [...dataSource];\r\n          // get the region object\r\nconst selectedRegion = tempRegions.find(item => item.id === this.state.regionID);\r\n        console.log(\"getting selected region\");\r\n        console.log(selectedRegion);\r\n        const allowed = ['id', 'regName','regCode'];\r\n\r\n      const filteredRegion = Object.keys(selectedRegion)\r\n        .filter(key => allowed.includes(key))\r\n        .reduce((obj, key) => {\r\n            obj[key] = selectedRegion[key];\r\n          return obj;\r\n        });\r\n        console.log(filteredRegion)\r\n        //   return filteredRegion;\r\n        this.setState(()=>{return{region:filteredRegion}})\r\n    }else{\r\n    const tempRegions = this.state.region;\r\n    this.setState(()=>{\r\n        return{region:tempRegions}\r\n    })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n<Query \r\nquery={GET_ALL_REGIONS_QUERY}\r\n>\r\n                {({data, loading, error}) => {\r\n                    { loading && <p>Loading...</p>};\r\n                    {error && <Error error={error}/>};\r\n                    const {regions} =data;\r\n                    console.log('getting region from he state')\r\n                    console.log(this.state.region)\r\n   const newArray = regions.map(({__typename, ...others}) => others)\r\nconsole.log(newArray);\r\n                    return (\r\n                        <Mutation\r\n                            mutation={CREATE_DIVISION_MUTATION}\r\n                           \r\n                            variables={{\r\n                                ...this.state,\r\n                        }}>\r\n\r\n                            {(createDivision, {loading, error}) => (\r\n                                <StyledDivision>\r\n                                    <Form\r\n                                        onSubmit={async e => {\r\n                                        e.preventDefault();\r\n                                        const res = await createDivision();\r\n                                        console.log(res);\r\n                                    }}>\r\n                                        <h5>Create a new Division</h5>\r\n                                        <Error error={error}/>\r\n                                        <fieldset disabled={loading} aria-busy={loading}>\r\n\r\n                                            <select\r\n                                                type=\"select\"\r\n                                                id=\"regionID\"\r\n                                                name=\"regionID\"\r\n                                                value={this.state.regionID}\r\n                                                onChange={this.handleChange}\r\n                                                required>\r\n                                                {data\r\n                                                    .regions\r\n                                                    .map((region) => <option value={region.id} key={region.id}>\r\n                                                        {region.regName}</option>)}\r\n                                            </select>\r\n\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"divName\"\r\n                                                name=\"divName\"\r\n                                                placeholder=\"Division Name\"\r\n                                                value={this.state.divName}\r\n                                                onChange={this.handleChange}\r\n                                                required/>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"divCode\"\r\n                                                name=\"divCode\"\r\n                                                placeholder=\"Division Code\"\r\n                                                value={this.state.divCode}\r\n                                                onChange={this.handleChange}\r\n                                                required/>\r\n                                            <div className=\"submitButton\">\r\n                                                <button type=\"submit\">Submit</button>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    </Form>\r\n                                </StyledDivision>\r\n                            )}\r\n                        </Mutation>\r\n                    );\r\n                }}\r\n            </Query>\r\n        );\r\n    }\r\n}\r\n\r\nexport default createDivision;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AASA;AASA;AAUA;AACA;AAkBA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;;;;;;AAxDA;;;AA0DA;AAAA;AACA;AAAA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAEA;AAEA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CA;AAkDA;AAGA;;;;AA9IA;AACA;AAgJA;;;;A","sourceRoot":""}