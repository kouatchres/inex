{"version":3,"file":"static/webpack/static\\development\\pages\\show\\genCenterResults.js.1f8ceea2d9359992d736.hot-update.js","sources":["webpack:///./src/components/score/center/GenCenterResults.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport Form from '../../styles/Form';\r\nimport { MiniStyledPage } from '../../styles/StyledPage';\r\nimport Error from '../../ErrorMessage';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router'\r\nimport { getSelectedObject } from '../../queries&Mutations&Functions/Functions';\r\nimport {\r\n    getExamSessionQuery,\r\n    getAllExamsQuery,\r\n    getAllSessionsQuery,\r\n    getSingleCenterExamSessionQuery,\r\n    getSingleCenterQuery\r\n} from '../../queries&Mutations&Functions/Queries';\r\n\r\nconst StyledDivision = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr;\r\n\ttext-align: center;\r\n\tmargin: 0 auto;\r\n    .submitButton{\r\npaddding-top:2rem;\r\n    }\r\n`;\r\n\r\n\r\nconst OtherSelect = styled.div`\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nclass GenCenterResults extends Component {\r\n    state = {\r\n        examID: \"\",\r\n        sessionID: \"\",\r\n        centerNumber: \"\"\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { name, value, type } = e.target;\r\n        const val = type === 'number' ? parseInt(value) : value;\r\n        this.setState({ [name]: val });\r\n    };\r\n\r\n    resetForm = () => {\r\n        this.setState({ centerNumber: '' });\r\n    };\r\n\r\n    makeCenterVariableObject = (centerCodeValue) => {\r\n        const storedCenter = {\r\n            centerNumber: `${centerCodeValue}`\r\n        };\r\n        return storedCenter;\r\n    };\r\n    makeCESSObject = (candCodeValue) => {\r\n        const objCESS = {\r\n            id: `${candCodeValue}`\r\n        };\r\n        return objCESS;\r\n    };\r\n\r\n    render() {\r\n        const {\r\n\r\n            examID,\r\n            sessionID,\r\n            centerNumber\r\n        } = this.state;\r\n        return (\r\n            <Query query={getAllExamsQuery}>\r\n                {({ data, loading, error }) => {\r\n                    {\r\n                        loading && <p>loading...</p>;\r\n                    }\r\n                    {\r\n                        error && <Error error={error} />;\r\n                    }\r\n\r\n                    const { exams } = data;\r\n                    console.log(exams);\r\n\r\n                    const refinedExams = exams && exams.map(({\r\n                        __typename,\r\n                        examName,\r\n                        ...others\r\n                    }) => others);\r\n\r\n                    return (\r\n                        <Query query={getAllSessionsQuery}>\r\n                            {({ data, loading, error }) => {\r\n                                {\r\n                                    loading && (\r\n                                        <p >\r\n                                            loading...\r\n                                        </p>\r\n                                    );\r\n                                }\r\n                                {\r\n                                    error && (<Error error={error} />);\r\n                                }\r\n\r\n                                const { sessions } = data;\r\n                                console.log(sessions);\r\n                                const refinedSessions = sessions && sessions.map(({\r\n                                    __typename,\r\n                                    sessionName,\r\n                                    ...others\r\n                                }) => others);\r\n\r\n                                return (\r\n\r\n                                    <Query query={getExamSessionQuery}\r\n                                        variables={{\r\n\r\n                                            exam: refinedExams && getSelectedObject(refinedExams, examID),\r\n                                            session: refinedSessions && getSelectedObject(refinedSessions, sessionID)\r\n                                        }}  >\r\n                                        {({ data, error, loading }) => {\r\n                                            console.log(data)\r\n                                            const { examSessions } = { ...data }\r\n                                            const refinedES = examSessions && examSessions.map(({ __typename, ...others }) => others)\r\n                                            const reducedES = refinedES && refinedES.reduce((item) => item)\r\n                                            console.log(reducedES)\r\n\r\n                                            return (\r\n                                                <Query query={getSingleCenterQuery}\r\n                                                    variables={{ centerNumber: centerNumber }}  >\r\n                                                    {({ data, error, loading }) => {\r\n                                                        const { centerByNumber } = { ...data }\r\n                                                        centerByNumber && delete centerByNumber.__typename\r\n                                                        console.log(centerByNumber)\r\n                                                        return (\r\n                                                            <Query\r\n                                                                query={getSingleCenterExamSessionQuery}\r\n                                                                variables={{\r\n                                                                    examSession: reducedES && reducedES,\r\n                                                                    center: centerByNumber && centerByNumber\r\n                                                                }}>\r\n                                                                {({ data, error, loading }) => {\r\n                                                                    console.log(data);\r\n                                                                    const { centerExamSessions } = { ...data };\r\n                                                                    console.log(centerExamSessions);\r\n                                                                    // remove typename from the object\r\n                                                                    const refinedCenterExamSessions =\r\n                                                                        centerExamSessions && centerExamSessions.map(({ __typename, ...others }) => others);\r\n                                                                    // transform the array into a single object\r\n                                                                    const getObj = refinedCenterExamSessions && refinedCenterExamSessions.reduce((item) => item);\r\n                                                                    console.log(getObj);\r\n                                                                    getObj && Router.push({\r\n                                                                        pathname: '/show/results/centerResults',\r\n                                                                        query: {\r\n                                                                            id: getObj.id\r\n                                                                        }\r\n                                                                    });\r\n\r\n\r\n                                                                    return (\r\n                                                                        <MiniStyledPage >\r\n                                                                            <Form\r\n                                                                                onSubmit={async (e) => {\r\n                                                                                    e.preventDefault();\r\n                                                                                    this.resetForm();\r\n                                                                                }}>\r\n                                                                                <h4>\r\n                                                                                    Resultats du Centre\r\n                                                                    </h4>\r\n                                                                                <Error error={error} />\r\n                                                                                <fieldset disabled={loading} aria-busy={loading}>\r\n                                                                                    <StyledDivision >\r\n\r\n                                                                                        <OtherSelect>\r\n                                                                                            <input\r\n                                                                                                type=\"textarea\"\r\n                                                                                                id=\"centerName\"\r\n                                                                                                name=\"centerName\"\r\n                                                                                                placeholder=\"Nom du centre\"\r\n                                                                                                value={centerByNumber && centerByNumber.centerCode}\r\n                                                                                                rows=\"2\"\r\n                                                                                                wrap=\"soft\"\r\n                                                                                                readonly\r\n                                                                                            />\r\n                                                                                            <input\r\n                                                                                                type=\"number\"\r\n                                                                                                id=\"centerNumber\"\r\n                                                                                                name=\"centerNumber\"\r\n                                                                                                placeholder=\"Numéro du centre\"\r\n                                                                                                value={centerNumber}\r\n                                                                                                onChange={this.handleChange}\r\n                                                                                                required />\r\n                                                                                            <select\r\n                                                                                                type=\"select\"\r\n                                                                                                id=\"sessionID\"\r\n                                                                                                name=\"sessionID\"\r\n                                                                                                value={sessionID}\r\n                                                                                                onChange={this.handleChange}\r\n                                                                                                required>\r\n                                                                                                <option >\r\n                                                                                                    La Session\r\n                                                                                    </option>\r\n                                                                                                {sessions && sessions.map((item) => (\r\n                                                                                                    <option key={item.id} value={item.id}>\r\n                                                                                                        {item.sessionName}\r\n                                                                                                    </option>\r\n                                                                                                ))}\r\n                                                                                            </select>\r\n\r\n                                                                                            <select\r\n                                                                                                type=\"select\"\r\n                                                                                                id=\"examID\"\r\n                                                                                                name=\"examID\"\r\n                                                                                                value={examID}\r\n                                                                                                onChange={this.handleChange}\r\n                                                                                                required>\r\n                                                                                                <option >\r\n                                                                                                    L'Examen\r\n                                                                                    </option>\r\n                                                                                                {exams && exams.map((item) => (\r\n                                                                                                    <option key={item.id} value={item.id}>\r\n                                                                                                        {item.examName}\r\n                                                                                                    </option>\r\n                                                                                                ))}\r\n                                                                                            </select>\r\n                                                                                            <div className=\"submitButton\">\r\n                                                                                                <button type=\"submit\">\r\n                                                                                                    Valid{loading ? 'ation en cours' : 'er'}\r\n                                                                                                </button>\r\n                                                                                            </div>\r\n                                                                                        </OtherSelect>\r\n                                                                                    </StyledDivision>\r\n                                                                                </fieldset>\r\n                                                                            </Form>\r\n                                                                        </MiniStyledPage>\r\n                                                                    )\r\n                                                                }}\r\n                                                            </Query>\r\n                                                        )\r\n                                                    }}\r\n                                                </Query>\r\n                                            )\r\n                                        }}\r\n                                    </Query>\r\n                                );\r\n                            }\r\n                            }\r\n                        </Query>\r\n                    );\r\n                }\r\n                }\r\n            </Query>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GenCenterResults;\r\n"],"mappings":"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","sourceRoot":""}