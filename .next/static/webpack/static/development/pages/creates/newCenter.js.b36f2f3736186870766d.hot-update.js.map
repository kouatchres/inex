{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newCenter.js.b36f2f3736186870766d.hot-update.js","sources":["webpack:///./src/components/center/CreateCenter.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport Form from \"../styles/Form\";\r\nimport Error from \"../ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport { createCenterMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\r\n\r\nimport {\r\n  getAllRegionsQuery,\r\n  getDivisionsOfARegionQuery,\r\n  getSubDivisionsOfADivisionQuery,\r\n  getTownsOfASubDivisionQuery\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst StyledDivision = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 350px;\r\n`;\r\n\r\nclass CreateCenter extends Component {\r\n  state = {\r\n    centerName: \"\",\r\n    centerCode: \"\",\r\n    centerNumber: \"\",\r\n    townID: \"12\",\r\n    divisionID: \"12\",\r\n    subDivisionID: \"12\",\r\n    regionID: \"12\",\r\n    region: \"\",\r\n    division: \"\",\r\n    subDivision: \"\",\r\n    town: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value, type } = e.target;\r\n    const setValue = type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [name]: setValue });\r\n  };\r\n  resetForm() {\r\n    this.setState({ centerName: \"\", centerCode: \"\", centerNumber: \"\" });\r\n  }\r\n  \r\n  render() {\r\n    const { regionID, divisionID, subDivisionID, townID}= this.state\r\n    return (\r\n      <Query query={getAllRegionsQuery}>\r\n        {({ data, loading, error }) => {\r\n          {\r\n            loading && <p>Loading...</p>;\r\n          }\r\n          {\r\n            error && <Error error={error} />;\r\n          }\r\n          const { regions } = data;\r\n          {/* const anyRegion = regions[0]; */}\r\n\r\n          //prepare data for the region select options\r\n          const regionsOptions = regions.map(item => (\r\n            <option value={item.id} key={item.id}>\r\n              {item.regName}\r\n            </option>\r\n          ));\r\n          return (\r\n            <Query query={getDivisionsOfARegionQuery} variables={regions && getSelectedObject(regions,regionID) }>\r\n              {({ data, loading, error }) => {\r\n                {\r\n                  loading && <p>Loading...</p>;\r\n                }\r\n                {\r\n                  error && <Error error={error} />;\r\n                }\r\n\r\n                const { region } = data;\r\n                const { division } = region;\r\n                {/* const anyDivision = division[0]; */}\r\n\r\n                const divisionsOptions = division.map(item => (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.divName}\r\n                  </option>\r\n                ));\r\n                return (\r\n                  <Query query={getSubDivisionsOfADivisionQuery} variables={division && getSelectedObject(division,divisionID)}>\r\n                    {({ data, loading, error }) => {\r\n                      {\r\n                        loading && <p>Loading...</p>;\r\n                      }\r\n                      {\r\n                        error && <Error error={error} />;\r\n                      }\r\n                      const { division: departement } = data;\r\n                      const { subDivision: arrondissement } = departement;\r\n\r\n                      {/* const anySubDivision = arrondissement[0]; */}\r\n                      console.log(departement);\r\n\r\n                      const subDivisionsOptions = arrondissement.map(item => (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.subDivName}\r\n                        </option>\r\n                      ));\r\n\r\n                      return (\r\n                        <Query\r\n                          query={getTownsOfASubDivisionQuery}\r\n                          variables={arrondissement && getSelectedObject(arrondissement, subDivisionID) }\r\n                        >\r\n                          {({ data, loading, error }) => {\r\n                            {\r\n                              loading && <p>Loading...</p>;\r\n                            }\r\n                            {\r\n                              error && <Error>error={error}</Error>;\r\n                            }\r\n\r\n                            const village = data.subDivision;\r\n\r\n                            const allTowns = { ...village };\r\n\r\n                            const { town } = allTowns;\r\n                            const refinedTown = town && town.map(({ __typename, townName, townCode, ...others }) => others);\r\n\r\n                            return (\r\n                              <Mutation\r\n                                mutation={createCenterMutation}\r\n                                variables={{\r\n                                  ...this.state,\r\n                                  town: town && getselectedObject(refinedTown, townID)\r\n                                }}\r\n                              >\r\n                                {(createCenter, { loading, error }) => (\r\n                                  <StyledDivision>\r\n                                    <Form\r\n                                      onSubmit={async e => {\r\n                                        e.preventDefault();\r\n                                        const res = await createCenter();\r\n                                        console.log(res);\r\n                                        this.resetForm();\r\n                                      }}\r\n                                    >\r\n                                      <h5>Nouveau Centre d'Examen</h5>\r\n                                      <Error error={error} />\r\n                                      <fieldset disabled={loading} aria-busy={loading}>\r\n                                        <select\r\n                                          type=\"select\"\r\n                                          id=\"regionID\"\r\n                                          name=\"regionID\"\r\n                                          value={this.state.regionID}\r\n                                          onChange={this.handleChange}\r\n                                          required\r\n                                        >\r\n                                          <option>Choisissez une region</option>\r\n                                          {regionsOptions}\r\n                                        </select>\r\n\r\n                                        <select\r\n                                          type=\"select\"\r\n                                          id=\"divisionID\"\r\n                                          name=\"divisionID\"\r\n                                          value={this.state.divisionID}\r\n                                          onChange={this.handleChange}\r\n                                          required\r\n                                        >\r\n                                          <option>Choisissez un departement</option>\r\n                                          {divisionsOptions}\r\n                                        </select>\r\n                                        <select\r\n                                          type=\"select\"\r\n                                          id=\"subDivisionID\"\r\n                                          name=\"subDivisionID\"\r\n                                          value={this.state.subDivisionID}\r\n                                          onChange={this.handleChange}\r\n                                          required\r\n                                        >\r\n                                          <option>Choisissez un arrondissement</option>\r\n                                          {subDivisionsOptions}\r\n                                        </select>\r\n                                        <select\r\n                                          type=\"select\"\r\n                                          id=\"townID\"\r\n                                          name=\"townID\"\r\n                                          value={this.state.townID}\r\n                                          onChange={this.handleChange}\r\n                                          required\r\n                                        >\r\n                                          <option>Choisissez une ville</option>\r\n                                          {town\r\n                                            ? town.map(item => (\r\n                                                <option value={item.id} key={item.id}>\r\n                                                  {item.townName}\r\n                                                </option>\r\n                                              ))\r\n                                            : bestTowns.map(item => (\r\n                                                <option value={item.id} key={item.id}>\r\n                                                  {item.townName}\r\n                                                </option>\r\n                                              ))}\r\n                                        </select>\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          id=\"centerName\"\r\n                                          name=\"centerName\"\r\n                                          placeholder=\"Nom du Centre d'examen\"\r\n                                          value={this.state.centerName}\r\n                                          onChange={this.handleChange}\r\n                                          required\r\n                                        />\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          id=\"centerCode\"\r\n                                          name=\"centerCode\"\r\n                                          placeholder=\"Code centre d'examen\"\r\n                                          value={this.state.centerCode}\r\n                                          onChange={this.handleChange}\r\n                                          required\r\n                                        />\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          id=\"centerNumber\"\r\n                                          name=\"centerNumber\"\r\n                                          placeholder=\"No du Centre\"\r\n                                          value={this.state.centerNumber}\r\n                                          onChange={this.handleChange}\r\n                                          required\r\n                                        />\r\n                                        <div className=\"submitButton\">\r\n                                          <button type=\"submit\">Valid{loading ? \"ation en cours\" : \"er\"}</button>\r\n                                        </div>\r\n                                      </fieldset>\r\n                                    </Form>\r\n                                  </StyledDivision>\r\n                                )}\r\n                              </Mutation>\r\n                            );\r\n                          }}\r\n                        </Query>\r\n                      );\r\n                    }}\r\n                  </Query>\r\n                );\r\n              }}\r\n            </Query>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateCenter;\r\n"],"mappings":"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","sourceRoot":""}