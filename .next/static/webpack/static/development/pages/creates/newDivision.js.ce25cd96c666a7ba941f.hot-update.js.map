{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newDivision.js.ce25cd96c666a7ba941f.hot-update.js","sources":["webpack:///./src/components/division/CreateDivision.jsx","webpack:///./src/components/queries&Mutations&Functions/Functions.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Mutation, Query } from 'react-apollo';\r\nimport Form from '../styles/Form';\r\nimport Error from '../ErrorMessage';\r\nimport styled from 'styled-components';\r\nimport { getAllRegionsQuery } from '../queries&Mutations&Functions/Queries';\r\nimport { createDivisionMutation } from '../queries&Mutations&Functions/Mutations';\r\nimport { getSelectedObject } from '../queries&Mutations&Functions/Functions';\r\n\r\nconst StyledDivision = styled.div`\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\tmargin: 0 auto;\r\n\tmin-width: 350px;\r\n`;\r\n\r\nclass CreateDivision extends Component {\r\n\tstate = {\r\n\t\tdivName: '',\r\n\t\tdivCode: '',\r\n\t\tregionID: '12',\r\n\t\tregion: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tconst { name, value, type } = e.target;\r\n\t\tconst val = type === 'number' ? parseInt(value) : value;\r\n\t\tthis.setState({ [name]: val });\r\n\t};\r\n\r\n\tresetForm() {\r\n\t\tthis.setState({ divName: '', divCode: '' });\r\n\t}\r\n\tgetSelectedRegion = (dataSource) => {\r\n\t\t// 1 copy the data source\r\n\t\tif (dataSource.length > 0) {\r\n\t\t\tconst tempRegions = [ ...dataSource ];\r\n\t\t\t// get the region object\r\n\t\t\tconst selectedRegion = tempRegions.find((item) => item.id === this.state.regionID);\r\n\t\t\tconsole.log('getting selected region');\r\n\t\t\tconsole.log(selectedRegion);\r\n\t\t\treturn selectedRegion;\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Query query={getAllRegionsQuery}>\r\n\t\t\t\t{({ data, loading, error }) => {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tloading && <p>Loading...</p>;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\terror && <Error error={error} />;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst { regions } = data;\r\n\t\t\t\t\t//'getting region from the state')\r\n\t\t\t\t\tconsole.log(this.state.region);\r\n\r\n\t\t\t\t\tconst getRegions =\r\n\t\t\t\t\t\tregions &&\r\n\t\t\t\t\t\tregions.map((item) => (\r\n\t\t\t\t\t\t\t<option value={item.id} key={item.id}>\r\n\t\t\t\t\t\t\t\t{item.regName}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t));\r\n\r\n\t\t\t\t\t//*******important function'stripping off __typename')\r\n\t\t\t\t\tconst refinedRegions = regions.map(({ __typename, ...others }) => others);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Mutation\r\n\t\t\t\t\t\t\tmutation={createDivisionMutation}\r\n\t\t\t\t\t\t\tvariables={{\r\n\t\t\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\t\t\tregion: getSelectedObject(refinedRegions, regionID)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{(createDivision, { loading, error }) => (\r\n\t\t\t\t\t\t\t\t<StyledDivision>\r\n\t\t\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={async (e) => {\r\n\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\tconst res = await createDivision();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\t\t\t\t\tthis.resetForm();\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<h5>New Division</h5>\r\n\t\t\t\t\t\t\t\t\t\t<Error error={error} />\r\n\t\t\t\t\t\t\t\t\t\t<fieldset disabled={loading} aria-busy={loading}>\r\n\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"regionID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"regionID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.regionID}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Choisissez une region</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{getRegions}\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"divName\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"divName\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nom Departement\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.divName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"divCode\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"divCode\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Code departement\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.divCode}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"submitButton\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\">Valid{loading ? 'ation en cours' : 'er'}</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t</StyledDivision>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Mutation>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Query>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CreateDivision;\r\n","import React from \"react\";\r\n\r\nconst uniqueCodeGen = keyLength => {\r\n  var i,\r\n    key = \"\",\r\n    //  characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    characters = \"abcdefghijklmnopqrstuvwxyzABCDEF@#$%&GHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n\r\n  var charactersLength = characters.length;\r\n\r\n  for (i = 0; i < keyLength; i++) {\r\n    key += characters.substr(Math.floor(Math.random() * charactersLength + 1), 1);\r\n  }\r\n\r\n  return key;\r\n};\r\n\r\nconst objectFromCode = codeValue => {\r\n  const storedObject = {\r\n    candCode: `${codeValue}`\r\n  };\r\n  return storedObject;\r\n};\r\n\r\nconst getSelectedObject = (dataSource,  objectID)=> {\r\n    // 1 copy the data source\r\n    if (dataSource.length > 0) {\r\n      const tempObjects = [...dataSource];\r\n      // get the region object\r\n      const selectedObject = tempObjects.find(item => item.id === this.state.objectID);\r\n      console.log(\"getting selected region\");\r\n      console.log(selectedObject);\r\n      return selectedObject;\r\n    }\r\n  };\r\n\r\nexport { objectFromCode, uniqueCodeGen ,getSelectedObject};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAdA;AACA;AAAA;AAAA;AAAA;AACA;;;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AAQA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAEA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5CA;AAoDA;AAGA;;;;AApHA;AACA;AAsHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}