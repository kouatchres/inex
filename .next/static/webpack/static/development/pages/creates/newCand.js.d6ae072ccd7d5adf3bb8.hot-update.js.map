{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newCand.js.d6ae072ccd7d5adf3bb8.hot-update.js","sources":["webpack:///./src/components/candidate/CreateNewCandidate.jsx"],"sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Mutation, Query } from 'react-apollo'\r\nimport { BiggestStyledPage } from '../styles/StyledPage'\r\nimport Error from '../ErrorMessage.js';\r\nimport { Formik, Form } from 'formik';\r\nimport Router from 'next/router';\r\nimport { SygexSelect, SygexInput, StyledForm, ButtonStyled, StyledButton } from '../formikForms/FormInputs'\r\nimport styled from 'styled-components';\r\nimport * as Yup from 'yup';\r\nimport { getAllGendersQuery } from '../queries&Mutations&Functions/Queries';\r\nimport { createCandidateMutation } from '../queries&Mutations&Functions/Mutations';\r\nimport { uniqueCodeGen, getSelectedObject } from '../queries&Mutations&Functions/Functions';\r\n\r\n\r\nconst InputGroup = styled.div`\r\n    \r\n    display: flex;\r\n    flex-direction:column;\r\n    margin:0 1rem;\r\n    min-width:12rem;\r\n   \r\n`;\r\n\r\nconst PicFrame = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin-bottom: 1rem;\r\n\timg {\r\n\t\tmargin-top: 1rem;\r\n\t\tmargin-left: 5rem;\r\n\t\theight: 15rem;\r\n\t\twidth: 15rem;\r\n\t\tborder-radius: 15px;\r\n\t\tbackground-size: contain;\r\n\t\tbackground-position: center;\r\n\t}\r\n`;\r\nconst TwoGroups = styled.div`\r\n    \r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\r\n   \r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\nflex-direction:column;\r\nmin-width:15rem;\r\nimg {\r\n\t\tmargin-top: 0.15rem;\r\n\t\tmargin-left: 0.5rem;\r\n\t\theight: 13rem;\r\n\t\twidth: 13rem;\r\n\t\tborder-radius: 0.9rem;\r\n\t\tbackground-size: contain;\r\n\t\tbackground-position: center;\r\n\t}\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    cand1stName: Yup\r\n        .string()\r\n        .required(\"Nom obligatoire\"),\r\n    cand2ndName: Yup\r\n        .string()\r\n        .required(\"Prenom obligatoire\"),\r\n    cand3rdName: Yup\r\n        .string(),\r\n    momName: Yup\r\n        .string()\r\n        .required(\"Noms de la mere obligatoire\"),\r\n    dadName: Yup\r\n        .string()\r\n        .required(\"Noms du pere obligatoire\"),\r\n    placeOfBirth: Yup\r\n        .string()\r\n        .required(\"Lieu de naissance obligatoire\"),\r\n    birthCertNumber: Yup\r\n        .string()\r\n        .required(\"Numero de l'acte de naissance obligatoire\"),\r\n    phoneNumb: Yup\r\n        .number()\r\n        .required(\"Numero de portable obligatoire\"),\r\n    // image: Yup\r\n    //     .string()\r\n    //     .required(\"Photo obligtoire\"),\r\n    genderID: Yup\r\n        .string()\r\n        .required(\"Choix de votre sexe obligatoire\"),\r\n    dateOfBirth: Yup\r\n        .date()\r\n        .min(new Date('01-01-1900'))\r\n        .max(new Date())\r\n        .required(\"date de naissance obligatoire\"),\r\n    email: Yup\r\n        .string()\r\n        .email('Email invalide')\r\n        .required('Email obligatoire'),\r\n});\r\n\r\nclass CreateNewCandidate extends Component {\r\n\r\n    initialValues = {\r\n        cand1stName: '',\r\n        cand2ndName: '',\r\n        cand3rdName: '',\r\n        momName: '',\r\n        dadName: '',\r\n        email: '',\r\n        image: \"\",\r\n        phoneNumb: '',\r\n        placeOfBirth: '',\r\n        dateOfBirth: '',\r\n        birthCertNumber: '',\r\n        genderID: \"\"\r\n    };\r\n\r\n    state = { image: \"\" };\r\n\r\n    uploadFile = async (e) => {\r\n        const files = e.target.files;\r\n        const data = new FormData();\r\n        data.append('file', files[0]);\r\n        data.append('upload_preset', 'ineximages');\r\n        const res = await fetch('https://api.cloudinary.com/v1_1/inex/image/upload', {\r\n            method: 'POST',\r\n            body: data\r\n        });\r\n        const file = await res.json();\r\n        console.log(file);\r\n        this.setState({ image: file.secure_url });\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state\r\n        // this.initialValues.image = image\r\n\r\n        return (\r\n            <Query query={getAllGendersQuery} >\r\n                {({ data, loading, error }) => {\r\n                    {\r\n                        loading && <p>Loading...</p>;\r\n                    }\r\n                    {\r\n                        error && <Error error={error} />;\r\n                    }\r\n                    const { genders } = data\r\n                    const refinedGenders = genders && genders.map(({ __typename, genderName, ...others }) => others)\r\n                    const genderOptions = genders && genders.map((item) => (<option value={item.id} key={item.id}>{item.genderName}</option>))\r\n                    console.log(refinedGenders);\r\n                    console.log(image);\r\n\r\n                    return (\r\n                        <Mutation mutation={createCandidateMutation}>\r\n                            {(createCandidate, { loading, error }) => (\r\n\r\n                                <Formik\r\n                                    method=\"POST\"\r\n                                    initialValues={this.initialValues}\r\n                                    validationSchema={validationSchema}\r\n                                    onSubmit={async (values, actions, setSubmitting, resetForm) => {\r\n                                        const res = await createCandidate({\r\n                                            variables:\r\n                                            {\r\n                                                ...values,\r\n                                                image,\r\n                                                gender: refinedGenders && getSelectedObject(refinedGenders, values.genderID),\r\n                                                candCode: uniqueCodeGen(12),\r\n                                            }\r\n                                        });\r\n                                        Router.push({\r\n                                            pathname: '/show/singleCand',\r\n                                            query: {\r\n                                                id: res.data.createCandidate.id\r\n                                            }\r\n                                        });\r\n                                        setTimeout(() => {\r\n                                            console.log(JSON.stringify(values, null, 2));\r\n                                            console.log(res);\r\n                                            actions.resetForm(true);\r\n                                            actions.setSubmitting(false);\r\n                                        }, 400);\r\n                                    }}\r\n\r\n                                >\r\n                                    {({ values }) => (\r\n                                        <BiggestStyledPage>\r\n                                            <h4>Créer un Candidat</h4>\r\n                                            <Error error={error} />\r\n                                            <StyledForm disabled={loading} aria-busy={loading} >\r\n                                                <Form>\r\n                                                    <AllControls>\r\n                                                        <TwoGroups>\r\n\r\n                                                            <InputGroup>\r\n                                                                <SygexInput name=\"cand1stName\" type=\"text\" placeholder=\"Nom\" />\r\n                                                                <SygexInput name=\"cand2ndName\" type=\"text\" placeholder=\"Prénom\" />\r\n                                                                <SygexInput name=\"cand3rdName\" type=\"text\" placeholder=\"Autres Noms\" />\r\n                                                                <SygexInput name=\"placeOfBirth\" type=\"text\" placeholder=\"Lieu de Naissance\" />\r\n                                                                <SygexInput name=\"dateOfBirth\" format=\"d MMM yyyy\" type=\"date\" placeholder=\"Date de Naissance\" />\r\n                                                                <SygexInput name=\"birthCertNumber\" type=\"text\" placeholder=\"No l'Acte de Naissance\" />\r\n                                                                <SygexInput name=\"dadName\" type=\"text\" placeholder=\"Noms du pere\" />\r\n                                                                <SygexInput name=\"momName\" type=\"text\" placeholder=\"Noms de la mere\" />\r\n                                                            </InputGroup>\r\n                                                            <InputGroup>\r\n                                                                <SygexInput name=\"file\" type=\"file\" onChange={this.uploadFile} />\r\n                                                                <SygexSelect name=\"genderID\" >\r\n                                                                    <option>Le Sexe</option>\r\n                                                                    {genderOptions}\r\n                                                                </SygexSelect>\r\n                                                                <div>{image && <img src={image} alt=\"Upload image\" />}</div>\r\n                                                                <SygexInput name=\"phoneNumb\" type=\"number\" placeholder=\"No de portable\" />\r\n                                                                <SygexInput name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n                                                            </InputGroup>\r\n                                                        </TwoGroups>\r\n                                                        <ButtonStyled>\r\n                                                            <StyledButton type=\"submit\">Valid{loading ? 'ation en cours' : 'er'}</StyledButton>\r\n                                                        </ButtonStyled>\r\n                                                    </AllControls>\r\n                                                </Form>\r\n                                            </StyledForm>\r\n                                        </BiggestStyledPage>\r\n                                    )}\r\n                                </Formik>\r\n                            )\r\n                            }\r\n                        </Mutation>\r\n\r\n                    )\r\n                }\r\n                }\r\n            </Query>\r\n\r\n        );\r\n    }\r\n}\r\nexport default CreateNewCandidate;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAeA;AACA;AAGA;AAGA;AAEA;AAGA;AAGA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AAGA;AAKA;AAnCA;AACA;AAwCA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AAAA;AAAA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAMA;AACA;AAFA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAatBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AA/BA;AA2EA;AAKA;;;;AAtIA;AACA;AAuIA;;;;A","sourceRoot":""}