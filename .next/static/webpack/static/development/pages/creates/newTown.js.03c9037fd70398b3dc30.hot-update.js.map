{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newTown.js.03c9037fd70398b3dc30.hot-update.js","sources":["webpack:///./src/components/town/CreateTown.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport Form from \"../styles/Form\";\r\nimport Error from \"../ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport { createTownMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\r\nimport {\r\n  getAllRegionsQuery,\r\n  getDivisionsOfARegionQuery,\r\n  getSubDivisionsOfADivisionQuery\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst StyledDivision = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 350px;\r\n`;\r\n\r\nclass CreateTown extends Component {\r\n  state = {\r\n    townName: \"\",\r\n    townCode: \"\",\r\n    divisionID: \"12\",\r\n    subDivisionID: \"12\",\r\n    regionID: \"12\",\r\n    region: \"\",\r\n    division: \"\",\r\n    subDiv: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value, type } = e.target;\r\n    const setValue = type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [name]: setValue });\r\n  };\r\n  resetForm() {\r\n    this.setState({ townName: \"\", townCode: \"\" });\r\n  }\r\n \r\n  render() {\r\n    const { regionID, divisionID, subDivisionID} = this.state\r\n    return (\r\n      <Query query={getAllRegionsQuery}>\r\n        {({ data, loading, error }) => {\r\n          {\r\n            loading && <p>Loading...</p>;\r\n          }\r\n          {\r\n            error && <Error error={error} />;\r\n          }\r\n          const { regions } = data;\r\n          const anyRegion = regions[0];\r\n\r\n          //prepare data for the region select options\r\n          const regionsOptions = regions.map(item => (\r\n            <option value={item.id} key={item.id}>\r\n              {item.regName}\r\n            </option>\r\n          ));\r\n          return (\r\n            <Query query={getDivisionsOfARegionQuery} variables={getSelectedObject(regions, regionID) || anyRegion}>\r\n              {({ data, loading, error }) => {\r\n                {\r\n                  loading && <p>Loading...</p>;\r\n                }\r\n                {\r\n                  error && <Error error={error} />;\r\n                }\r\n\r\n                const { region } = data;\r\n                const { division } = region;\r\n                const anyDivision = division[0];\r\n\r\n                const divisionsOptions = division.map(item => (\r\n                  <option value={item.id} key={item.id}>\r\n                    {item.divName}\r\n                  </option>\r\n                ));\r\n                return (\r\n                  <Query query={getSubDivisionsOfADivisionQuery} variables={getSelectedObject(division, divisionID) || anyDivision}>\r\n                    {({ data, loading, error }) => {\r\n                      {\r\n                        loading && <p>Loading...</p>;\r\n                      }\r\n                      {\r\n                        error && <Error error={error} />;\r\n                      }\r\n                      const { division: departement } = data;\r\n                      const { subDivision: arrondissement } = departement;\r\n                      console.log(arrondissement);\r\n                      const refinedSubDiv =\r\n                        arrondissement && arrondissement.map(({ __typename, subDivName, ...others }) => others);\r\n\r\n                      const subDivisionsOptions = arrondissement.map(item => (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.subDivName}\r\n                        </option>\r\n                      ));\r\n\r\n                      return (\r\n                        <Mutation\r\n                          mutation={createTownMutation}\r\n                          variables={{\r\n                            ...this.state,\r\n                            subDiv:refinedSubDiv && getSelectedObject(refinedSubDiv, subDivisionID)\r\n                          }}\r\n                        >\r\n                          {(createTown, { loading, error }) => (\r\n                            <Form\r\n                              onSubmit={async e => {\r\n                                e.preventDefault();\r\n                                const res = await createTown();\r\n                                console.log(res);\r\n                                this.resetForm();\r\n                              }}\r\n                            >\r\n                              <h5>Nouvelle Ville</h5>\r\n                              <Error error={error} />\r\n                              <fieldset disabled={loading} aria-busy={loading}>\r\n                                <StyledDivision>\r\n                                  <select\r\n                                    type=\"select\"\r\n                                    id=\"regionID\"\r\n                                    name=\"regionID\"\r\n                                    value={this.state.regionID}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                  >\r\n                                    <option>choisssez une region</option>\r\n                                    {regionsOptions}\r\n                                  </select>\r\n\r\n                                  <select\r\n                                    type=\"select\"\r\n                                    id=\"divisionID\"\r\n                                    name=\"divisionID\"\r\n                                    value={this.state.divisionID}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                  >\r\n                                    <option> choisissez un departement</option>\r\n                                    {divisionsOptions}\r\n                                  </select>\r\n                                  <select\r\n                                    type=\"select\"\r\n                                    id=\"subDivisionID\"\r\n                                    name=\"subDivisionID\"\r\n                                    value={this.state.subDivisionID}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                  >\r\n                                    <option> choisissez un arrondissement</option>\r\n                                    {subDivisionsOptions}\r\n                                  </select>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    id=\"townName\"\r\n                                    name=\"townName\"\r\n                                    placeholder=\"Nom de la ville\"\r\n                                    value={this.state.subDivName}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                  />\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    id=\"townCode\"\r\n                                    name=\"townCode\"\r\n                                    placeholder=\"Code de la ville\"\r\n                                    value={this.state.subDivCode}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                  />\r\n                                  <div className=\"submitButton\">\r\n                                    <button type=\"submit\">Valid{loading ? \"ation en cours\" : \"er\"}</button>\r\n                                  </div>\r\n                                </StyledDivision>\r\n                              </fieldset>\r\n                            </Form>\r\n                          )}\r\n                        </Mutation>\r\n                      );\r\n                    }}\r\n                  </Query>\r\n                );\r\n              }}\r\n            </Query>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTown;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAUA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAEA;AACA;AAEA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlEA;AA0EA;AAGA;AAGA;AAGA;;;;AA5KA;AACA;AA8KA;;;;A","sourceRoot":""}