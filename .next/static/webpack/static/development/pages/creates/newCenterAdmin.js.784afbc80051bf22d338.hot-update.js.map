{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newCenterAdmin.js.784afbc80051bf22d338.hot-update.js","sources":["webpack:///./src/components/centerAdmin/CenterAdmin.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Mutation, Query} from \"react-apollo\";\r\nimport Form from \"../styles/Form\";\r\nimport Error from \"../ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport {createCenterAdminMutation} from '../queries&Mutations&Functions/Mutations'\r\nimport {uniqueCodeGen, getSelectedObject} from '../queries&Mutations&Functions/Functions'\r\nimport {\r\n  getAllRanksQuery,\r\n  getAllRegionsQuery,\r\n  getDivisionsOfARegionQuery,\r\n  getSubDivisionsOfADivisionQuery,\r\n  getCentersOfATownQuery,\r\n  getTownsOfASubDivisionQuery,\r\n  getAllExamsQuery,\r\n  getAllSessionsQuery,\r\n\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\n\r\n\r\nconst StyledDivision = styled.div `\r\n  display: grid;\r\n  grid-template-columns:repeat(2, 1fr);\r\n  grid-gap:2rem;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 82rem;\r\n\r\n`;\r\n\r\nconst CenterSelect = styled.div `\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 40rem;\r\n`;\r\n\r\nconst OtherSelect = styled.div `\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 40rem;\r\n`;\r\n\r\n\r\n\r\nclass CenterAdmin extends Component {\r\n    state = {\r\n       \r\n        rankID: \"12\",\r\n        divisionID: \"12\",\r\n        subDivisionID: \"12\",\r\n        regionID: \"12\",\r\n        centerID: \"12\",\r\n        examID: \"12\",\r\n        sessionID: \"12\",\r\n        authName: \"\",\r\n        authMatricule: \"\",\r\n        authCNI: \"\",\r\n        authPhone: \"\",\r\n     \r\n    };\r\n\r\n    handleChange = e => {\r\n        const {name, value, type} = e.target;\r\n        const val = type === \"number\"? parseInt(value): value;\r\n        this.setState({[name]: val});\r\n    };\r\n\r\n\r\n   \r\n    getSessionRank =()=>{\r\n      const sessionRank= `${this.state.sessionID}-${this.state.rankID}`\r\n      return sessionRank\r\n    }\r\n\r\n\r\nresetForm=()=>{\r\n  this.setState({ authMatricule:\"\" , authCNI:\"\", authName:\"\", authPhone:\"\"})\r\n}\r\n\r\n    render() {\r\n  const { regionID, divisionID, subDivisionID, townID,centerID, examID, sessionID, rankID,} = this.state\r\n        return (\r\n            <Query query={getAllRegionsQuery}>\r\n                {({data, loading, error}) => {\r\n                    {\r\n                        loading && <p>Loading...</p>;\r\n                    }\r\n                    {\r\n                        error && <Error error={error}/>;\r\n                    }\r\n                    const {regions} = data;\r\n                    {/* const anyRegion = regions[0]; */}\r\n     //prepare data for the region select options\r\n     const regionsOptions = regions.map(item => (\r\n                        <option value={item.id} key={item.id}>\r\n                            {item.regName}\r\n                        </option>\r\n                    ));\r\n\r\n //*******important function'stripping off __typename')\r\n const refinedRegions = regions.map(({ __typename, ...others }) => others);\r\n\r\n                    return (\r\n                        <Query\r\n                            query={getDivisionsOfARegionQuery}\r\n                            variables={ regions && getSelectedObject(regions, regionID)}>\r\n                            {({data, loading, error}) => {\r\n                                {\r\n                                    loading && <p>Loading...</p>;\r\n                                }\r\n                                {\r\n                                    error && <Error error={error}/>;\r\n                                }\r\n\r\n                                const {region: province} = data;\r\n                                const {division} = province;\r\n                                {/* const anyDivision = division[0]; */}\r\n\r\n                                const divisionsOptions = division.map(item => (\r\n                                    <option value={item.id} key={item.id}>\r\n                                        {item.divName}\r\n                                    </option>\r\n                                ));\r\n\r\n                         \r\n                                return (\r\n                                    <Query\r\n                                        query={getSubDivisionsOfADivisionQuery}\r\n                                        variables={division && getSelectedObject(division,divisionID)}>\r\n                                        {({data, loading, error}) => {\r\n                                            {\r\n                                                loading && <p>Loading...</p>;\r\n                                            }\r\n                                            {\r\n                                                error && <Error error={error}/>;\r\n                                            }\r\n                                          const {division} = data;\r\n                                            const {subDivision:arrondissement } = division\r\n                                        console.log(arrondissement)\r\n                                            const subDivisionsOptions =arrondissement.map(item => (\r\n                                                    <option value={item.id} key={item.id}>\r\n                                                        {item.subDivName}\r\n                                                    </option>\r\n                                                ));  \r\n\r\n\r\n                                            return (\r\n                                                <Query\r\n                                                    query={getTownsOfASubDivisionQuery}\r\n                                                    variables={arrondissement && getSelectedObject(arrondissement,subDivisionID)  }\r\n                                                    >\r\n                                                    {({data, loading, error}) => {\r\n                                                        {\r\n                                                            loading && <p>Loding...</p>;\r\n                                                        }\r\n                                                        {\r\n                                                            error && <Error error={error}/>;\r\n                                                        }\r\n\r\n                                                        console.log(\"these are the towns of the selected Sub division\");\r\n                                                      \r\n                                                       const {subDivision: district} = data; \r\n                                                       console.log(data)\r\n                                                       const {  town} = {...district}\r\n                                                       console.log(town)\r\n                                                                                            \r\n                                                return (\r\n                                                <Query\r\n                                                    query={getCentersOfATownQuery}\r\n                                                    variables={town && getSelectedObject(town,townID)  }\r\n\r\n                                                     >\r\n                                                    {({data, loading, error}) => {\r\n                                                        {\r\n                                                            loading && <p>Loding...</p>;\r\n                                                        }\r\n                                                        {\r\n                                                            error && <Error error={error}/>;\r\n                                                        }\r\n                                                         const { town: ville} =data\r\n                                                          const theTowns= {...ville}\r\n                                                          const { center}= theTowns\r\n                                                          console.log(center) \r\n                                          const refinedCenter = center && center.map(({__typename, centerName,...others})=> others)\r\n                                                          return (\r\n\r\n                                                            <Query query={getAllSessionsQuery}>\r\n                                                                {({data, loading, error}) => {\r\n                                                                  {\r\n                                                                    loading && <p>loading...</p>;\r\n                                                                }\r\n                                                                {\r\n                                                                    error && <Error error={error}/>\r\n                                                                }\r\n\r\n                                                                const {sessions} = data;\r\n                                                                const refinedSessions =sessions && sessions.map(({__typename, sessionName,...others})=>others)\r\n                                                                \r\n                                                                return (\r\n                                                            <Query query={getAllRanksQuery}>\r\n                                                                {({data, loading, error}) => {\r\n                                                                  {\r\n                                                                    loading && <p>loading...</p>;\r\n                                                                }\r\n                                                                {\r\n                                                                    error && <Error error={error}/>\r\n                                                                }\r\n\r\n                                                                const {ranks} = data;\r\n                                                                console.log(ranks)\r\n                                                                const refinedRanks= ranks && ranks.map(({__typename, rankName,rankCode,...others})=>others)\r\n                                                                 \r\n                                                                     return (\r\n\r\n                                                                            <Query query={getAllExamsQuery}>\r\n                                                                                {({data, loading, error}) => {\r\n                                                                                 {   loading && <p>loading...</p>\r\n                                                                                }\r\n                                                                                {\r\n                                                                                    error && <Error error={error}/>\r\n                                                                                }\r\n                                                                              \r\n\r\n                                                                                const {exams} = data;\r\n                                                                            const refinedExams= exams && exams.map(({__typename, examName,...others})=>others)\r\n                                                                            \r\n                                                                               return (\r\n                                                                                    <Mutation\r\n                                                                                        mutation={createCenterAdminMutation}\r\n                                                                                        variables={{\r\n                                                                                        ...this.state,\r\n                                                                                        exam: exams &&  getSelectedObject(refinedExams,examID),\r\n                                                                                        rank: ranks &&  getSelectedObject(refinedRanks,rankID),\r\n                                                                                        session: sessions  && getSelectedObject(refinedSessions,sessionID),\r\n                                                                                        center: center && getSelectedObject(refinedCenter,centerID),\r\n                                                                                        authCode: uniqueCodeGen(8),\r\n                                                                                        \r\n                                                                                        \r\n\r\n\r\n                                                                                    }}>\r\n                                                                                        {(createCenterAdmin, {loading, error}) => (\r\n                                                                                          <Form\r\n                                                                                                    onSubmit={async e => {\r\n                                                                                                    e.preventDefault();\r\n                                                                                                    const res = await createCenterAdmin();\r\n                                                                                                    console.log(res);\r\n                                                                                                    this.resetForm()\r\n                                                                                                }}>\r\n                                                                                                    <h4>inscription des Authorites du centre</h4>\r\n                                                                                                    <Error error={error}/>\r\n                                                                                                    <fieldset disabled={loading} aria-busy={loading}>\r\n                                                                                            <StyledDivision>\r\n                                                                                                    <CenterSelect>\r\n                                                                                                  <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"regionID\"\r\n                                                                                                            name=\"regionID\"\r\n                                                                                                            placeholder=\"select a region\"\r\n                                                                                                            value={this.state.regionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>Choisissez une region</option>\r\n                                                                                                            {regionsOptions }\r\n                                                                                                        </select>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"divisionID\"\r\n                                                                                                            name=\"divisionID\"\r\n                                                                                                            value={this.state.divisionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>Choisissez un departement</option>\r\n                                                                                                            {division && divisionsOptions }\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"subDivisionID\"\r\n                                                                                                            name=\"subDivisionID\"\r\n                                                                                                            value={this.state.subDivisionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>choisissez un Arrondissement</option>\r\n                                                                                                            {arrondissement && subDivisionsOptions}\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"townID\"\r\n                                                                                                            name=\"townID\"\r\n                                                                                                            value={this.state.townID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>choisissez une Ville</option>\r\n                                                                                                           {town && town.map(item=>(\r\n                                                                                                            <option key={item.id} value={item.id} >\r\n                                                                                                              {item.townName}  </option>\r\n                                                                                                          ))}\r\n\r\n\r\n                                                                                                        </select>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"centerD\"\r\n                                                                                                            name=\"centerID\"\r\n                                                                                                            value={this.state.centerID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            \r\n                                                                                                              <option>Choisissez un Centre d'Examen</option>\r\n                                                                                                              {center && center.map(item => (\r\n                                                                                                              <option key={item.id} value={item.id}>\r\n                                                                                                                {item.centerName}</option>))  } \r\n                                                                                                        </select>\r\n    \r\n                                                                                                        </CenterSelect>\r\n                                                                                                        <OtherSelect>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"examID\"\r\n                                                                                                            name=\"examID\"\r\n                                                                                                            value={this.state.examID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n \r\n                                                                                                            <option>Choisissez un Examen</option>\r\n                                                                                                              {exams && exams.map(item => (\r\n                                                                                                              <option key={item.id} value={item.id}>{item.examName}</option>))  }\r\n                                                                                                        </select>\r\n\r\n                                                                                                      \r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"sessionID\"\r\n                                                                                                            name=\"sessionID\"\r\n                                                                                                            value={this.state.sessionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>Choisissez la Session</option>\r\n                                                                                                              {sessions && sessions.map(item => (\r\n                                                                                                              <option key={item.id} value={item.id}>{item.sessionName}</option>))  }\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"rankID\"\r\n                                                                                                            name=\"rankID\"\r\n                                                                                                            value={this.state.rankID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                                      <option>Le Rang que vous occupez</option>\r\n                                                                                                            {ranks && ranks.map(item=> (\r\n                                                                                                              <option key={item.id} value={item.id}  >\r\n                                                                                                                {item.rankName}  </option>))}\r\n                                                                                                        </select>\r\n\r\n                                                                                                          <input\r\n                                                                                                              type=\"text\"\r\n                                                                                                              id=\"authName\"\r\n                                                                                                              name=\"authName\"\r\n                                                                                                              placeholder=\"Noms de l'authorite\"\r\n                                                                                                              value={this.state.authName}\r\n                                                                                                              onChange={this.handleChange}\r\n                                                                                                              required\r\n                                                                                                            />\r\n                                                                                                          <input\r\n                                                                                                              type=\"text\"\r\n                                                                                                              id=\"authPhone\"\r\n                                                                                                              name=\"authPhone\"\r\n                                                                                                              placeholder=\"No Tel:\"\r\n                                                                                                              value={this.state.authPhone}\r\n                                                                                                              onChange={this.handleChange}\r\n                                                                                                              required\r\n                                                                                                            />\r\n                                                                                                          <input\r\n                                                                                                              type=\"text\"\r\n                                                                                                              id=\"authMatricule\"\r\n                                                                                                              name=\"authMatricule\"\r\n                                                                                                              placeholder=\"Matricule\"\r\n                                                                                                              value={this.state.authMatricule}\r\n                                                                                                              onChange={this.handleChange}\r\n                                                                                                              required\r\n                                                                                                            />\r\n                                                                                                          <input\r\n                                                                                                              type=\"text\"\r\n                                                                                                              id=\"authCNI\"\r\n                                                                                                              name=\"authCNI\"\r\n                                                                                                              placeholder=\"No CNI\"\r\n                                                                                                              value={this.state.authCNI}\r\n                                                                                                              onChange={this.handleChange}\r\n                                                                                                              required\r\n                                                                                                            />\r\n                                                                                                        </OtherSelect>\r\n                                                                                                       \r\n                                                                                                        <div className=\"submitButton\">\r\n                                                                                                            <button type=\"submit\">Valid{loading? \"ation en cours\" : \"er\"}</button>\r\n                                                                                                        </div>\r\n                                                                                            </StyledDivision>\r\n                                                                                                    </fieldset>\r\n                                                                                                </Form>\r\n                                                                                        )}\r\n                                                                                    </Mutation>\r\n                                                                               \r\n                                                                        );\r\n                                                                      }\r\n                                                                    }\r\n                                                                    </Query>\r\n                                                                );\r\n                                                                }}\r\n                                                            </Query>\r\n                                                                );\r\n                                                                }}\r\n                                                            </Query>\r\n                                                        );\r\n                                                    }}\r\n                                                </Query>\r\n                                            );\r\n                                        }}\r\n                                    </Query>\r\n                                );\r\n                            }}\r\n                        </Query>\r\n                    );\r\n                }}\r\n            </Query>\r\n                    );\r\n                }}\r\n            </Query>\r\n                   \r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default CenterAdmin;\r\n"],"mappings":"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","sourceRoot":""}