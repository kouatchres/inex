{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newMarks.js.3a5ed1de5ffedb2451f3.hot-update.js","sources":["webpack:///./src/components/score/MuiMarks.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport Form from \"../styles/Form\";\r\nimport Error from \"../ErrorMessage\";\r\nimport styled from \"styled-components\";\r\n// import \"typeface-roboto\";\r\nimport { updateScoreMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { getSelectedObject } from \"../queries&Mutations&Functions/Functions\";\r\nimport {\r\n  getAllEducationTypesQuery,\r\n  getAllSubjectsOfASeriesQuery,\r\n  getAllSeriesOfAnEducationTypeQuery\r\n} from \"../queries&Mutations&Functions/Queries\";\r\nimport { Select, TextField, Typography, Button, Paper, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  paper: {\r\n    background: \"#359\"\r\n  },\r\n  typography: {\r\n    fontSize: 12\r\n  }\r\n});\r\nconst StyledDivision = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 52rem;\r\n`;\r\n\r\nconst CenterSelect = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 40rem;\r\n`;\r\n\r\nconst OtherSelect = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 40rem;\r\n`;\r\n\r\nclass MuiMarks extends Component {\r\n  state = {\r\n    subjectAve: \"\",\r\n    seriesID: \"12\",\r\n    examID: \"12\",\r\n    educTypeID: \"12\",\r\n    sessionID: \"\",\r\n    candExamSecretCode: \"\",\r\n    MuiText: \"\",\r\n    subjectSeriesID: \"ck5thzgfrwmow09352gytkff6\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n  resetForm = () => {\r\n    this.setState({ candExamSecretCode: \"\", subjectAve: \"\" });\r\n  };\r\n\r\n  makeCandVariableObject = candCodeValue => {\r\n    const storedCandidate = {\r\n      candExamSecretCode: `${candCodeValue}`\r\n    };\r\n    return storedCandidate;\r\n  };\r\n\r\n  updateItemMutation = async (e, updateMutation) => {\r\n    e.preventDefault();\r\n    console.log(\"Entering Marks!!\");\r\n    const res = await updateMutation({\r\n      variables: {\r\n        ...this.state\r\n      }\r\n    });\r\n    console.log(\"Marks entered!!\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Query query={getAllEducationTypesQuery}>\r\n        {({ data, loading, error }) => {\r\n          {\r\n            loading && <p>loading...</p>;\r\n          }\r\n          {\r\n            error && <Error error={error} />;\r\n          }\r\n          console.log(data);\r\n\r\n          const { educationTypes } = data;\r\n          console.log(educationTypes);\r\n          const educTypeOptions =\r\n            educationTypes &&\r\n            educationTypes.map(item => (\r\n              <option key={item.id} value={item.id}>\r\n                {item.educationTypeName}\r\n              </option>\r\n            ));\r\n\r\n          return (\r\n            <Query\r\n              query={getAllSeriesOfAnEducationTypeQuery}\r\n              variables={educationTypes && getSelectedObject(educationTypes, this.state.educTypeID)}\r\n            >\r\n              {({ data, loading, error }) => {\r\n                {\r\n                  loading && <p>loading...</p>;\r\n                }\r\n                {\r\n                  error && <Error error={error} />;\r\n                }\r\n                console.log(data);\r\n\r\n                const { educationType } = data;\r\n\r\n                const seriesEducType = { ...educationType };\r\n                const { series } = seriesEducType;\r\n                console.log(series);\r\n\r\n                const refinedSeries = series && series.map(({ __typename, seriesName, ...others }) => others);\r\n                const seriesOptions =\r\n                  series &&\r\n                  series.map(item => (\r\n                    <option key={item.id} value={item.id}>\r\n                      {item.seriesName}\r\n                    </option>\r\n                  ));\r\n                return (\r\n                  <Query\r\n                    query={getAllSubjectsOfASeriesQuery}\r\n                    variables={series && getSelectedObject(series, this.state.seriesID)}\r\n                  >\r\n                    {({ data, loading, error }) => {\r\n                      {\r\n                        loading && <p>loading...</p>;\r\n                      }\r\n                      {\r\n                        error && <Error error={error} />;\r\n                      }\r\n\r\n                      console.log(data);\r\n                      const { series } = data;\r\n                      const allEducTypes = { ...series };\r\n                      const { subjectSeries } = allEducTypes;\r\n                      console.log(subjectSeries);\r\n\r\n                      const refinedSubjectSeries =\r\n                        subjectSeries && subjectSeries.map(({ __typename, subjectName, subjectCode, ...others }) => others);\r\n                      const subjectOptions =\r\n                        subjectSeries &&\r\n                        subjectSeries.map(item => (\r\n                          <option key={item.id} value={item.id}>\r\n                            {item.subjectName}\r\n                          </option>\r\n                        ));\r\n\r\n                      return (\r\n                        <Mutation\r\n                          mutation={updateScoreMutation}\r\n                          variables={{\r\n                            ...this.state,\r\n                            subjectSeries:\r\n                              refinedSubjectSeries && getSelectedObject(refinedSubjectSeries, this.state.subjectSeriesID)\r\n                          }}\r\n                        >\r\n                          {(updateScore, { loading, error }) => (\r\n                            <MuiThemeProvider theme={theme}>\r\n                              <Paper>\r\n                                <Form\r\n                                  onSubmit={async e => {\r\n                                    e.preventDefault();\r\n                                    const res = await this.updateItemMutation(e, updateScore);\r\n                                    this.resetForm();\r\n                                    console.log(res);\r\n                                  }}\r\n                                >\r\n                                  <Typography variant=\"display1\" align=\"center\" gutterBottom>\r\n                                    <h4>Inscrire les notes des candidats</h4>\r\n                                  </Typography>\r\n                                  <Error error={error} />\r\n                                  <fieldset disabled={loading} aria-busy={loading}>\r\n                                    <StyledDivision>\r\n                                      <select\r\n                                        type=\"select\"\r\n                                        id=\"educTypeID\"\r\n                                        name=\"educTypeID\"\r\n                                        value={this.state.educTypeID}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                      >\r\n                                        <option>Choisir un Type d'enseignement</option>\r\n                                        {educTypeOptions}\r\n                                      </select>\r\n                                      <select\r\n                                        type=\"select\"\r\n                                        id=\"seriesID\"\r\n                                        name=\"seriesID\"\r\n                                        value={this.state.seriesID}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                      >\r\n                                        <option>Choisir une Serie</option>\r\n                                        {seriesOptions}\r\n                                      </select>\r\n                                      <Select\r\n                                        type=\"select\"\r\n                                        id=\"subjectSeriesID\"\r\n                                        name=\"subjectSeriesID\"\r\n                                        value={this.state.subjectSeriesID}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                      >\r\n                                        <option>Choisir la matiere</option>\r\n                                        {subjectOptions}\r\n                                      </Select>\r\n                                      <TextField\r\n                                        type=\"text\"\r\n                                        id=\"candExamSecretCode\"\r\n                                        name=\"candExamSecretCode\"\r\n                                        placeholder=\"Code secret du candidat\"\r\n                                        value={this.state.candExamSecretCode}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                      />\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        step=\"0.001\"\r\n                                        min=\"0.0\"\r\n                                        max=\"20.0\"\r\n                                        id=\"subjectAve\"\r\n                                        name=\"subjectAve\"\r\n                                        placeholder=\"Note de la matiere\"\r\n                                        value={this.state.subjectAve}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                      />\r\n\r\n                                      <div className=\"submitButton\">\r\n                                        <Button type=\"submit\">Valid{loading ? \"ation en cours\" : \"er\"}</Button>\r\n                                      </div>\r\n                                    </StyledDivision>\r\n                                  </fieldset>\r\n                                </Form>\r\n                              </Paper>\r\n                            </MuiThemeProvider>\r\n                          )}\r\n                        </Mutation>\r\n                      );\r\n                    }}\r\n                  </Query>\r\n                );\r\n              }}\r\n            </Query>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MuiMarks;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AADA;AACA;AAJA;AAGA;AAKA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAUA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AACA;AAUA;AACA;AAZA;AAaaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzEA;AAmFA;AAGA;AAGA;AAGA;;;;AA3NA;AACA;AA6NA;;;;A","sourceRoot":""}