{"version":3,"file":"static/webpack/static\\development\\pages\\creates\\newRegister.js.630fe1bcb33d80f9d964.hot-update.js","sources":["webpack:///./src/components/registration/Registration.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Mutation, Query} from \"react-apollo\";\r\nimport Form from \"../styles/Form\";\r\nimport Error from \"../ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport {createRegistrationMutation} from '../queries&Mutations&Functions/Mutations'\r\nimport {getSelectedObject} from '../queries&Mutations&Functions/Functions'\r\nimport {\r\n  getAllRegionsQuery,\r\n  getDivisionsOfARegionQuery,\r\n  getSubDivisionsOfADivisionQuery,\r\n  getCentersOfATownQuery,\r\n  getTownsOfASubDivisionQuery,\r\n  getAllExamsQuery,\r\n  getAllEducTypesOfAnExam,\r\n  getAllSeriesOfAnEducationTypeQuery,\r\n  getAllSessionsQuery,\r\n\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\n\r\n\r\nconst StyledDivision = styled.div `\r\n  display: grid;\r\n  grid-template-columns:repeat(2, 1fr);\r\n  grid-gap:2rem;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  width: 55vw;\r\n\r\n`;\r\n\r\nconst CenterSelect = styled.div `\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  /* min-width: 40rem; */\r\n`;\r\n\r\nconst OtherSelect = styled.div `\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  /* min-width: 40rem; */\r\n`;\r\n\r\n\r\n\r\nclass Registration extends Component {\r\n    state = {\r\n         candCode: \"12mn\",\r\n        divisionID: \"12\",\r\n        subDivisionID: \"12\",\r\n        regionID: \"12\",\r\n        centerID: \"12\",\r\n        townID: \"12\",\r\n        sessionID: \"12\",\r\n        seriesID: \"12\",\r\n        examID: \"12\",\r\n        educTypeID: \"12\",\r\n        exam: \"\",\r\n        series: \"\",\r\n        session: \"\",\r\n        center: \"\",\r\n        candExamSession:\"\",\r\n        candidate: \"\",\r\n        subjects: \"\"\r\n     \r\n    };\r\n\r\n    handleChange = e => {\r\n        const {name, value, type} = e.target;\r\n        const val = type === \"number\"? parseInt(value): value;\r\n        this.setState({[name]: val});\r\n    };\r\n\r\n\r\n    \r\n    resetForm=()=>{\r\n        this.setState({candCode: \"\"})\r\n    }\r\n       \r\n    // getSelectedRegion = dataSource => {\r\n    //     // 1 copy the data source\r\n    //     if (dataSource.length > 0) {\r\n    //         const tempRegions = [...dataSource];\r\n    //         // get the selected region object\r\n    //         const selectedRegion = tempRegions.find(item => item.id === this.state.regionID);\r\n    //         console.log(\"getting selected region\");\r\n    //         console.log(selectedRegion);\r\n    //         return selectedRegion;\r\n    //     }\r\n    // };\r\n    // getSelectedDivision = dataSource => {\r\n    //     // 1 copy the data source\r\n    //     if (dataSource.length > 0) {\r\n    //         const tempDivisions = [...dataSource];\r\n    //         // get the selected division object\r\n    //         const selectedDivision = tempDivisions.find(item => item.id === this.state.divisionID);\r\n    //         console.log(selectedDivision);\r\n    //         return selectedDivision;\r\n    //     }\r\n    // };\r\n\r\n    \r\n    getSelectedSubDivision = (dataSource) => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempSubDivisions = [...dataSource];\r\n            // get the selected division object\r\n            const selectedSubDivision = tempSubDivisions.find(item => item.id === this.state.subDivisionID);\r\n\r\n            console.log(selectedSubDivision);\r\n            return selectedSubDivision;\r\n        }\r\n    };\r\n\r\n    getSelectedTown = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempTown = [...dataSource];\r\n            // get the selected division object\r\n            const selectedTown = tempTown.find(item => item.id === this.state.townID);\r\n\r\n            console.log(selectedTown);\r\n            return selectedTown;\r\n        }\r\n    };\r\n\r\n      getSelectedCenter = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempCenter = [...dataSource];\r\n            // get the selected division object\r\n            const selectedCenter = tempCenter.find(item => item.id === this.state.centerID);\r\n\r\n            console.log(selectedCenter);\r\n            return selectedCenter;\r\n        }\r\n    };\r\n    getSelectedExam = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempExam = [...dataSource];\r\n            // get the selected division object\r\n            const selectedExam = tempExam.find(item => item.id === this.state.examID);\r\n\r\n            console.log(selectedExam);\r\n            return selectedExam;\r\n        }\r\n    };\r\n    getSelectedSession = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempSession = [...dataSource];\r\n            // get the selected division object\r\n            const selectedSession = tempSession.find(item => item.id === this.state.sessionID);\r\n\r\n            console.log(selectedSession);\r\n            return selectedSession;\r\n        }\r\n    };\r\n\r\n    setSubjects=(subjectList)=>{\r\n        this.setState({subjects:subjectList })\r\n    }\r\n\r\n    getSelectedSeries = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n          const tempSeries = [...dataSource];\r\n          // get the selected division object\r\n          const selectedSeries = tempSeries.find(item => item.id === this.state.seriesID);\r\n    \r\n          console.log(selectedSeries);\r\n          return selectedSeries;\r\n        }\r\n      };\r\n    \r\n     \r\n      getSelectedEducType = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n          const tempEducType = [...dataSource];\r\n          // get the selected division object\r\n          const selectedEducType = tempEducType.find(item => item.id === this.state.educTypeID);\r\n    \r\n          console.log(selectedEducType);\r\n          return selectedEducType;\r\n        }\r\n      };\r\n    //   getCandExamSession = () => {\r\n    //     const candExamSession = `${this.state.candCode}-${this.state.examID}-${this.state.sessionID}`\r\n    //     console.log(candExamSession)\r\n    //     return candExamSession;\r\n    // }\r\n\r\n    makeCandVariableObject = (candCodeValue) => {\r\n        const storedCandidate = {\r\n            \"candCode\": `${candCodeValue}`\r\n        }\r\n        return storedCandidate\r\n    }\r\n\r\n    getSelectedCandidate = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempCandidates = [...dataSource];\r\n            // get the selected region object\r\n            const selectedCandidate = tempCandidates.find(item => item.candCode === this.state.candCode);\r\n            console.log(\"getting selected region\");\r\n            console.log(selectedCandidate);\r\n            return selectedCandidate;\r\n        }\r\n    };\r\n\r\n    \r\n       \r\n    render() {\r\nconst { regionID,divisionID, subDivisionID,townID, centerID, examID, sessionID, seriesID, candCode}= this.state\r\n        return (\r\n            <Query query={getAllRegionsQuery}>\r\n                {({data, loading, error}) => {\r\n                    {\r\n                        loading && <p>Loading...</p>;\r\n                    }\r\n                    {\r\n                        error && <Error error={error}/>;\r\n                    }\r\n                    const {regions} = data;\r\n                    const anyRegion = regions[0];\r\n     //prepare data for the region select options\r\n     const regionsOptions = regions && regions.map(item => (\r\n                        <option value={item.id} key={item.id}>\r\n                            {item.regName}\r\n                        </option>\r\n                    ));\r\n\r\n //*******important function'stripping off __typename')\r\n const refinedRegions = regions.map(({ __typename, ...others }) => others);\r\n\r\n                    return (\r\n                        <Query\r\n                            query={getDivisionsOfARegionQuery}\r\n                            variables={regions && (getSelectedObject(regions,regionID) || anyRegion)}>\r\n                            {({data, loading, error}) => {\r\n                                {\r\n                                    loading && <p>Loading...</p>;\r\n                                }\r\n                                {\r\n                                    error && <Error error={error}/>;\r\n                                }\r\n\r\n                                const {region: province} = data;\r\n                                const {division} = province;\r\n                                const anyDivision = division[0];\r\n\r\n                                const divisionsOptions =division && division.map(item => (\r\n                                    <option value={item.id} key={item.id}>\r\n                                        {item.divName}\r\n                                    </option>\r\n                                ));\r\n\r\n                         \r\n                                return (\r\n                                    <Query\r\n                                        query={getSubDivisionsOfADivisionQuery}\r\n                                        variables={division && (getSelectedObject(division, divisionID) || anyDivision)}>\r\n                                        {({data, loading, error}) => {\r\n                                            {\r\n                                                loading && <p>Loading...</p>;\r\n                                            }\r\n                                            {\r\n                                                error && <Error error={error}/>;\r\n                                            }\r\n                                          const {division} = data;\r\n                                            const {subDivision:arrondissement } = division\r\n                                        console.log(arrondissement)\r\n                                            const subDivisionsOptions =arrondissement && arrondissement.map(item => (\r\n                                                    <option value={item.id} key={item.id}>\r\n                                                        {item.subDivName}\r\n                                                    </option>\r\n                                                ));  \r\n\r\n\r\n                                            return (\r\n                                                <Query\r\n                                                    query={getTownsOfASubDivisionQuery}\r\n                                                    variables={arrondissement && getSelectedObject(arrondissement, subDivisionID)  }\r\n                                                    >\r\n                                                    {({data, loading, error}) => {\r\n                                                        {\r\n                                                            loading && <p>Loding...</p>;\r\n                                                        }\r\n                                                        {\r\n                                                            error && <Error error={error}/>;\r\n                                                        }\r\n\r\n                                                        console.log(\"these are the towns of the selected Sub division\");\r\n                                                      \r\n                                                       const {subDivision: district} = data; \r\n                                                       console.log(data)\r\n                                                       const {  town} = {...district}\r\n                                                       console.log(town)\r\n                                                                                            \r\n                                                return (\r\n                                                <Query\r\n                                                    query={getCentersOfATownQuery}\r\n                                                    variables={town && this.getSelectedTown(town)  }\r\n\r\n                                                     >\r\n                                                    {({data, loading, error}) => {\r\n                                                        {\r\n                                                            loading && <p>Loding...</p>;\r\n                                                        }\r\n                                                        {\r\n                                                            error && <Error error={error}/>;\r\n                                                        }\r\n                                                         const { town: ville} =data\r\n                                                          const theTowns= {...ville}\r\n                                                          const { center}= theTowns\r\n                                                          console.log(center) \r\n                                          const refinedCenter = center && center.map(({__typename, centerName,...others})=> others)\r\n                                                                    return(                            \r\n                                                <Query query={getAllExamsQuery}>\r\n                                                    {({ data, loading, error }) => {\r\n                                                    {\r\n                                                        loading && <p>loading...</p>;\r\n                                                    }\r\n                                                    {\r\n                                                        error && <Error error={error} />;\r\n                                                    }\r\n\r\n                                                   const { exams } = data;\r\n                                                    console.log(exams);\r\n                                                   \r\n  const refinedExams = exams && exams.map(({__typename, examName, ...others})=>others)\r\n                                                    return (\r\n                                                        <Query query={getAllEducTypesOfAnExam} variables={exams && this.getSelectedExam(exams)}>\r\n                                                        {({ data, loading, error }) => {\r\n                                                            {\r\n                                                            loading && <p>loading...</p>;\r\n                                                            }\r\n                                                            {\r\n                                                            error && <Error error={error} />;\r\n                                                            }\r\n                                                            console.log(data);\r\n                                                            const { exam } = data;\r\n                                                            const educTypeList = { ...exam };\r\n                                                            const { educationType } = educTypeList;\r\n                                                             console.log(educationType);\r\n                                                            const educTypeOptions =\r\n                                                            educationType &&\r\n                                                            educationType.map(item => (\r\n                                                                <option key={item.id} value={item.id}>\r\n                                                                {item.educationTypeName}\r\n                                                                </option>\r\n                                                            )); \r\n\r\n                                                            return (\r\n                                                            <Query\r\n                                                                query={getAllSeriesOfAnEducationTypeQuery}\r\n                                                                variables={educationType && this.getSelectedEducType(educationType)}\r\n                                                            >\r\n                                                                {({ data, loading, error }) => {\r\n                                                                {\r\n                                                                    loading && <p>loading...</p>;\r\n                                                                }\r\n                                                                {\r\n                                                                    error && <Error error={error} />;\r\n                                                                }\r\n                                                                console.log(data);\r\n\r\n                                                                const { educationType } = data;\r\n\r\n                                                                const seriesEducType = { ...educationType };\r\n                                                                const { series } = seriesEducType;\r\n                                                                console.log(series);\r\n\r\n                                                                const refinedSeries = series && series.map(({ __typename, seriesName, ...others }) => others);\r\n                                                                const seriesOptions =\r\n                                                                    series &&\r\n                                                                    series.map(item => (\r\n                                                                    <option key={item.id} value={item.id}>\r\n                                                                        {item.seriesName}\r\n                                                                    </option>\r\n                                                                    )); \r\n                                                                  return (\r\n                       \r\n                                                            <Query query={getAllSessionsQuery}>\r\n                                                                {({data, loading, error}) => {\r\n                                                                  {\r\n                                                                    loading && <p>loading...</p>;\r\n                                                                }\r\n                                                                {\r\n                                                                    error && <Error error={error}/>\r\n                                                                }\r\n\r\n                                                                const {sessions} = data;\r\n                                                                const refinedSessions =sessions && sessions.map(({__typename, sessionName,...others})=>others)\r\n                                                                               return (\r\n                                                                                    <Mutation\r\n                                                                                        mutation={createRegistrationMutation}\r\n                                                                                        variables={{\r\n                                                                                            ...this.state,\r\n                                                                                         series: series && this.getSelectedSeries(refinedSeries),\r\n                                                                                         exam: exams && this.getSelectedExam(refinedExams),\r\n                                                                                         session: sessions && this.getSelectedSession(refinedSessions),\r\n                                                                                         center: center && this.getSelectedCenter(refinedCenter),\r\n                                                                                         candidate: this.makeCandVariableObject(this.state.candCode),\r\n\r\n                                                                                    }}>\r\n                                                                                        {(createCenterAdmin, {loading, error}) => (\r\n                                                                                          <Form\r\n                                                                                                    onSubmit={async e => {\r\n                                                                                                    e.preventDefault();\r\n                                                                                                    const res = await createCenterAdmin();\r\n                                                                                                    console.log(res);\r\n                                                                                                    this.resetForm()\r\n                                                                                                }}>\r\n                                                                                                    <h4>Inscription a l'Examen</h4>\r\n                                                                                                    <Error error={error}/>\r\n                                                                                                    <fieldset disabled={loading} aria-busy={loading}>\r\n                                                                                            <StyledDivision>\r\n                                                                                                    <CenterSelect>\r\n                                                                                                  <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"regionID\"\r\n                                                                                                            name=\"regionID\"\r\n                                                                                                            placeholder=\"select a region\"\r\n                                                                                                            value={this.state.regionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>Choisissez une region</option>\r\n                                                                                                            {regionsOptions }\r\n                                                                                                        </select>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"divisionID\"\r\n                                                                                                            name=\"divisionID\"\r\n                                                                                                            value={this.state.divisionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>Choisissez un departement</option>\r\n                                                                                                            {division && divisionsOptions }\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"subDivisionID\"\r\n                                                                                                            name=\"subDivisionID\"\r\n                                                                                                            value={this.state.subDivisionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>choisissez un Arrondissement</option>\r\n                                                                                                            {arrondissement && subDivisionsOptions}\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"townID\"\r\n                                                                                                            name=\"townID\"\r\n                                                                                                            value={this.state.townID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>choisissez une Ville</option>\r\n                                                                                                           {town && town.map(item=>(\r\n                                                                                                            <option key={item.id} value={item.id} >\r\n                                                                                                              {item.townName}  </option>\r\n                                                                                                          ))}\r\n\r\n\r\n                                                                                                        </select>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"centerD\"\r\n                                                                                                            name=\"centerID\"\r\n                                                                                                            value={this.state.centerID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            \r\n                                                                                                              <option>Choisissez un Centre d'Examen</option>\r\n                                                                                                              {center && center.map(item => (\r\n                                                                                                              <option key={item.id} value={item.id}>\r\n                                                                                                                {item.centerName}</option>))  } \r\n                                                                                                        </select>\r\n    \r\n                                                                                                        </CenterSelect>\r\n                                                                                                        <OtherSelect>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"examID\"\r\n                                                                                                            name=\"examID\"\r\n                                                                                                            value={this.state.examID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n \r\n                                                                                                            <option>Choisissez un Examen</option>\r\n                                                                                                              {exams && exams.map(item => (\r\n                                                                                                              <option key={item.id} value={item.id}>{item.examName}</option>))  }\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"educTypeID\"\r\n                                                                                                            name=\"educTypeID\"\r\n                                                                                                            value={this.state.educTypeID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n \r\n                                                                                                            <option>Choisissez un Type D'enseignement</option>\r\n                                                                                                            {educTypeOptions}\r\n                                                                                                             \r\n                                                                                                          </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"seriesID\"\r\n                                                                                                            name=\"seriesID\"\r\n                                                                                                            value={this.state.seriesID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n \r\n                                                                                                            <option>Choisissez une Serie</option>\r\n                                                                                                              {seriesOptions}\r\n                                                                                                        </select>\r\n                                                                                                      \r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"sessionID\"\r\n                                                                                                            name=\"sessionID\"\r\n                                                                                                            value={this.state.sessionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>Choisissez la Session</option>\r\n                                                                                                              {sessions && sessions.map(item => (\r\n                                                                                                              <option key={item.id} value={item.id}>{item.sessionName}</option>))  }\r\n                                                                                                        </select>\r\n                                                                                                     \r\n                                                                                                            <input\r\n                                                                                                               type=\"text\"\r\n                                                                                                               id=\"candCode\"\r\n                                                                                                               name=\"candCode\"\r\n                                                                                                               placeholder=\"Code Candidat\"\r\n                                                                                                               value={this.state.candCode}\r\n                                                                                                               onChange={this.handleChange}\r\n                                                                                                               required/>\r\n                                                                                                        </OtherSelect>\r\n                                                                                                       \r\n                                                                                                        <div className=\"submitButton\">\r\n                                                                                                            <button type=\"submit\">Valid{loading? \"ation en cours\" : \"er\"}</button>\r\n                                                                                                        </div>\r\n                                                                                            </StyledDivision>\r\n                                                                                                    </fieldset>\r\n                                                                                                </Form>\r\n                                                                                        )}\r\n                                                                                    </Mutation>\r\n                                                                               \r\n                                                                        );\r\n                                                                      }\r\n                                                                    }\r\n                                                                    </Query>\r\n                                                                        );\r\n                                                                      }\r\n                                                                    }\r\n                                                                    </Query>\r\n                                                                );\r\n                                                                }}\r\n                                                            </Query>\r\n                                                                );\r\n                                                                }}\r\n                                                            </Query>\r\n                                                        );\r\n                                                    }}\r\n                                                </Query>\r\n                                            );\r\n                                        }}\r\n                                    </Query>\r\n                                          \r\n                                );\r\n                            }}\r\n                        </Query>\r\n                                          \r\n                                );\r\n                            }}\r\n                        </Query>\r\n                    );\r\n                }}\r\n            </Query>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registration;"],"mappings":"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","sourceRoot":""}