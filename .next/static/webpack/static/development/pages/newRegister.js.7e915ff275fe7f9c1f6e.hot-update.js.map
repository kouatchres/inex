{"version":3,"file":"static/webpack/static\\development\\pages\\newRegister.js.7e915ff275fe7f9c1f6e.hot-update.js","sources":["webpack:///./src/components/Registrations.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Mutation, Query} from \"react-apollo\";\r\nimport Form from \"./styles/Form\";\r\nimport gql from \"graphql-tag\";\r\nimport Error from \"./ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n    storedTown,\r\n    storedCenter ,\r\n     storeRegion,\r\n      storedDivision,\r\n       storedSubDivision,\r\n        storedExam, \r\n        storedSession,\r\n          storedCandidate, \r\n          storedSeries,\r\n          storedEducType,\r\n          bestTowns\r\n        } from \"../data\";\r\n\r\nconst StyledDivision = styled.div `\r\n  display: grid;\r\n  grid-template-columns:repeat(2, 1fr);\r\n  grid-gap:2rem;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 82rem;\r\n\r\n`;\r\n\r\nconst CenterSelect = styled.div `\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 40rem;\r\n`;\r\n\r\nconst OtherSelect = styled.div `\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 40rem;\r\n`;\r\n\r\nconst GET_ALL_REGIONS_QUERY = gql `\r\n  query GET_ALL_REGIONS_QUERY {\r\n    regions(orderBy: regName_DESC) {\r\n    regName\r\n    regCode\r\n    id\r\n  }\r\n  }\r\n`;\r\n\r\nconst GET_ALL_SERIES_QUERY = gql `\r\n  query GET_ALL_SERIES_QUERY {\r\n    serieses(orderBy: seriesName_ASC) {\r\n      seriesName\r\n      seriesCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ALL_EDUCATION_TYPES_QUERY = gql `\r\n  query GET_ALL_EDUCATION_TYPES_QUERY {\r\n    educationTypes {\r\n      educationTypeName\r\n      educationTypeCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\nconst GET_ALL_SERIES_OF_EDUCATION_TYPE_QUERY =gql`\r\nquery GET_ALL_SERIES_OF_EDUCATION_TYPE_QUERY($id: ID!){\r\n  educationType(id:$id){\r\n    id\r\n    educationTypeName\r\n     series(orderBy: seriesName_ASC){\r\n       seriesName\r\n       seriesCode\r\n     }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\n\r\nconst GET_ALL_EXAMS_QUERY = gql `\r\n  query GET_ALL_EXAMS_QUERY {\r\n    exams(orderBy: examName_ASC ) {\r\n      examName\r\n      examCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ALL_SESSIONS_QUERY = gql `\r\n  query GET_ALL_SESSIONS_QUERY {\r\n    sessions(orderBy: createdAt_DESC) {\r\n      createdAt\r\n      sessionName\r\n      sessionCode\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GET_ALL_DIVISIONS_QUERY = gql `\r\n  query GET_ALL_DIVISIONS_QUERY {\r\n    divisions(orderBy: divName_ASC) {\r\n      divName\r\n      divCode\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GET_DIVISIONS_OF_A_REGION_QUERY = gql `\r\n  query GET_DIVISIONS_OF_A_REGION_QUERY($id: ID!) {\r\n    region(id: $id) {\r\n      regName\r\n      id\r\n      division(orderBy: divName_ASC) {\r\n        divName\r\n        divCode\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_SUBDIVISIONS_OF_A_DIVSION_QUERY = gql `\r\n  query GET_SUBDIVISIONS_OF_A_DIVSION_QUERY($id: ID!) {\r\n    division(id: $id) {\r\n      divName\r\n      id\r\n      subDivision(orderBy: subDivName_ASC) {\r\n        subDivName\r\n        subDivCode\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_TOWNS_OF_A_SUBDIVISIONS_QUERY = gql `\r\n  query GET_TOWNS_OF_A_SUBDIVISIONS_QUERY($id: ID!) {\r\n    subDivision(id: $id) {\r\n      subDivName\r\n      id\r\n      town(orderBy: townName_ASC) {\r\n        townName\r\n        townCode\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_CENTERS_OF_A_TOWN_QUERY = gql `\r\n  query GET_CENTERS_OF_A_TOWN_QUERY($id: ID!) {\r\n    town(id: $id) {\r\n      townName\r\n      id\r\n      center(orderBy: centerName_ASC) {\r\n        centerName\r\n        centerCode\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_REGISTRATION_MUTATION = gql `\r\n  mutation CREATE_REGISTRATION_MUTATION(\r\n      $exam: ExamWhereUniqueInput!,\r\n      $series: SeriesWhereUniqueInput!, \r\n      $candidate: CandidateWhereUniqueInput!, \r\n      $session: SessionWhereUniqueInput!, \r\n      $center: CenterWhereUniqueInput!,\r\n      ) {\r\n    createRegistrations( \r\n        exam:$exam,\r\n        series: $series,\r\n        series: $series,\r\n         candidate: $candidate,\r\n          center: $center\r\n          ) {\r\n      id\r\n      series {\r\n        seriesName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Registrations extends Component {\r\n    state = {\r\n        townName: \"\",\r\n        townCode: \"\",\r\n        townID: \"12\",\r\n        divisionID: \"12\",\r\n        subDivisionID: \"12\",\r\n        regionID: \"12\",\r\n        centerID: \"12\",\r\n        examID: \"12\",\r\n        sessionID: \"12\",\r\n        seriesID: \"12\",\r\n        educTypeID: \"12\",\r\n        candidateID: \"12\",\r\n        region: storeRegion,\r\n        division: storedDivision,\r\n        subDiv: storedSubDivision,\r\n        town: storedTown,\r\n        center: storedCenter,\r\n        exam: storedExam,\r\n        session: storedSession,\r\n        series: storedSeries,\r\n        educationType: storedEducType,\r\n        candidate: storedCandidate,\r\n        candidateRegistrationID:\"125\"\r\n    };\r\n\r\n    handleChange = e => {\r\n        const {name, value, type} = e.target;\r\n        const val = type === \"number\"? parseInt(value): value;\r\n        this.setState({[name]: val});\r\n    };\r\n\r\n    getselectedRegion = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempRegions = [...dataSource];\r\n            // get the selected region object\r\n            const selectedRegion = tempRegions.find(item => item.id === this.state.regionID);\r\n            console.log(\"getting selected region\");\r\n            console.log(selectedRegion);\r\n            return selectedRegion;\r\n        }\r\n    };\r\n\r\n    getselectedDivision = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempDivisions = [...dataSource];\r\n            // get the selected division object\r\n            const selectedDivision = tempDivisions.find(item => item.id === this.state.divisionID);\r\n            console.log(selectedDivision);\r\n            return selectedDivision;\r\n        }\r\n    };\r\n\r\n    getselectedSubDivision = (dataSource) => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempSubDivisions = [...dataSource];\r\n            // get the selected division object\r\n            const selectedSubDivision = tempSubDivisions.find(item => item.id === this.state.subDivisionID);\r\n\r\n            console.log(selectedSubDivision);\r\n            return selectedSubDivision;\r\n        }\r\n    };\r\n\r\n    getselectedTown = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempTown = [...dataSource];\r\n            // get the selected division object\r\n            const selectedTown = tempTown.find(item => item.id === this.state.townID);\r\n\r\n            console.log(selectedTown);\r\n            return selectedTown;\r\n        }\r\n    };\r\n\r\n    getselectedCenter = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempCenter = [...dataSource];\r\n            // get the selected division object\r\n            const selectedCenter = tempCenter.find(item => item.id === this.state.centerID);\r\n\r\n            console.log(selectedCenter);\r\n            return selectedCenter;\r\n        }\r\n    };\r\n    getselectedExam = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempExam = [...dataSource];\r\n            // get the selected division object\r\n            const selectedExam = tempExam.find(item => item.id === this.state.examID);\r\n\r\n            console.log(selectedExam);\r\n            return selectedExam;\r\n        }\r\n    };\r\n    getselectedSession = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempSession = [...dataSource];\r\n            // get the selected division object\r\n            const selectedSession = tempSession.find(item => item.id === this.state.sessionID);\r\n\r\n            console.log(selectedSession);\r\n            return selectedSession;\r\n        }\r\n    };\r\n    getselectedSeries = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempSeries = [...dataSource];\r\n            // get the selected division object\r\n            const selectedSeries = tempSeries.find(item => item.id === this.state.seriesID);\r\n\r\n            console.log(selectedSeries);\r\n            return selectedSeries;\r\n        }\r\n    };\r\n    getselectedEducType = dataSource => {\r\n        // 1 copy the data source\r\n        if (dataSource.length > 0) {\r\n            const tempEducType = [...dataSource];\r\n            // get the selected division object\r\n            const selectedEducType = tempEducType.find(item => item.id === this.state.educTypeID);\r\n\r\n            console.log(selectedEducType);\r\n            return selectedEducType;\r\n        }\r\n    };\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <Query query={GET_ALL_REGIONS_QUERY}>\r\n                {({data, loading, error}) => {\r\n                    {\r\n                        loading && <p>Loading...</p>;\r\n                    }\r\n                    {\r\n                        error && <Error error={error}/>;\r\n                    }\r\n                    const {regions} = data;\r\n                    const anyRegion = regions[0];\r\n     //prepare data for the region select options\r\n     const regionsOptions = regions.map(item => (\r\n                        <option value={item.id} key={item.id}>\r\n                            {item.regName}\r\n                        </option>\r\n                    ));\r\n\r\n\r\n                    return (\r\n                        <Query\r\n                            query={GET_DIVISIONS_OF_A_REGION_QUERY}\r\n                            variables={this.getselectedRegion(regions) || anyRegion}>\r\n                            {({data, loading, error}) => {\r\n                                {\r\n                                    loading && <p>Loading...</p>;\r\n                                }\r\n                                {\r\n                                    error && <Error error={error}/>;\r\n                                }\r\n\r\n                                const {region: province} = data;\r\n                                const {division} = province;\r\n                                const anyDivision = division[0];\r\n\r\n                                const divisionsOptions = division.map(item => (\r\n                                    <option value={item.id} key={item.id}>\r\n                                        {item.divName}\r\n                                    </option>\r\n                                ));\r\n\r\n                         \r\n                                return (\r\n                                    <Query\r\n                                        query={GET_SUBDIVISIONS_OF_A_DIVSION_QUERY}\r\n                                        variables={division && (this.getselectedDivision(division) || anyDivision)}>\r\n                                        {({data, loading, error}) => {\r\n                                            {\r\n                                                loading && <p>Loading...</p>;\r\n                                            }\r\n                                            {\r\n                                                error && <Error error={error}/>;\r\n                                            }\r\n                                            const {division:departement} = data;\r\n                                            const {subDivision} = departement;\r\n                                            const subDivisionsOptions =subDivision.map(item => (\r\n                                                    <option value={item.id} key={item.id}>\r\n                                                        {item.subDivName}\r\n                                                    </option>\r\n                                                )); \r\n\r\n\r\n\r\n                                            return (\r\n                                                <Query\r\n                                                    query={GET_TOWNS_OF_A_SUBDIVISIONS_QUERY}\r\n                                                    variables={this.getselectedSubDivision(subDivision)}>\r\n                                                    {({data, loading, error}) => {\r\n                                                        {\r\n                                                            loading && <p>Loding...</p>;\r\n                                                        }\r\n                                                        {\r\n                                                            error && <Error error={error}/>;\r\n                                                        }\r\n\r\n                                                        console.log(\"these are the towns of the selected Sub division\");\r\n                                                      \r\n                                                        const village = data.subDivision; \r\n                                                    const allTowns = { ...village };\r\n                                                       const { town } = allTowns;\r\n                                                       console.log(town)\r\n                                                       const villesOptions =village.town.map(item => (\r\n                                                    <option value={item.id} key={item.id}>\r\n                                                        {item.townName}\r\n                                                    </option>\r\n                                                ));\r\n\r\n\r\n                                     return (\r\n                                                <Query\r\n                                                    query={GET_CENTERS_OF_A_TOWN_QUERY}\r\n                                                    variables={ town &&  this.getselectedTown(town) }\r\n                                                     >\r\n                                                    {({data, loading, error}) => {\r\n                                                        {\r\n                                                            loading && <p>Loding...</p>;\r\n                                                        }\r\n                                                        {\r\n                                                            error && <Error error={error}/>;\r\n                                                        }\r\n                                        const { town: ville} =data\r\n\r\n                                        const theTowns= {...ville}\r\n                                       const { center}= theTowns\r\n                                        console.log(center)\r\n                                                        return (\r\n\r\n                                                            <Query query={GET_ALL_SESSIONS_QUERY}>\r\n                                                                {({data, loading, error}) => {\r\n                                                                  {\r\n                                                                    loading && <p>loading...</p>;\r\n                                                                }\r\n                                                                {\r\n                                                                    error && <Error error={error}/>\r\n                                                                }\r\n\r\n                                                                const {sessions} = data;\r\n                                                                return (\r\n                                                            <Query query={GET_ALL_EDUCATION_TYPES_QUERY}>\r\n                                                                {({data, loading, error}) => {\r\n                                                                  {\r\n                                                                    loading && <p>loading...</p>;\r\n                                                                }\r\n                                                                {\r\n                                                                    error && <Error error={error}/>\r\n                                                                }\r\n\r\n                                                                const {educationTypes} = data;\r\n\r\n                                                                return (\r\n                                                                    <Query query={GET_ALL_SERIES_OF_EDUCATION_TYPE_QUERY}\r\n                                                                    variables={educationTypes && this.getselectedEducType(educationTypes)}\r\n                                                                    >\r\n                                                                        {({data, loading, error}) => {\r\n                                                                        {\r\n                                                                            loading && <p>loading...</p>\r\n                                                                        }\r\n                                                                        {\r\n                                                                            error && <Error error={error}/>\r\n                                                                        }\r\n                                                                  const {educationType} = data\r\n                                                            const seriesEducType = {...educationType}\r\n                                                                        const {series}= seriesEducType\r\n                                                                        return (\r\n\r\n                                                                            <Query query={GET_ALL_EXAMS_QUERY}>\r\n                                                                                {({data, loading, error}) => {\r\n                                                                                 {   loading && <p>loading...</p>\r\n                                                                                }\r\n                                                                                {\r\n                                                                                    error && <Error error={error}/>\r\n                                                                                }\r\n                                                                              \r\n\r\n                                                                                const {exams} = data;\r\n             \r\n                   return (\r\n\r\n                                                                                    <Mutation\r\n                                                                                        mutation={CREATE_REGISTRATION_MUTATION}\r\n                                                                                        variables={{\r\n                                                                                        ...this.state\r\n\r\n                                                                                    }}>\r\n                                                                                        {(createRegistrations, {loading, error}) => (\r\n                                                                                                <Form\r\n                                                                                                    onSubmit={async e => {\r\n                                                                                                    e.preventDefault();\r\n                                                                                                    const res = await createRegistrations();\r\n                                                                                                    console.log(res);\r\n                                                                                                }}>\r\n                                                                                                    <h4>S'inscrire a un examen</h4>\r\n                                                                                                    <Error error={error}/>\r\n                                                                                                    <fieldset disabled={loading} aria-busy={loading}>\r\n                                                                                            <StyledDivision>\r\n                                                                                                    <CenterSelect>\r\n                                                                                                  <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"regionID\"\r\n                                                                                                            name=\"regionID\"\r\n                                                                                                            placeholder=\"select a region\"\r\n                                                                                                            value={this.state.regionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>Choisissez une region</option>\r\n                                                                                                            {regionsOptions }\r\n                                                                                                        </select>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"divisionID\"\r\n                                                                                                            name=\"divisionID\"\r\n                                                                                                            value={this.state.divisionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>Choisissez un departement</option>\r\n                                                                                                            {divisionsOptions }\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"subDivisionID\"\r\n                                                                                                            name=\"subDivisionID\"\r\n                                                                                                            value={this.state.subDivisionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>choisissez un Arrondissement</option>\r\n                                                                                                            {subDivisionsOptions}\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"townID\"\r\n                                                                                                            name=\"townID\"\r\n                                                                                                            value={this.state.townID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            <option>choisissez une Ville</option>\r\n                                                                                                            {/* {villesOptions } */}\r\n\r\n\r\n                                                                                                        </select>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"centerD\"\r\n                                                                                                            name=\"centerID\"\r\n                                                                                                            value={this.state.centerID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n                                                                                                            {/* {centersOptions  } */}\r\n                                                                                                        </select>\r\n    \r\n                                                                                                        </CenterSelect>\r\n                                                                                                        <OtherSelect>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"examID\"\r\n                                                                                                            name=\"examID\"\r\n                                                                                                            value={this.state.examID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n{/* \r\n                                                                                                        \r\n                                                                                                            */}\r\n\r\n                                                                                                        </select>\r\n\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"sessionID\"\r\n                                                                                                            name=\"sessionID\"\r\n                                                                                                            value={this.state.sessionID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n{/* \r\n                                                                                                           \r\n                                                                                                             */}\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"educTypeID\"\r\n                                                                                                            name=\"educTypeID\"\r\n                                                                                                            value={this.state.educTypeID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n\r\n                                                                                                            {/*\r\n                                                                                                             \r\n                                                                                                             */}\r\n                                                                                                        </select>\r\n                                                                                                        <select\r\n                                                                                                            type=\"select\"\r\n                                                                                                            id=\"seriesID\"\r\n                                                                                                            name=\"seriesID\"\r\n                                                                                                            value={this.state.seriesID}\r\n                                                                                                            onChange={this.handleChange}\r\n                                                                                                            required>\r\n{/* \r\n                                                                                                          \r\n                                                                                                             */}\r\n                                                                                                        </select>\r\n                                                                                                       \r\n                                                                                                        </OtherSelect>\r\n                                                                                                       \r\n                                                                                                        <div className=\"submitButton\">\r\n                                                                                                            <button type=\"submit\">Submit{loading? \"ting\" : \"\"}</button>\r\n                                                                                                        </div>\r\n                                                                                            </StyledDivision>\r\n                                                                                                    </fieldset>\r\n                                                                                                </Form>\r\n                                                                                        )}\r\n                                                                                    </Mutation>\r\n                                                                                );\r\n                                                                                }}\r\n                                                                            </Query>\r\n                                                                        );\r\n                                                                        }}\r\n                                                                    </Query>\r\n                                                                );\r\n                                                                }}\r\n                                                            </Query>\r\n                                                                );\r\n                                                                }}\r\n                                                            </Query>\r\n                                                        );\r\n                                                    }}\r\n                                                </Query>\r\n                                            );\r\n                                        }}\r\n                                    </Query>\r\n                                );\r\n                            }}\r\n                        </Query>\r\n                    );\r\n                }}\r\n            </Query>\r\n                    );\r\n                }}\r\n            </Query>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registrations;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAOA;AAUA;AAUA;AAaA;AAgBA;AAUA;AAUA;AASA;AAcA;AAcA;AAcA;AAcA;AACA;AAsBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AACA;AAyacA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzHA;AAiIA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;;;;AA1cA;AACA;AA4cA;;;;A","sourceRoot":""}