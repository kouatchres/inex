{"version":3,"file":"static/webpack/static\\development\\pages\\modifyRegion.js.72a872c174a4bfa87b47.hot-update.js","sources":["webpack:///./src/components/UpdateRegionBest.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Form from \"./styles/Form\";\r\nimport Link from \"next/link\";\r\nimport gql from \"graphql-tag\";\r\nimport Error from \"./ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport { storeRegion } from \"../data\";\r\nimport DeleteRegion from \"./DeleteRegion\";\r\n\r\nconst DeleteBlock = styled.div`\r\n  width: 40vw;\r\n  align-content: left;\r\n`;\r\nconst UpdateBlock = styled.button`\r\n  /* justify-content: left; */\r\n  width: 7vw;\r\n  font-weight: bold;\r\n  border-radius: 8px;\r\n  font-size: 1.5rem;\r\n  height: 30px;\r\n  border: none;\r\n  padding: 5px;\r\n  align-items: center;\r\n  background-color: white;\r\n  color: black;\r\n  border: 2px solid #4caf50; /* Green */\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #4c50;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst SelectBlock = styled.div`\r\n  display: block;\r\n`;\r\nconst StyledDivision = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 5fr 1fr 1fr;\r\n  grid-gap: 20px;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  width: 70vw;\r\n`;\r\n\r\nconst GET_ALL_REGIONS_QUERY = gql`\r\n  query GET_ALL_REGIONS_QUERY {\r\n    regions(orderBy: regName_DESC) {\r\n      id\r\n      regName\r\n      regCode\r\n    }\r\n  }\r\n`;\r\n\r\nclass UpdateRegionBest extends Component {\r\n  state = {\r\n    divName: \"\",\r\n    divCode: \"\",\r\n    regionID: \"12\",\r\n    id: \"\",\r\n    region: storeRegion\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  getSelectedRegion = dataSource => {\r\n    // 1 copy the data source\r\n    if (dataSource.length > 0) {\r\n      const tempRegions = [...dataSource];\r\n      // get the region object\r\n      const selectedRegion = tempRegions.find(item => item.id === this.state.regionID);\r\n      console.log(\"getting selected region\");\r\n      console.log(selectedRegion);\r\n      return selectedRegion;\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    const { id } = this.state;\r\n    return (\r\n      <Query query={GET_ALL_REGIONS_QUERY}>\r\n        {({ data, loading, error }) => {\r\n          {\r\n            loading && <p>Loading...</p>;\r\n          }\r\n          {\r\n            error && <Error error={error} />;\r\n          }\r\n          const { regions } = data;\r\n          //'getting region from the state')\r\n          console.log(this.state.regions);\r\n\r\n          const getRegions = regions.map(item => (\r\n            <option value={item.id} key={item.id}>\r\n              {item.regName} - {item.regCode}\r\n            </option>\r\n          ));\r\n\r\n          return (\r\n            <Form\r\n              onSubmit={async e => {\r\n                e.preventDefault();\r\n                const res = await updateRegion();\r\n                console.log(res);\r\n              }}\r\n            >\r\n              <h5>Modification de Region</h5>\r\n              <Error error={error} />\r\n              <fieldset disabled={loading} aria-busy={loading}>\r\n                <StyledDivision>\r\n                  <SelectBlock>\r\n                    <select type=\"select\" id=\"id\" name=\"id\" value={this.state.id} onChange={this.handleChange} required>\r\n                      <option> Choisissez une region </option>\r\n                      {getRegions}\r\n                    </select>\r\n                  </SelectBlock>\r\n\r\n                  <UpdateBlock>\r\n                    <Link href={{ pathname: \"updateRegion\", query: { id } }}>\r\n                      <a>Update</a>\r\n                    </Link>\r\n                  </UpdateBlock>\r\n                  <DeleteBlock>\r\n                    <DeleteRegion id={this.state.id}>Delete</DeleteRegion>\r\n                  </DeleteBlock>\r\n                </StyledDivision>\r\n              </fieldset>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  };\r\n}\r\n\r\nexport default UpdateRegionBest;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AASA;AACA;AASA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AAQA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;;;;;AAnFA;AACA;AAoFA;;;;A","sourceRoot":""}