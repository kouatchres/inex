{"version":3,"file":"static/webpack/static\\development\\pages\\newDivision.js.d2c20a7b4f7d5fcba4cb.hot-update.js","sources":["webpack:///./src/components/CreateDivision.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport Form from \"./styles/Form\";\r\nimport gql from \"graphql-tag\";\r\nimport Error from \"./ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport { storeRegion } from \"../../src/data\";\r\nimport { GET_ALL_DIVISIONS_QUERY } from \"./CreateSubDivision\";\r\nimport { Select, option } from \"@material-ui/core\";\r\n\r\nconst StyledDivision = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 350px;\r\n`;\r\n\r\nconst GET_ALL_REGIONS_QUERY = gql`\r\n  query GET_ALL_REGIONS_QUERY {\r\n    regions(orderBy: regName_DESC) {\r\n      id\r\n      regName\r\n      regCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_DIVISION_MUTATION = gql`\r\n  mutation CREATE_DIVISION_MUTATION($divName: String!, $divCode: String!, $region: RegionCreateWithoutDivisionInput!) {\r\n    createDivision(divName: $divName, divCode: $divCode, region: $region) {\r\n      id\r\n      divName\r\n    }\r\n  }\r\n`;\r\n\r\nclass createDivision extends Component {\r\n  state = {\r\n    divName: \"\",\r\n    divCode: \"\",\r\n    regionID: \"12\",\r\n    region: storeRegion\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  getSelectedRegion = dataSource => {\r\n    // 1 copy the data source\r\n    if (dataSource.length > 0) {\r\n      const tempRegions = [...dataSource];\r\n      // get the region object\r\n      const selectedRegion = tempRegions.find(item => item.id === this.state.regionID);\r\n      console.log(\"getting selected region\");\r\n      console.log(selectedRegion);\r\n      return selectedRegion;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Query query={GET_ALL_REGIONS_QUERY}>\r\n        {({ data, loading, error }) => {\r\n          {\r\n            loading && <p>Loading...</p>;\r\n          }\r\n          {\r\n            error && <Error error={error} />;\r\n          }\r\n          const { regions } = data;\r\n          //'getting region from the state')\r\n          console.log(this.state.region);\r\n\r\n          const getRegions = regions.map(region => (\r\n            <option value={region.id} key={region.id}>\r\n              {region.regName}\r\n            </option>\r\n          ));\r\n\r\n          //*******important function'stripping off __typename')\r\n          const refinedRegions = regions.map(({ __typename, ...others }) => others);\r\n          return (\r\n            <Mutation\r\n              mutation={CREATE_DIVISION_MUTATION}\r\n              variables={{\r\n                ...this.state,\r\n                region: this.getSelectedRegion(refinedRegions)\r\n              }}\r\n            >\r\n              {(createDivision, { loading, error }) => (\r\n                <StyledDivision>\r\n                  <Form\r\n                    onSubmit={async e => {\r\n                      e.preventDefault();\r\n                      const res = await createDivision();\r\n                      console.log(res);\r\n                    }}\r\n                  >\r\n                    <h5>New Division</h5>\r\n                    <Error error={error} />\r\n                    <fieldset disabled={loading} aria-busy={loading}>\r\n                      <select\r\n                        type=\"select\"\r\n                        id=\"regionID\"\r\n                        name=\"regionID\"\r\n                        value={this.state.regionID}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      >\r\n                        <option>Choisissez une region</option>\r\n                        {getRegions}\r\n                      </select>\r\n\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"divName\"\r\n                        name=\"divName\"\r\n                        placeholder=\"Division Name\"\r\n                        value={this.state.divName}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"divCode\"\r\n                        name=\"divCode\"\r\n                        placeholder=\"Division Code\"\r\n                        value={this.state.divCode}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                      <div className=\"submitButton\">\r\n                        <button type=\"submit\">Submit</button>\r\n                      </div>\r\n                    </fieldset>\r\n                  </Form>\r\n                </StyledDivision>\r\n              )}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default createDivision;\r\nexport { GET_ALL_REGIONS_QUERY };\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAUA;AACA;AAQA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AAQA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAEA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3CA;AAmDA;AAGA;;;;AA9GA;AACA;AAgHA;;;;;A","sourceRoot":""}