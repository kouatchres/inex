{"version":3,"file":"static\\development\\pages\\newDivision.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/newDivision.jsx","webpack:///./src/components/CreateDivision.jsx","webpack:///./src/components/CreateSubDivision.jsx","webpack:///./src/components/ErrorMessage.js","webpack:///./src/components/styles/Form.js","webpack:///./src/data.jsx","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@material-ui/core\"","webpack:///external \"graphql-tag\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CreateDivision from '../src/components/CreateDivision';\r\n\r\nconst DivStyled = styled.div`\r\ndisplay:block;\r\nmargin: 0 auto; \r\nmax-width:40vw;\r\n`;\r\nconst newDivision =(props)=> {\r\n  return (\r\n    <DivStyled>\r\n      <CreateDivision  />\r\n    </DivStyled>\r\n  )\r\n}\r\nexport default newDivision;","import React, { Component } from \"react\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport Form from \"./styles/Form\";\r\nimport gql from \"graphql-tag\";\r\nimport Error from \"./ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport { storeRegion } from \"../../src/data\";\r\nimport { GET_ALL_DIVISIONS_QUERY } from \"./CreateSubDivision\";\r\nimport { Select, option } from \"@material-ui/core\";\r\n\r\nconst StyledDivision = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 350px;\r\n`;\r\n\r\nconst GET_ALL_REGIONS_QUERY = gql`\r\n  query GET_ALL_REGIONS_QUERY {\r\n    regions(orderBy: regName_DESC) {\r\n      id\r\n      regName\r\n      regCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_DIVISION_MUTATION = gql`\r\n  mutation CREATE_DIVISION_MUTATION($divName: String!, $divCode: String!, $region: RegionCreateWithoutDivisionInput!) {\r\n    createDivision(divName: $divName, divCode: $divCode, region: $region) {\r\n      id\r\n      divName\r\n    }\r\n  }\r\n`;\r\n\r\nclass CreateDivision extends Component {\r\n  state = {\r\n    divName: \"\",\r\n    divCode: \"\",\r\n    regionID: \"12\",\r\n    region: storeRegion\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  getSelectedRegion = dataSource => {\r\n    // 1 copy the data source\r\n    if (dataSource.length > 0) {\r\n      const tempRegions = [...dataSource];\r\n      // get the region object\r\n      const selectedRegion = tempRegions.find(item => item.id === this.state.regionID);\r\n      console.log(\"getting selected region\");\r\n      console.log(selectedRegion);\r\n      return selectedRegion;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Query query={GET_ALL_REGIONS_QUERY}>\r\n        {({ data, loading, error }) => {\r\n          {\r\n            loading && <p>Loading...</p>;\r\n          }\r\n          {\r\n            error && <Error error={error} />;\r\n          }\r\n          const { regions } = data;\r\n          //'getting region from the state')\r\n          console.log(this.state.region);\r\n\r\n          const getRegions = regions.map(region => (\r\n            <option value={region.id} key={region.id}>\r\n              {region.regName}\r\n            </option>\r\n          ));\r\n\r\n          //*******important function'stripping off __typename')\r\n          const refinedRegions = regions.map(({ __typename, ...others }) => others);\r\n          return (\r\n            <Mutation\r\n              mutation={CREATE_DIVISION_MUTATION}\r\n              variables={{\r\n                ...this.state,\r\n                region: this.getSelectedRegion(refinedRegions)\r\n              }}\r\n            >\r\n              {(createDivision, { loading, error }) => (\r\n                <StyledDivision>\r\n                  <Form\r\n                    onSubmit={async e => {\r\n                      e.preventDefault();\r\n                      const res = await createDivision();\r\n                      console.log(res);\r\n                    }}\r\n                  >\r\n                    <h5>New Division</h5>\r\n                    <Error error={error} />\r\n                    <fieldset disabled={loading} aria-busy={loading}>\r\n                      <select\r\n                        type=\"select\"\r\n                        id=\"regionID\"\r\n                        name=\"regionID\"\r\n                        value={this.state.regionID}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      >\r\n                        <option>Choisissez une region</option>\r\n                        {getRegions}\r\n                      </select>\r\n\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"divName\"\r\n                        name=\"divName\"\r\n                        placeholder=\"Nom Departement\"\r\n                        value={this.state.divName}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"divCode\"\r\n                        name=\"divCode\"\r\n                        placeholder=\"Code departement\"\r\n                        value={this.state.divCode}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                      <div className=\"submitButton\">\r\n                        <button type=\"submit\">Submit</button>\r\n                      </div>\r\n                    </fieldset>\r\n                  </Form>\r\n                </StyledDivision>\r\n              )}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateDivision;\r\nexport { GET_ALL_REGIONS_QUERY };\r\n","import React, { Component } from 'react';\r\nimport { Mutation, Query } from 'react-apollo';\r\nimport Form from './styles/Form';\r\nimport gql from 'graphql-tag';\r\nimport Error from './ErrorMessage';\r\nimport styled from 'styled-components';\r\nimport { storeRegion, storedDivision } from '../data';\r\nimport { select, option } from '@material-ui/core';\r\n\r\nconst StyledDivision = styled.div`\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\tmargin: 0 auto;\r\n\tmin-width: 350px;\r\n`;\r\n\r\nconst GET_ALL_REGIONS_QUERY = gql`\r\n\tquery GET_ALL_REGIONS_QUERY {\r\n\t\tregions(orderBy: regName_DESC) {\r\n\t\t\tid\r\n\t\t\tregName\r\n\t\t\tregCode\r\n\t\t}\r\n\t}\r\n`;\r\nconst GET_ALL_DIVISIONS_QUERY = gql`\r\n\tquery GET_ALL_DIVISIONS_QUERY {\r\n\t\tdivisions(orderBy: divName_ASC) {\r\n\t\t\tid\r\n\t\t\tdivName\r\n\t\t\tdivCode\r\n\t\t}\r\n\t}\r\n`;\r\nconst GET_DIVISIONS_OF_A_REGION_QUERY = gql`\r\n\tquery GET_DIVISIONS_OF_A_REGION_QUERY($id: ID!) {\r\n\t\tregion(id: $id) {\r\n\t\t\tid\r\n\t\t\tregName\r\n\t\t\tdivision(orderBy: divName_ASC) {\r\n\t\t\t\tid\r\n\t\t\t\tdivName\r\n\t\t\t\tdivCode\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\nconst CREATE_SUBDIVISION_MUTATION = gql`\r\n\tmutation CREATE_SUBDIVISION_MUTATION(\r\n\t\t$subDivName: String!\r\n\t\t$subDivCode: String!\r\n\t\t$division: DivisionWhereUniqueInput!\r\n\t) {\r\n\t\tcreateSubDivision(subDivName: $subDivName, subDivCode: $subDivCode, division: $division) {\r\n\t\t\tid\r\n\t\t\tsubDivName\r\n\t\t\tsubDivCode\r\n\t\t\tdivision {\r\n\t\t\t\tdivName\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nclass CreateSubDivision extends Component {\r\n\tstate = {\r\n\t\tsubDivName: '',\r\n\t\tsubDivCode: '',\r\n\t\tdivisionID: '12',\r\n\t\tregionID: '12',\r\n\t\tregion: storeRegion,\r\n\t\tdivision: storedDivision\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tconst { name, value, type } = e.target;\r\n\t\tconst val = type === 'number' ? parseInt(value) : value;\r\n\t\tthis.setState({ [name]: val });\r\n\t};\r\n\r\n\tgetselectedDivision = (dataSource) => {\r\n\t\t// 1 copy the data source\r\n\t\tif (dataSource.length > 0) {\r\n\t\t\tconst tempDivisions = [ ...dataSource ];\r\n\t\t\t// get the selected division object\r\n\t\t\tconst selectedDivision = tempDivisions.find((item) => item.id === this.state.divisionID);\r\n\t\t\tconsole.log(selectedDivision);\r\n\t\t\treturn selectedDivision;\r\n\t\t}\r\n\t};\r\n\r\n\tgetselectedRegion = (dataSource) => {\r\n\t\t// 1 copy the data source\r\n\t\tif (dataSource.length > 0) {\r\n\t\t\tconst tempRegions = [ ...dataSource ];\r\n\t\t\t// get the selected region object\r\n\t\t\tconst selectedRegion = tempRegions.find((item) => item.id === this.state.regionID);\r\n\t\t\tconsole.log('getting selected region');\r\n\t\t\tconsole.log(selectedRegion);\r\n\t\t\treturn selectedRegion;\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Query query={GET_ALL_REGIONS_QUERY}>\r\n\t\t\t\t{({ data, loading, error }) => {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tloading && <p>Loading...</p>;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\terror && <Error error={error} />;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst { regions } = data;\r\n\t\t\t\t\tconst anyRegion = regions[0];\r\n\t\t\t\t\tconsole.log('this is any chosen region');\r\n\t\t\t\t\tconsole.log(anyRegion);\r\n\r\n\t\t\t\t\t//prepare data for the region select options\r\n\t\t\t\t\tconst regionsOptions = regions.map((item) => (\r\n\t\t\t\t\t\t<option value={item.id} key={item.id}>\r\n\t\t\t\t\t\t\t{item.regName}-{item.regCode}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t));\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Query\r\n\t\t\t\t\t\t\tquery={GET_DIVISIONS_OF_A_REGION_QUERY}\r\n\t\t\t\t\t\t\tvariables={this.getselectedRegion(regions) || anyRegion}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ data, loading, error }) => {\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tloading && <p>Loading...</p>;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\terror && <Error error={error} />;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tconsole.log('these are the divisions of the selected region');\r\n\t\t\t\t\t\t\t\tconsole.log(data.region.division);\r\n\t\t\t\t\t\t\t\tconst divisionsOptions = data.region.division.map((item) => (\r\n\t\t\t\t\t\t\t\t\t<option value={item.id} key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t{item.divName}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t\t\t//*******important function'stripping off __typename')\r\n\t\t\t\t\t\t\t\tconst divisionsOfARegion = data.region.division.map(\r\n\t\t\t\t\t\t\t\t\t({ divName, divCode, __typename, ...others }) => others\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Mutation\r\n\t\t\t\t\t\t\t\t\t\tmutation={CREATE_SUBDIVISION_MUTATION}\r\n\t\t\t\t\t\t\t\t\t\tvariables={{\r\n\t\t\t\t\t\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\t\t\t\t\t\tdivision: this.getselectedDivision(divisionsOfARegion)\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{(createSubDivision, { loading, error }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<StyledDivision>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={async (e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst res = await createSubDivision();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(this.state);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>New Sub-Division</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Error error={error} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<fieldset disabled={loading} aria-busy={loading}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"regionID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"regionID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.regionID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Choisissez une region</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   {regionsOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"divisionID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"divisionID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.divisionID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Choisissez un departement</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{divisionsOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"subDivName\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"subDivName\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nom Arrondissement\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.subDivName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"subDivCode\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"subDivCode\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Code Arrondissement\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.subDivCode}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"submitButton\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\">Submit{loading ? 'ting' : ''}</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t\t\t</StyledDivision>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Mutation>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t</Query>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Query>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CreateSubDivision;\r\nexport { GET_ALL_DIVISIONS_QUERY };\r\n","import styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border-radius: 12px;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 50;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Shoot!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Shoot!</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n","import styled, { keyframes } from \"styled-components\";\n\nconst loading = keyframes`\n  from {\n    background-position: 0 0;\n    /* rotate: 0; */\n  }\n\n  to {\n    background-position: 100% 100%;\n    /* rotate: 360deg; */\n  }\n`;\n\nconst Form = styled.form`\n  /* box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05); */\n  background: ${props => props.theme.pureWhite};\n  /* background: rgba(0, 0, 0, 0.02); */\n  border: 5px solid white;\n  padding: 20px;\n  font-size: 1.7rem;\n  line-height: 1.4;\n  font-weight: 400;\n  label {\n    margin-bottom: 2rem;\n    /* display: block;\n     width:35vw; \n     box-sizing:border-box; */\n  }\n  input,\n  textarea,\n  select {\n    width: 100%;\n    padding: 1rem;\n    font-size: 2rem;\n    border-style: none;\n    border-bottom: 1px solid ${props => props.theme.black};\n    &:focus {\n      outline: 0;\n      border-color: ${props => props.theme.red};\n    }\n  }\n  button,\n  input[type='submit'] {\n    width: auto;\n    background: ${props => props.theme.googleBlue};\n    color: white;\n    border: 0;\n    font-size: 2rem;\n    font-weight: 300;\n    border-radius:7px;\n    margin-top: 1rem;\n    padding: .8rem .8rem;\n  }\n  fieldset {\n    max-width: 80vw;\n    /* min-width: 300px; */\n    margin: 20px \n    height: 60vh;\n    border: .8px solid ${props => props.theme.lightGrey};\n    padding: 15px;\n    display: flex;\n    flex-direction: row;\n    /* grid-template-columns: repeat(auto-fit, -ms-content-zoom-limit-max(200px,1fr)); */\n    border-radius:.5rem;\n    justify-items: center;\n    box-shadow: ${props => props.theme.bs};\n\n    &[disabled] {\n      opacity: 0.3;\n    }\n    &::before {\n      height: 10px;\n      content: '';\n      display: block;\n      background-image: linear-gradient(to right, #359 0%, #e2b04a 20%, #359 100%);\n      /* background-image: linear-gradient(to right, #ff3019 0%, #e2b04a 50%, #ff3019 100%); */\n    }\n    &[aria-busy='true']::before {\n      background-size: 50% auto;\n      animation: ${loading} 0.5s linear infinite;\n    }\n  }\n`;\n\nexport default Form;\n","export const storeRegion = {\r\n  id: \"ck3albumntavq09228sbbzlh8\",\r\n  regName: \"Lithuania\",\r\n  regCode: \"Minsk\"\r\n};\r\nexport const storedGender = {\r\n  id: \"cjzkbe47nadpi0b53a6wjogji\",\r\n  genderName: \"Male\",\r\n  genderCode: \"M\"\r\n};\r\nexport const storedDivision = {\r\n  id: \"ck3albumntavq09228sbbzlh8\",\r\n  divName: \"Lithuania\",\r\n  divCode: \"Minsk\"\r\n};\r\nexport const storedTown = {\r\n  id: \"ck3albumntavq09228sbbzlh8\",\r\n  townName: \"Moscow\",\r\n  townCode: \"Mosc\"\r\n};\r\n\r\nexport const storedSubDivision = {\r\n  id: \"ck3m9r2e51ar009642q8k5nhs\",\r\n  subDivCode: \"LLG\",\r\n  subDivName: \"Lilongwe\"\r\n};\r\n\r\nexport const storedEducType = {\r\n  id: \"ck3m9r2e51ar009642q8k5nhs\",\r\n  educTypeCode: \"BCG\",\r\n  educTypeName: \"Generale\"\r\n};\r\n\r\nexport const storedCandidate = {\r\n  id: \"ck3m9r2e51ar009642q8k5nhs\",\r\n  candidateCode: \"BCG\",\r\n  candidateName: \"Generale\"\r\n};\r\n\r\nexport const storedSeries = {\r\n  id: \"ck3m9r2e51ar009642q8k5nhs\",\r\n  seriesCode: \"BCG\",\r\n  seriesName: \"Generale\"\r\n};\r\n\r\nexport const storedSession = {\r\n  id: \"ck3m9r2e51ar009642q8k5nhs\",\r\n  sessionCode: \"BCG\",\r\n  sessionName: \"Generale\"\r\n};\r\n\r\nexport const storedExam = {\r\n  id: \"ck3m9r2e51ar009642q8k5nhs\",\r\n  examCode: \"BCG\",\r\n  examName: \"Generale\"\r\n};\r\n\r\nexport const storedCenter = {\r\n  id: \"ck3m9r2e51ar009642q8k5nhs\",\r\n  centerCode: \"BCG\",\r\n  centerName: \"Generale\"\r\n};\r\n\r\nexport const bestTowns = [\r\n  { id: \"ck3uryvzdn6x00922vhgbf532\", townName: \"Botexim\", townCode: \"BTM\" },\r\n  { id: \"ck3ury04en6ql09223dgegz0o\", townName: \"Hummingbird\", townCode: \"HUB\" },\r\n  { id: \"ck3urygiy9o140964a70t3auk\", townName: \"Shakinbrest\", townCode: \"SHB\" }\r\n];\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAUA;AACA;AAQA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AAQA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAMA;AAA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","sourceRoot":""}