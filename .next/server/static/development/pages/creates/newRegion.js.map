{"version":3,"file":"static\\development\\pages\\creates\\newRegion.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/creates/newRegion.jsx","webpack:///./src/components/ErrorMessage.js","webpack:///./src/components/formikForms/FormInputs.jsx","webpack:///./src/components/queries&Mutations&Functions/Mutations.jsx","webpack:///./src/components/region/CreateRegionFormik.jsx","webpack:///./src/components/styles/StyledPage.jsx","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"formik\"","webpack:///external \"graphql-tag\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"styled-components\"","webpack:///external \"yup\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React from 'react';\r\nimport CreateRegionFormik from '../../src/components/region/CreateRegionFormik';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst NewRegion = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CreateRegionFormik />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default NewRegion;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ErrorStyles = styled.div`\r\n  padding: 0.5rem;\r\n  background: ${props => props.theme.grey[2]};\r\n  margin:0 1.1rem ;\r\n  border-radius: 0.5rem;\r\n  border: 0.01rem solid rgba(0, 0, 0, 0.05);\r\n  /* border-right: 0.08rem solid red; */\r\n  border-left: 0.05rem solid red;\r\n  p {\r\n    margin: 0;\r\n    font-size:1.2rem;\r\n    font-weight: bold;\r\n  }\r\n  strong {\r\n    margin-right: 0.15rem;\r\n  }\r\n`;\r\n\r\nconst DisplayError = ({ error }) => {\r\n  if (!error || !error.message) return null;\r\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\r\n    return error.networkError.result.errors.map((error, i) => (\r\n      <ErrorStyles key={i}>\r\n        <p data-test=\"graphql-error\">\r\n          <strong>Probleme Reseaux!</strong>\r\n          {error.message.replace(\"GraphQL error: \", \"\")}\r\n        </p>\r\n      </ErrorStyles>\r\n    ));\r\n  }\r\n  return (\r\n    <ErrorStyles >\r\n      <p data-test=\"graphql-error\">\r\n        <strong>Erreure!</strong>\r\n        {error.message.replace(\"GraphQL error: \", \"\")}\r\n      </p>\r\n    </ErrorStyles>\r\n  );\r\n};\r\n\r\nDisplayError.defaultProps = {\r\n  error: {}\r\n};\r\n\r\nDisplayError.propTypes = {\r\n  error: PropTypes.object\r\n};\r\n\r\nexport default DisplayError;\r\n","import React from 'react';\r\n\r\nimport { useField } from 'formik';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledInput = styled.input`\r\npadding-top:01.2rem;\r\n    font-size: 1.7rem;\r\n    border-style: none;\r\n      outline: 0;\r\n     border-bottom: 0.09rem solid ${(props) => props.theme.black};\r\n    &:focus {\r\n      outline: 0;\r\n      border-color: ${(props) => props.theme.red};\r\n    }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n    border-style: none;\r\n     border-bottom: 0.09rem solid ${(props) => props.theme.black};\r\n    /* &:focus {\r\n      outline: 0;\r\n      border-color: ${(props) => props.theme.red};\r\n    }} */\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\npadding-top:01.2rem;\r\n    font-size: 1.7rem;\r\n    border-style: none;\r\n     border-bottom: 0.09rem solid ${(props) => props.theme.black};\r\n    &:focus {\r\n      outline: 0;\r\n      border-color: ${(props) => props.theme.red};\r\n    }\r\n`;\r\n\r\nconst StyledErrorMessage = styled.div`\r\npadding-top:0.2rem;\r\nfont-size:1.2rem;\r\nfont-weight:bold;\r\ncolor: ${props => props.theme.reddishBrown};\r\n/* padding-left: 0.5rem; */\r\n`;\r\n\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: ${props => props.theme.coollerBlue};\r\n  color: ${props => props.theme.white};\r\n  border: 0;\r\n  border-radius: .5rem;\r\n  font-size: 2rem;\r\n  font-weight: 300;\r\n  line-height: 2rem;\r\n  padding:0.5rem ;\r\n  margin: 0.5rem 0;\r\n  box-shadow: ${props => props.theme.bs2}\r\n  /* margin-bottom: 1.1rem; */\r\n  cursor: pointer;\r\n  /* &:hover {\r\n    background-color: ${props => props.theme.grey[10]};\r\n  }\r\n  &:disabled {\r\n    background-color: ${props => props.theme.grey[13]};\r\n  }  */\r\n  \r\n`;\r\n\r\n\r\nconst StyledButtonBlue = styled.button`\r\n  background-color: ${props => props.theme.pureWhite};\r\n  color: ${props => props.theme.googleBlue};\r\n  border: 0.1rem solid ${props => props.theme.googleBlue};\r\n  border-radius: .5rem;\r\n  font-size: 2rem;\r\n  font-weight: 300;\r\n  line-height: 2rem;\r\n  padding:0.5rem ;\r\n  box-shadow: ${props => props.theme.bs2}\r\n  /* margin-bottom: 1.1rem; */\r\n  cursor: pointer;\r\n  /* &:hover {\r\n    color: ${props => props.theme.coollerBlue}\r\n    background-color: ${props => props.theme.sand};\r\n  } */\r\n  /* &:disabled {\r\n    background-color: ${props => props.theme.grey[13]};\r\n  }  */\r\n  \r\n`;\r\n\r\n\r\nconst ButtonStyled = styled.div`\r\npadding-top: 1rem;\r\npadding-bottom: 1rem;\r\n\r\nbutton{\r\n    border-radius: 0.5rem;\r\n    font-size: 1.7rem;\r\n    font-weight:bold;\r\n    border: 0.1rem solid ${props => props.theme.googleBlue};\r\n    color: ${ props => props.theme.coollerBlue};\r\n    background: ${ props => props.theme.pureWhite};\r\n    cursor: pointer;\r\n    padding: 0.5srem 0.5rem;\r\n    outline: 0;\r\n    &:hover {\r\n    color: ${props => props.theme.coollerBlue}\r\n    background-color: ${props => props.theme.sand};\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst StyledForm = styled.div`\r\n/* padding-top:1rem; */\r\nmargin: 0 2rem;\r\nmargin-bottom:2rem;\r\nfont-size: 1.5rem;\r\nborder-radius: .8rem;\r\nborder: 0.09rem solid ${ (props) => props.theme.coollerBlue};\r\nbox-shadow: ${ (props) => props.theme.bs2};\r\nmin-width: 15rem;\r\n`;\r\n\r\n\r\nconst SygexInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      {/* <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel> */}\r\n      <StyledInput className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst SygexSelect = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      {/* <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel> */}\r\n      <StyledSelect {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { StyledLabel, StyledButton, StyledButtonBlue, SygexSelect, ButtonStyled, SygexInput, StyledForm }","import gql from 'graphql-tag'\r\n\r\n//************create mutations  */\r\nconst signInCandidate = gql`\r\n  mutation signInCandidate($candCode: String!) {\r\n    candidateSignIn(candCode: $candCode) {\r\n      id\r\n      cand1stName\r\n    }\r\n  }\r\n`\r\n//\r\n\r\nconst updateSessionMutation = gql`\r\n  mutation updateSessionMutation(\r\n    $id: ID!\r\n    $sessionName: String\r\n    $sessionCode: String\r\n  ) {\r\n    updateSession(\r\n      id: $id\r\n      sessionName: $sessionName\r\n      sessionCode: $sessionCode\r\n    ) {\r\n      sessionName\r\n      sessionCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateEducationTypeMutation = gql`\r\n  mutation updateEducationTypeMutation(\r\n    $id: ID!\r\n    $educationTypeName: String\r\n    $educationTypeCode: String\r\n  ) {\r\n    updateEducationType(\r\n      id: $id\r\n      educationTypeName: $educationTypeName\r\n      educationTypeCode: $educationTypeCode\r\n    ) {\r\n      id\r\n      educationTypeName\r\n      educationTypeCode\r\n    }\r\n  }\r\n`\r\nconst updateSubjectTypeMutation = gql`\r\n  mutation updateSubjectTypeMutation(\r\n    $id: ID!\r\n    $subjectTypeName: String\r\n    $subjectTypeCode: String\r\n  ) {\r\n    updateSubjectType(\r\n      id: $id\r\n      subjectTypeName: $subjectTypeName\r\n      subjectTypeCode: $subjectTypeCode\r\n    ) {\r\n      id\r\n      subjectTypeName\r\n      subjectTypeCode\r\n    }\r\n  }\r\n`\r\n\r\nconst updateSubjectMutation = gql`\r\n  mutation updateSubjectMutation(\r\n    $id: ID!\r\n    $subjectName: String\r\n    $subjectCode: String\r\n  ) {\r\n    updateSubject(\r\n      id: $id\r\n      subjectName: $subjectName\r\n      subjectCode: $subjectCode\r\n    ) {\r\n      subjectName\r\n      subjectCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateRankMutation = gql`\r\n  mutation updateRankMutation($id: ID!, $rankName: String, $rankCode: String) {\r\n    updateRank(id: $id, rankName: $rankName, rankCode: $rankCode) {\r\n      id\r\n      rankName\r\n      rankCode\r\n    }\r\n  }\r\n`\r\n\r\nconst updateSeriesMutation = gql`\r\n  mutation updateSeriesMutation(\r\n    $id: ID!\r\n    $seriesName: String\r\n    $seriesCode: String\r\n  ) {\r\n    updateSeries(id: $id, seriesName: $seriesName, seriesCode: $seriesCode) {\r\n      seriesName\r\n      seriesCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateDivisionMutation = gql`\r\n  mutation updateDivisionMutation(\r\n    $id: ID!\r\n    $divName: String\r\n    $divCode: String\r\n  ) {\r\n    updateDivision(id: $id, divName: $divName, divCode: $divCode) {\r\n      id\r\n      divName\r\n      divCode\r\n    }\r\n  }\r\n`\r\n\r\nconst updateRegionMutation = gql`\r\n  mutation updateRegionMutation($id: ID!, $regName: String, $regCode: String) {\r\n    updateRegion(id: $id, regName: $regName, regCode: $regCode) {\r\n      id\r\n      regName\r\n      regCode\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewReportMutation = gql`\r\n  mutation createNewReportMutation(\r\n    $reportImage: String!\r\n    $reportName: String!\r\n    $centerAdmin: CenterAdminWhereUniqueInput!\r\n  ) {\r\n    createReport(\r\n      reportImage: $reportImage\r\n      reportName: $reportName\r\n      centerAdmin: $centerAdmin\r\n    ) {\r\n      id\r\n      reportName\r\n      reportImage\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewGenderMutation = gql`\r\n  mutation createNewGenderMutation($genderName: String!, $genderCode: String!) {\r\n    createGender(genderName: $genderName, genderCode: $genderCode) {\r\n      id\r\n      genderCode\r\n      genderName\r\n    }\r\n  }\r\n`\r\n\r\nconst createRegistrationMutation = gql`\r\n  mutation createRegistrationMutation(\r\n    $candidate: CandidateWhereUniqueInput!\r\n    $candExamSecretCode: String!\r\n    $candExamSession: String!\r\n    $candRegistrationNumber: String!\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n    $centerExamSessionSeries: CenterExamSessionSeriesWhereUniqueInput!\r\n    $series: SeriesWhereUniqueInput!\r\n  ) {\r\n    createRegistration(\r\n      candidate: $candidate\r\n      candExamSecretCode: $candExamSecretCode\r\n      candExamSession: $candExamSession\r\n      candRegistrationNumber: $candRegistrationNumber\r\n      centerExamSession: $centerExamSession\r\n      centerExamSessionSeries: $centerExamSessionSeries\r\n      series: $series\r\n    ) {\r\n      id\r\n      centerExamSession {\r\n        id\r\n        center {\r\n          id\r\n          centerName\r\n        }\r\n      }\r\n      candidate {\r\n        id\r\n        cand1stName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createCenterExamSessionMutation = gql`\r\n  mutation createCenterExamSessionMutation(\r\n    $examSession: ExamSessionWhereUniqueInput!\r\n    $center: CenterWhereUniqueInput!\r\n  ) {\r\n    createCenterExamSession(examSession: $examSession, center: $center) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst createPhaseRankMutation = gql`\r\n  mutation createPhaseRankMutation(\r\n    $phase: PhaseWhereUniqueInput!\r\n    $rank:  RankWhereUniqueInput!                                                                                                                                                                    \r\n  ) {\r\n    createPhaseRank(phase: $phase, rank: $rank){                                                                                                                                                                      \r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst createCenterExamSessionExaminerMutation = gql`\r\n  mutation createCenterExamSessionExaminerMutation(\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n    $examiner:  ExaminerWhereUniqueInput! \r\n    $phaseRank:  PhaseRankWhereUniqueInput! \r\n  ) {\r\n    createCenterExamSessionExaminer(\r\n    phaseRank: $phaseRank,\r\n    centerExamSession: $centerExamSession,\r\n    examiner: $examiner\r\n    ){                                                                                                                                                                      \r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst createCenterExamSessionSeriesMutation = gql`\r\n  mutation createCenterExamSessionSeriesMutation(\r\n    $series: SeriesWhereUniqueInput!\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n  ) {\r\n    createCenterExamSessionSeries(\r\n      series: $series\r\n      centerExamSession: $centerExamSession\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\n\r\n// const createCenterExamSessionexaminerorityMutation = gql`\r\n//   mutation createCenterExamSessionexaminerorityMutation(\r\n//     $rank: RankWhereUniqueInput!\r\n//     $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n//     $examinerName: String!\r\n//     $examinerCode: String!\r\n//     $examinerCNI: String!\r\n//     $examinerPhone: Int!\r\n//     $examinerMatricule: String!\r\n//   ) {\r\n//     createCenterExamSessionexaminerority(\r\n//       rank: $rank\r\n//       centerExamSession: $centerExamSession\r\n//       examinerCNI: $examinerCNI\r\n//       examinerName: $examinerName\r\n//       examinerCode: $examinerCode\r\n//       examinerPhone: $examinerPhone\r\n//       examinerMatricule: $examinerMatricule\r\n//     ) {\r\n//       examinerName\r\n//       examinerCode\r\n//       examinerPhone\r\n//     }\r\n//   }\r\n// `\r\n\r\nconst createDivisionMutation = gql`\r\n  mutation createDivisionMutation(\r\n    $divName: String!\r\n    $divCode: String!\r\n    $region: RegionCreateWithoutDivisionInput!\r\n  ) {\r\n    createDivision(divName: $divName, divCode: $divCode, region: $region) {\r\n      id\r\n      divName\r\n    }\r\n  }\r\n`\r\n\r\nconst createCenterMutation = gql`\r\n  mutation createCenterMutation(\r\n    $centerName: String!\r\n    $centerNumber: Int\r\n    $centerCode: String!\r\n    $centerSecretCode: String!\r\n    $town: TownWhereUniqueInput!\r\n  ) {\r\n    createCenter(\r\n      centerSecretCode: $centerSecretCode\r\n      centerName: $centerName\r\n      centerNumber: $centerNumber\r\n      centerCode: $centerCode\r\n      town: $town\r\n    ) {\r\n      id\r\n      centerName\r\n      centerSecretCode\r\n      centerCode\r\n      town {\r\n        townName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createSeriesMutation = gql`\r\n  mutation createSeriesMutation(\r\n    $seriesName: String!\r\n    $seriesCode: String!\r\n    $educationType: EducationTypeWhereUniqueInput!\r\n  ) {\r\n    createSeries(\r\n      seriesName: $seriesName\r\n      seriesCode: $seriesCode\r\n      educationType: $educationType\r\n    ) {\r\n      id\r\n      seriesName\r\n    }\r\n  }\r\n`\r\nconst createEducationTypeMutation = gql`\r\n  mutation createEducationTypeMutation(\r\n    $educationTypeName: String!\r\n    $educationTypeCode: String!\r\n  ) {\r\n    createEducationType(\r\n      educationTypeName: $educationTypeName\r\n      educationTypeCode: $educationTypeCode\r\n    ) {\r\n      id\r\n      educationTypeName\r\n    }\r\n  }\r\n`\r\n\r\nconst createTownMutation = gql`\r\n  mutation createTownMutation(\r\n    $townName: String!\r\n    $townCode: String!\r\n    $subDiv: SubDivisionWhereUniqueInput!\r\n  ) {\r\n    createTown(townName: $townName, townCode: $townCode, subDiv: $subDiv) {\r\n      id\r\n      townName\r\n      townCode\r\n      subDiv {\r\n        subDivName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewSubjectTypeMutation = gql`\r\n  mutation createNewSubjectTypeMutation(\r\n    $subjectTypeName: String!\r\n    $subjectTypeCode: String!\r\n  ) {\r\n    createSubjectType(\r\n      subjectTypeName: $subjectTypeName\r\n      subjectTypeCode: $subjectTypeCode\r\n    ) {\r\n      id\r\n      subjectTypeName\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewSubjectMutation = gql`\r\n  mutation createNewSubjectMutation(\r\n    $subjectName: String!\r\n    $subjectCode: String!\r\n    $subjectType: SubjectTypeWhereUniqueInput!\r\n    $educType: EducationTypeWhereUniqueInput!\r\n  ) {\r\n    createSubject(\r\n      subjectName: $subjectName\r\n      educType: $educType\r\n      subjectCode: $subjectCode\r\n      subjectType: $subjectType\r\n    ) {\r\n      subjectCode\r\n      subjectName\r\n    }\r\n  }\r\n`\r\n\r\nconst createSubDivisionMutation = gql`\r\n  mutation createSubDivisionMutation(\r\n    $subDivName: String!\r\n    $subDivCode: String!\r\n    $division: DivisionWhereUniqueInput!\r\n  ) {\r\n    createSubDivision(\r\n      subDivName: $subDivName\r\n      subDivCode: $subDivCode\r\n      division: $division\r\n    ) {\r\n      id\r\n      subDivName\r\n      subDivCode\r\n      division {\r\n        divName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewSessionMutation = gql`\r\n  mutation createNewSessionMutation(\r\n    $sessionName: String!\r\n    $sessionCode: String!\r\n  ) {\r\n    createSession(sessionName: $sessionName, sessionCode: $sessionCode) {\r\n      id\r\n      sessionName\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewRankMutation = gql`\r\n  mutation createNewRankMutation($rankName: String!, $rankCode: String!) {\r\n    createRank(rankName: $rankName, rankCode: $rankCode) {\r\n      id\r\n      rankName\r\n    }\r\n  }\r\n`\r\nconst createNewRegionMutation = gql`\r\n  mutation createNewRegionMutation($regName: String!, $regCode: String!) {\r\n    createRegion(regName: $regName, regCode: $regCode) {\r\n      id\r\n      regName\r\n    }\r\n  }\r\n`\r\n\r\nconst createPhaseMutation = gql`\r\n  mutation createPhaseMutation($phaseName: String!, $phaseCode: String!){\r\n    createPhase(phaseName: $phaseName, phaseCode: $phaseCode) {\r\n      id\r\n      phaseName\r\n    }\r\n  }\r\n`\r\n\r\nconst createExamMutation = gql`\r\n  mutation createExamMutation($examName: String!, $examCode: String!) {\r\n    createExam(examName: $examName, examCode: $examCode) {\r\n      id\r\n      examName\r\n    }\r\n  }\r\n`\r\n\r\nconst registerSubjectSeriesMutation = gql`\r\n  mutation registerSubjectSeriesMutation(\r\n    $subject: SubjectWhereUniqueInput!\r\n    $series: SeriesWhereUniqueInput!\r\n    $coeff: Int!\r\n  ) {\r\n    createSubjectSeries(subject: $subject, series: $series, coeff: $coeff) {\r\n      id\r\n      series {\r\n        id\r\n        seriesName\r\n        subjectSeries {\r\n          id\r\n          subject {\r\n            id\r\n            subjectName\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst registerNewSubjectSeriesMutation = gql`\r\n  mutation registerNewSubjectSeriesMutation(\r\n    $series: SeriesWhereUniqueInput!\r\n    $coeff: Int!\r\n    $subjectName: String!\r\n    $subjectCode: String!\r\n  ) {\r\n    createSubjectSeries(\r\n      subjectCode: $subjectCode\r\n      subjectName: $subjectName\r\n      series: $series\r\n      coeff: $coeff\r\n    ) {\r\n      id\r\n      series {\r\n        id\r\n        seriesName\r\n        subjectSeries {\r\n          id\r\n          subjectName\r\n          subjectCode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createCandidateMutation = gql`\r\n  mutation createCandidateMutation(\r\n    $cand1stName: String!\r\n    $cand2ndName: String\r\n    $cand3rdName: String\r\n    $dadName: String\r\n    $momName: String\r\n    $candCode: String\r\n    $email: String!\r\n    $image: String!\r\n    $phoneNumb: Int\r\n    $dateOfBirth: DateTime\r\n    $birthCertNumber: String\r\n    $placeOfBirth: String\r\n    $gender: GenderWhereUniqueInput!\r\n  ) {\r\n    createCandidate(\r\n      cand1stName: $cand1stName\r\n      cand2ndName: $cand2ndName\r\n      dadName: $dadName\r\n      momName: $momName\r\n      cand3rdName: $cand3rdName\r\n      candCode: $candCode\r\n      email: $email\r\n      image: $image\r\n      phoneNumb: $phoneNumb\r\n      dateOfBirth: $dateOfBirth\r\n      birthCertNumber: $birthCertNumber\r\n      placeOfBirth: $placeOfBirth\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      cand1stName\r\n      cand2ndName\r\n      cand3rdName\r\n      momName\r\n      dadName\r\n      candCode\r\n      birthCertNumber\r\n      dateOfBirth\r\n      image\r\n    }\r\n  }\r\n`\r\n\r\nconst createExaminerMutation = gql`\r\n  mutation createExaminerMutation(\r\n    $examiner1stName: String!\r\n    $examiner2ndName: String!\r\n    $examinerOtherNames: String\r\n    $examinerCode: String!\r\n    $examinerEmail: String!\r\n    $examinerCNI: String!\r\n    $examinerMatricule: String!\r\n    $examinerImage: String!\r\n    $examinerPhone: Int!\r\n  ) {\r\n    createExaminer(\r\n      examiner1stName: $examiner1stName\r\n      examiner2ndName: $examiner2ndName\r\n      examinerOtherNames: $examinerOtherNames\r\n      examinerMatricule: $examinerMatricule\r\n      examinerCode: $examinerCode\r\n      examinerCNI: $examinerCNI\r\n      examinerEmail: $examinerEmail\r\n      examinerImage: $examinerImage\r\n      examinerPhone: $examinerPhone\r\n    ) {\r\n      id\r\n      examiner1stName\r\n      examiner2ndName\r\n      examinerOtherNames\r\n      examinerCode\r\n      examinerEmail\r\n      examinerImage\r\n      examinerPhone\r\n    }\r\n  }\r\n`\r\n\r\n//************create mutations  */\r\n\r\n////**************Update mutations */\r\n\r\nconst updateSubDivisionMutation = gql`\r\n  mutation updateSubDivisionMutation(\r\n    $id: ID!\r\n    $subDivName: String\r\n    $subDivCode: String\r\n  ) {\r\n    updateSubDivision(\r\n      id: $id\r\n      subDivName: $subDivName\r\n      subDivCode: $subDivCode\r\n    ) {\r\n      subDivName\r\n      subDivCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateCenterMutation = gql`\r\n  mutation updateCenterMutation(\r\n    $id: ID!\r\n    $centerName: String\r\n    $centerCode: String\r\n    $centerNumber: Int\r\n  ) {\r\n    updateCenter(\r\n      id: $id\r\n      centerName: $centerName\r\n      centerCode: $centerCode\r\n      centerNumber: $centerNumber\r\n    ) {\r\n      id\r\n      centerName\r\n      centerNumber\r\n      centerCode\r\n    }\r\n  }\r\n`\r\n\r\nconst updateTownMutation = gql`\r\n  mutation updateTownMutation($id: ID!, $townName: String, $townCode: String) {\r\n    updateTown(id: $id, townName: $townName, townCode: $townCode) {\r\n      townName\r\n      townCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateExamMutation = gql`\r\n  mutation updateExamMutation($id: ID!, $examName: String, $examCode: String) {\r\n    updateExam(id: $id, examName: $examName, examCode: $examCode) {\r\n      examName\r\n      examCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateScoreMutation = gql`\r\n  mutation updateScoreMutation(\r\n    $subjectSeries: SubjectSeriesWhereUniqueInput!\r\n    $subjectAve: Float!\r\n    $candExamSecretCode: String!\r\n  ) {\r\n    updateScore(\r\n      subjectSeries: $subjectSeries\r\n      subjectAve: $subjectAve\r\n      candExamSecretCode: $candExamSecretCode\r\n    ) {\r\n      subjectAve\r\n      coeff\r\n      id\r\n      subjectSeries {\r\n        id\r\n        subjectCode\r\n        subjectName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst logInUserMutation = gql`\r\n  mutation logInUserMutation($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      id\r\n      email\r\n      password\r\n    }\r\n  }\r\n`\r\n\r\nconst updateCandidateMutation = gql`\r\n  mutation updateCandidateMutation(\r\n    $id: ID!\r\n    $cand1stName: String\r\n    $cand2ndName: String\r\n    $cand3rdName: String\r\n    $momName: String\r\n    $dadName: String\r\n    $email: String\r\n    $image: String\r\n    $phoneNumb: Int\r\n    $placeOfBirth: String\r\n    $dateOfBirth: DateTime\r\n    $birthCertNumber: String\r\n    $gender: GenderWhereUniqueInput\r\n  ) {\r\n    updateCandidate(\r\n      id: $id\r\n      cand1stName: $cand1stName\r\n      cand2ndName: $cand2ndName\r\n      cand3rdName: $cand3rdName\r\n      momName: $momName\r\n      dadName: $dadName\r\n      email: $email\r\n      image: $image\r\n      phoneNumb: $phoneNumb\r\n      placeOfBirth: $placeOfBirth\r\n      dateOfBirth: $dateOfBirth\r\n      birthCertNumber: $birthCertNumber\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      cand1stName\r\n      cand2ndName\r\n      cand3rdName\r\n      image\r\n      gender {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst updateGenderMutation = gql`\r\n  mutation updateGenderMutation(\r\n    $id: ID!\r\n    $genderName: String\r\n    $genderCode: String\r\n  ) {\r\n    updateGender(id: $id, genderName: $genderName, genderCode: $genderCode) {\r\n      id\r\n      genderName\r\n      genderCode\r\n    }\r\n  }\r\n`\r\n\r\nconst signUpMutation = gql`\r\n  mutation signUpMutation($email: String!, $name: String!, $password: String!) {\r\n    signUp(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      resetToken\r\n      password\r\n    }\r\n  }\r\n`\r\n\r\nconst updateItemMutation = async (e, updateMutation) => {\r\n  e.preventDefault()\r\n  console.log('Updating Region!!')\r\n  const res = await updateMutation({\r\n    variables: {\r\n      id: this.props.id,\r\n      ...this.state,\r\n    },\r\n  })\r\n  console.log('Region Updated!!')\r\n}\r\n\r\n////**************Update mutations */\r\n\r\nexport {\r\n  createCandidateMutation,\r\n  createNewSubjectMutation,\r\n  createNewSubjectTypeMutation,\r\n  createTownMutation,\r\n  createCenterExamSessionExaminerMutation,\r\n  createDivisionMutation,\r\n  createRegistrationMutation,\r\n  createCenterMutation,\r\n  createEducationTypeMutation,\r\n  createSeriesMutation,\r\n  createSubDivisionMutation,\r\n  createNewSessionMutation,\r\n  createNewRankMutation,\r\n  createNewReportMutation,\r\n  createNewRegionMutation,\r\n  createNewGenderMutation,\r\n  createExamMutation,\r\n  registerSubjectSeriesMutation,\r\n  registerNewSubjectSeriesMutation,\r\n  updateCenterMutation,\r\n  updateTownMutation,\r\n  updateSessionMutation,\r\n  updateRegionMutation,\r\n  updateExamMutation,\r\n  updateSubDivisionMutation,\r\n  updateGenderMutation,\r\n  logInUserMutation,\r\n  updateCandidateMutation,\r\n  updateScoreMutation,\r\n  updateDivisionMutation,\r\n  updateItemMutation,\r\n  createExaminerMutation,\r\n  createPhaseMutation,\r\n  createCenterExamSessionSeriesMutation,\r\n  updateSeriesMutation,\r\n  updateRankMutation,\r\n  createPhaseRankMutation,\r\n  signUpMutation,\r\n  updateSubjectMutation,\r\n  updateSubjectTypeMutation,\r\n  createCenterExamSessionMutation,\r\n  updateEducationTypeMutation,\r\n  signInCandidate,\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Mutation } from 'react-apollo'\r\nimport { MinimStyledPage } from '../styles/StyledPage'\r\nimport { Formik, Form } from 'formik';\r\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../formikForms/FormInputs'\r\nimport styled from 'styled-components';\r\nimport Error from '../ErrorMessage'\r\nimport * as Yup from 'yup';\r\nimport { createNewRegionMutation } from '../queries&Mutations&Functions/Mutations'\r\n\r\nconst InputGroup = styled.div`\r\n    \r\n    display: flex;\r\n    flex-direction:column;\r\n    margin:0 1rem;\r\n   \r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\nflex-direction:column;\r\n`;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    regName: Yup.string()\r\n        .required('Nom de Région obligatoire'),\r\n    regCode: Yup.string()\r\n        .required('Code de Région obligatoire'),\r\n\r\n});\r\n\r\nclass CreateRegionFormik extends Component {\r\n    initialFormState = {\r\n        regName: '',\r\n        regCode: ''\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Mutation mutation={createNewRegionMutation} >\r\n                {(createRegion, { loading, error }) => (\r\n                    <Formik\r\n                        initialValues={this.initialFormState}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={async (values, actions, setSubmitting, resetForm) => {\r\n                            const res = await createRegion({ variables: values })\r\n                            setTimeout(() => {\r\n                                console.log(JSON.stringify(values, null, 2));\r\n                                console.log(res)\r\n                                actions.resetForm(true);\r\n                                actions.setSubmitting(false);\r\n                            }, 400);\r\n                        }}\r\n\r\n                    >\r\n                        <MinimStyledPage>\r\n                            <h4>Crée Région</h4>\r\n                            <Error error={error} />\r\n                            <StyledForm>\r\n                                <Form>\r\n                                    <AllControls>\r\n                                        <InputGroup>\r\n                                            <SygexInput\r\n                                                name=\"regName\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Nom De la Région\"\r\n                                            />\r\n                                            <SygexInput\r\n                                                name=\"regCode\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Code de la Région\"\r\n                                            />\r\n\r\n                                        </InputGroup>\r\n                                        <ButtonStyled>\r\n                                            <StyledButton type=\"submit\">Valid{loading ? 'ation en cours' : 'er'}</StyledButton>\r\n                                        </ButtonStyled>\r\n                                    </AllControls>\r\n                                </Form>\r\n                            </StyledForm>\r\n                        </MinimStyledPage>\r\n                    </Formik>\r\n                )}\r\n            </Mutation>\r\n\r\n        );\r\n    }\r\n}\r\nexport default CreateRegionFormik;","import styled from \"styled-components\";\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  max-width: 55vw;\r\n  min-width: 20rem;\r\n height: 100vh;\r\n  \r\nbackground-color: ${props => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n  }\r\n  form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst MiniStyledPage = styled.div`\r\n  display: block;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  max-width: 40vw;\r\n  min-width: 20rem;\r\n  height: 100vh;\r\n  background-color: ${props => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n    font-weight: normal;\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst MinimStyledPage = styled.div`\r\nmargin:0;\r\n  display: block;\r\n  margin: 1rem auto;\r\n  text-align: center;\r\n  max-width: 30vw;\r\n  min-width: 20rem;\r\n  height: 100vh;\r\n  \r\nbackground-color: ${props => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    font-size: 1.9rem;\r\n    font-weight: normal;\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst BigStyledPage = styled.div`\r\n  display: block;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  max-width: 80vw;\r\n  min-width: 20rem;\r\n  height:100vh;\r\n\r\n  h4 {\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n    font-weight: normal;\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  fieldset {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst BiggestStyledPage = styled.div`\r\n  display: block;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  max-width: 50vw;\r\n  min-width: 20rem;\r\n  height: 100vh;\r\nbackground-color: ${props => props.theme.pureWhite};\r\n\r\n  h4 {\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n    font-weight: normal;\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  } \r\n  fieldset {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport { MinimStyledPage, MiniStyledPage, StyledPage, BigStyledPage, BiggestStyledPage };\r\n\r\n\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"formik\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"styled-components\");","module.exports = require(\"yup\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAeA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AAKA;AAAA;AAGA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAaA;AAAA;AAAA;AA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","sourceRoot":""}