{"version":3,"file":"static\\development\\pages\\displayRegionList.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/displayRegionList.jsx","webpack:///./src/components/DeleteRegion.jsx","webpack:///./src/components/RegionList.jsx","webpack:///./src/components/Regions.jsx","webpack:///external \"graphql-tag\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React, {Component} from 'react'\r\nimport gql from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\nimport RegionList from '../src/components/RegionList';\r\nimport styled from 'styled-components';\r\n\r\nconst ALL_REGIONS_QUERY = gql `\r\n query ALL_REGIONS_QUERY{\r\n   regions{\r\n   regName  \r\n   regCode  \r\n   id\r\n  }}\r\n`;\r\n\r\nconst RegionPageTitle = styled.div `\r\n  width: 50vw;\r\n  margin: 0 auto;\r\n  border-radius:12px;\r\n  min-height: 90vh;\r\n`;\r\nconst RegionHeader = styled.div `\r\n    padding: 10px 0;\r\n    display: flex;\r\n    justify-content: left;\r\n    border-bottom: 2px solid black;\r\n    background: lightgray;\r\n    border-radius:12px;\r\n    `;\r\n\r\nconst TitleItem = styled.div `\r\n    margin:0 20px;\r\n    border-right: 1px solid black;\r\n      text-transform: capitalize;\r\n      width: 25%;\r\n      text-align:left;\r\n      `;\r\n\r\nconst AllRegStyles = styled.div `\r\n    line-height:5px;\r\n    display: grid;\r\n    grid-template-columns: 1fr ;\r\n    \r\n `;\r\n\r\nclass RegionDisplay extends Component {\r\n    render() {\r\n        return (\r\n            <RegionPageTitle>\r\n                <RegionHeader>\r\n                    <TitleItem >\r\n                        <span>Region Name</span>\r\n                    </TitleItem>\r\n                    <TitleItem >\r\n                        <span>Region Code</span>\r\n                    </TitleItem>\r\n                </RegionHeader>\r\n\r\n                <Query query={ALL_REGIONS_QUERY}>\r\n                    {({loading, error, data}) => {\r\n                        console.log(data.regions)\r\n  {loading && <p>Loading...</p>}\r\n  {error && <p>Error: {error.message}</p>}\r\n                        return (\r\n                            <AllRegStyles>\r\n{data.regions.map(region => <RegionList eachRegion={region} key={region.id}/>)}\r\n                            </AllRegStyles>\r\n                        );\r\n                    }}\r\n                </Query>\r\n\r\n            </RegionPageTitle>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegionDisplay;\r\n","import React, {Component} from 'react'\r\nimport {Mutation} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport  styled from 'styled-components'\r\nimport { ALL_REGIONS_QUERY } from './Regions'\r\n\r\nconst DELETE_REGION_MUTATION = gql `\r\n mutation DELETE_REGION_MUTATION($id: ID!){\r\n   deleteRegion(id: $id){\r\n     id\r\n   }\r\n }\r\n`;\r\n\r\nconst DelBtn = styled.button `\r\n  font-weight: bold;\r\n  border-radius:8px;\r\n  font-size:1.5rem;\r\n  height:30px;\r\n  border:none;\r\n  padding:5px;\r\n  align-items:center;\r\n  background-color: white;\r\n  color: black;\r\n  width:7vw;\r\n  border: 2px solid #4CAF50; /* Green */\r\n  :hover{\r\n    cursor:pointer;\r\n    background-color: #4CAF50;\r\n  color: white;\r\n}\r\n  }\r\n`;\r\n\r\n\r\n\r\nclass DeleteRegion extends Component {\r\n\r\n  updateCache =(cache, payload)=>{\r\n\r\n  // manually update the cache so that the data are all the same\r\n  // 1. read the cache for the data we want\r\nconst data= cache.readQuery({query: ALL_REGIONS_QUERY});\r\n// the deletedselect all the other regions except the deleted one from the cache\r\ndata.regions = data.regions.filter(region => region.id !== payload.data.deleteRegion.id);\r\n//  3. write the new data back to the cache\r\nconsole.log('getting payload');\r\nconsole.log(payload);\r\ncache.writeQuery({query: ALL_REGIONS_QUERY, data });\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Mutation  \r\n            mutation={DELETE_REGION_MUTATION} \r\n            variables={{id: this.props.id}}\r\n            update={this.updateCache} \r\n            >\r\n                    {(deleteRegion, {error}) => (\r\n                        <DelBtn onClick={()=>\r\n        {if(confirm('Do you want to delete this candidate ?'))\r\n                    { deleteRegion();}\r\n                    }}>\r\n                    {this.props.children}</DelBtn>\r\n                    )}\r\n                </Mutation>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeleteRegion;\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link'\r\nimport DeleteRegion from './DeleteRegion'\r\n\r\nconst RegionRow = styled.div `\r\ndisplay:grid;\r\nwidth:50vw;\r\ngrid-template-columns:2fr 2fr 1fr 1fr ;\r\ngrid-gap:15px;\r\nbackground-color:${props => props.theme.lightGrey};\r\nalign-items:center;\r\njustify-items:center;\r\nborder-bottom:1px solid black;\r\npadding:  5px 15px;\r\n`;\r\nconst CellBlock = styled.div `\r\n  align-content:left;\r\n text-align:left;\r\n  `;\r\nconst DeleteBlock = styled.div `\r\n/* width:25vw; */\r\nalign-content:left;\r\n   `;\r\nconst UpdateBlock = styled.button `\r\njustify-content:left;\r\nwidth: 7vw;\r\n  font-weight: bold;\r\n  border-radius:8px;\r\n  font-size:1.5rem;\r\n  height:30px;\r\n  border:none;\r\n  padding:5px;\r\n  align-items:center;\r\n  background-color: white;\r\n  color: black;\r\n  border: 2px solid #4CAF50; /* Green */\r\n  :hover{\r\n    cursor:pointer;\r\n    background-color: #4CAF50;\r\n     color: white;\r\n}\r\n    `;\r\n\r\n\r\nclass regionList extends Component {\r\n    static propTypes = {\r\n        eachRegion: PropTypes.object.isRequired\r\n    }\r\n\r\n    render() {\r\n        const {regName, regCode, id} = this.props.eachRegion\r\n        return (\r\n            <RegionRow>\r\n                <CellBlock>\r\n                    <span >{regName}</span>\r\n                </CellBlock>\r\n                <CellBlock>\r\n                    <span >{regCode}</span>\r\n                </CellBlock>\r\n                <UpdateBlock>\r\n                    <Link\r\n                        href={{\r\n                        pathname: 'regionUpdate',\r\n                        query: {id}\r\n                    }}>\r\n                        <a >Update</a>\r\n                    </Link>\r\n                </UpdateBlock>\r\n                <DeleteBlock>\r\n                <DeleteRegion id={id}>Delete</DeleteRegion>\r\n                </DeleteBlock>\r\n            </RegionRow>\r\n        )\r\n    }\r\n}\r\nexport default regionList;","import React, {Component} from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {Query} from 'react-apollo'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst CenterStyled = styled.div`\r\ntext-align:center;\r\n\r\n`;\r\nconst ItemsList = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: 1fr 1fr;\r\ngrid-gap: 20px;\r\nmargin: 0 auto;\r\nmax-width: ${props=> props.theme.maxWidth}; \r\n`;\r\n\r\nconst ALL_REGIONS_QUERY = gql `\r\n query  ALL_REGIONS_QUERY {\r\n   regions{\r\n     regName\r\n   regCode\r\n   id\r\n   \r\n   }\r\n  }\r\n`;\r\n\r\nclass Regions extends Component {\r\n    render() {\r\n        return (\r\n            <CenterStyled>\r\n                <p>Regions</p>\r\n                <Query query={ALL_REGIONS_QUERY}>\r\n\r\n                  {({data, error, loading})=> {\r\nloading &&  <p>Loading...</p> \r\nerror &&  <p>Error: {error.message} </p>\r\n\r\nreturn <ItemsList>\r\n      {data.regions.map(region=> <p>  {region.regName}</p>)}        \r\n</ItemsList>\r\n                  }}\r\n                </Query>\r\n            </CenterStyled>\r\n        )\r\n    }\r\n}\r\nexport default Regions;\r\nexport {ALL_REGIONS_QUERY};","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/link\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"styled-components\");"],"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","sourceRoot":""}