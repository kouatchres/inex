{"ast":null,"code":"var _jsxFileName = \"E:\\\\SYGEFEX\\\\Sygefex-front-Formik\\\\src\\\\components\\\\candidate\\\\CreateNewCandidate.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { MiniStyledPage } from '../styles/StyledPage';\nimport Error from '../ErrorMessage.js';\nimport { Formik, Form } from 'formik';\nimport Router from 'next/router';\nimport useForm from '../utils/useForm';\nimport Select from 'react-select';\nimport { customStyle, SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport { getAllGendersQuery } from '../queries&Mutations&Functions/Queries';\nimport { createCandidateMutation } from '../queries&Mutations&Functions/Mutations';\nimport { uniqueCodeGen, getObjectFromID, removeTypename } from '../queries&Mutations&Functions/Functions';\nconst PicFrame = styled.div.withConfig({\n  displayName: \"CreateNewCandidate__PicFrame\",\n  componentId: \"w1rd2d-0\"\n})([\"display:flex;flex-direction:column;margin-top:1rem;img{margin-top:1rem;margin-left:5rem;height:15rem;width:15rem;border-radius:15px;background-size:contain;background-position:center;}\"]);\nconst InputGroup = styled.div.withConfig({\n  displayName: \"CreateNewCandidate__InputGroup\",\n  componentId: \"w1rd2d-1\"\n})([\"display:flex;flex-direction:column;min-width:13rem;padding-left:1rem;\"]);\nconst TwoGroups = styled.div.withConfig({\n  displayName: \"CreateNewCandidate__TwoGroups\",\n  componentId: \"w1rd2d-2\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(16rem,1fr));\"]);\nconst AllControls = styled.div.withConfig({\n  displayName: \"CreateNewCandidate__AllControls\",\n  componentId: \"w1rd2d-3\"\n})([\"display:flex;flex-direction:column;min-width:15rem;img{margin-top:0.15rem;height:13rem;width:13rem;justify-content:center;border-radius:0.9rem;background-size:contain;background-position:center;}\"]);\nconst validationSchema = Yup.object().shape({\n  cand1stName: Yup.string().required(\"Nom obligatoire\"),\n  cand2ndName: Yup.string().required(\"Prénom obligatoire\"),\n  cand3rdName: Yup.string(),\n  momName: Yup.string().required(\"Noms de la mere obligatoire\"),\n  dadName: Yup.string().required(\"Noms du pere obligatoire\"),\n  placeOfBirth: Yup.string().required(\"Lieu de naissance obligatoire\"),\n  birthCertNumber: Yup.string().required(\"Numéro de l'acte de naissance obligatoire\"),\n  phoneNumb: Yup.number().required(\"Numéro de portable obligatoire\"),\n  // image: Yup\n  //     .string()\n  //     .required(\"Photo obligtoire\"),\n  gender: Yup.string().required(\"Choix du sexe obligatoire\"),\n  dateOfBirth: Yup.date().min(new Date('01-01-1900')).max(new Date()).required(\"Date de naissance obligatoire\"),\n  email: Yup.string().email('Email invalide').required('Email obligatoire')\n});\n\nconst CreateNewCandidate = () => {\n  const initialValues = {\n    cand1stName: '',\n    cand2ndName: '',\n    cand3rdName: '',\n    momName: '',\n    dadName: '',\n    email: '',\n    image: \"\",\n    phoneNumb: '',\n    placeOfBirth: '',\n    dateOfBirth: '',\n    birthCertNumber: '',\n    gender: \"\"\n  };\n  const [state, setState] = useForm({\n    image: \"\"\n  });\n\n  const uploadFile = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'ineximages');\n    const res = await fetch('https://api.cloudinary.com/v1_1/inex/image/upload', {\n      method: 'POST',\n      body: data\n    });\n    const file = await res.json();\n    console.log(file); // this.setState({ image: file.secure_url });\n\n    setState({\n      image: file.secure_url\n    });\n  };\n\n  const getGenderObject = genderID => {\n    const genderObj = {\n      'id': genderID\n    };\n    return genderObj;\n  };\n\n  const {\n    data,\n    loading,\n    error: errGender\n  } = useQuery(getAllGendersQuery);\n  {\n    loading && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 18\n      }\n    }, \"Loading...\");\n  }\n  {\n    errGender && __jsx(Error, {\n      error: errGender,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }\n    });\n  }\n  const getGenders = data && data.genders;\n  console.log(getGenders);\n  const getGenderOptions = getGenders && getGenders.map(item => ({\n    value: item.id,\n    label: item.genderName\n  }));\n  console.log(state.image);\n  const [createCandidate, {\n    error\n  }] = useMutation(createCandidateMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, actions, setSubmitting, resetForm) => {\n      const res = await createCandidate({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          image: state.image,\n          gender: getObjectFromID(values.gender.value),\n          candCode: uniqueCodeGen(12)\n        })\n      });\n      Router.push({\n        pathname: '/show/singleCand',\n        query: {\n          id: res.data.createCandidate.id\n        }\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        resetForm();\n        actions.setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    setFieldValue,\n    isSubmitting\n  }) => __jsx(MiniStyledPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Renseignement Candidat\"), __jsx(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }), __jsx(StyledForm, {\n    disabledd: isSubmitting,\n    \"aria-busy\": isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, __jsx(AllControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, __jsx(TwoGroups, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, __jsx(SygexInput, {\n    name: \"file\",\n    type: \"file\",\n    onChange: uploadFile,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 41\n    }\n  }), __jsx(Select, {\n    name: \"gender\",\n    onChange: value => setFieldValue('gender', value),\n    disabled: isSubmitting,\n    options: getGenderOptions,\n    styles: customStyle,\n    placeholder: \"Votre Sexe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"cand1stName\",\n    type: \"text\",\n    label: \"Nom\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"cand2ndName\",\n    type: \"text\",\n    label: \"Pr\\xE9nom\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"cand3rdName\",\n    type: \"text\",\n    label: \"Autres Noms\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"placeOfBirth\",\n    type: \"text\",\n    label: \"Lieu de Naissance\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"dadName\",\n    type: \"text\",\n    label: \"Noms du pere\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"momName\",\n    type: \"text\",\n    label: \"Noms de la mere\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 41\n    }\n  })), __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }\n  }, __jsx(SygexInput, {\n    name: \"dateOfBirth\",\n    format: \"d MMM yyyy\",\n    type: \"date\",\n    label: \"Date de Naissance\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"birthCertNumber\",\n    type: \"text\",\n    label: \"Num\\xE9ro acte de Naissance\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"phoneNumb\",\n    type: \"number\",\n    label: \"Num\\xE9ro de portable\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 41\n    }\n  }), __jsx(SygexInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 41\n    }\n  }), __jsx(PicFrame, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }, state.image && __jsx(\"img\", {\n    src: state.image,\n    alt: \"Upload image\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 67\n    }\n  })))), __jsx(ButtonStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, __jsx(StyledButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }\n  }, \"Valid\", isSubmitting ? 'ation en cours' : 'er')))))));\n};\n\nexport default CreateNewCandidate;","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/candidate/CreateNewCandidate.jsx"],"names":["React","useMutation","useQuery","MiniStyledPage","Error","Formik","Form","Router","useForm","Select","customStyle","SygexInput","StyledForm","ButtonStyled","StyledButton","styled","Yup","getAllGendersQuery","createCandidateMutation","uniqueCodeGen","getObjectFromID","removeTypename","PicFrame","div","InputGroup","TwoGroups","AllControls","validationSchema","object","shape","cand1stName","string","required","cand2ndName","cand3rdName","momName","dadName","placeOfBirth","birthCertNumber","phoneNumb","number","gender","dateOfBirth","date","min","Date","max","email","CreateNewCandidate","initialValues","image","state","setState","uploadFile","e","files","target","data","FormData","append","res","fetch","method","body","file","json","console","log","secure_url","getGenderObject","genderID","genderObj","loading","error","errGender","getGenders","genders","getGenderOptions","map","item","value","id","label","genderName","createCandidate","values","actions","setSubmitting","resetForm","variables","candCode","push","pathname","query","setTimeout","JSON","stringify","setFieldValue","isSubmitting"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { MiniStyledPage } from '../styles/StyledPage'\r\nimport Error from '../ErrorMessage.js';\r\nimport { Formik, Form } from 'formik';\r\nimport Router from 'next/router';\r\nimport useForm from '../utils/useForm'\r\nimport Select from 'react-select'\r\nimport { customStyle, SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs'\r\nimport styled from 'styled-components';\r\nimport * as Yup from 'yup';\r\nimport { getAllGendersQuery } from '../queries&Mutations&Functions/Queries';\r\nimport { createCandidateMutation } from '../queries&Mutations&Functions/Mutations';\r\nimport { uniqueCodeGen, getObjectFromID, removeTypename } from '../queries&Mutations&Functions/Functions';\r\n\r\n\r\n\r\n\r\nconst PicFrame = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin-top: 1rem;\r\n\timg {\r\n\t\tmargin-top: 1rem;\r\n\t\tmargin-left: 5rem;\r\n\t\theight: 15rem;\r\n\t\twidth: 15rem;\r\n\t\tborder-radius: 15px;\r\n\t\tbackground-size: contain;\r\n\t\tbackground-position: center;\r\n\t}\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n\r\n    display: flex;\r\n    flex-direction:column;\r\n    min-width:13rem;\r\n    /* padding-right:1rem; */\r\n    padding-left:1rem;\r\n  \r\n`;\r\n\r\nconst TwoGroups = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));\r\n   \r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\nflex-direction:column;\r\nmin-width:15rem;\r\nimg {\r\n\t\tmargin-top: 0.15rem;\r\n\t\t/* margin-left: 0.5rem; */\r\n\t\theight: 13rem;\r\n\t\twidth: 13rem;\r\n        justify-content:center;\r\n\t\tborder-radius: 0.9rem;\r\n\t\tbackground-size: contain;\r\n\t\tbackground-position: center;\r\n\t}\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    cand1stName: Yup\r\n        .string()\r\n        .required(\"Nom obligatoire\"),\r\n    cand2ndName: Yup\r\n        .string()\r\n        .required(\"Prénom obligatoire\"),\r\n    cand3rdName: Yup\r\n        .string(),\r\n    momName: Yup\r\n        .string()\r\n        .required(\"Noms de la mere obligatoire\"),\r\n    dadName: Yup\r\n        .string()\r\n        .required(\"Noms du pere obligatoire\"),\r\n    placeOfBirth: Yup\r\n        .string()\r\n        .required(\"Lieu de naissance obligatoire\"),\r\n    birthCertNumber: Yup\r\n        .string()\r\n        .required(\"Numéro de l'acte de naissance obligatoire\"),\r\n    phoneNumb: Yup\r\n        .number()\r\n        .required(\"Numéro de portable obligatoire\"),\r\n    // image: Yup\r\n    //     .string()\r\n    //     .required(\"Photo obligtoire\"),\r\n    gender: Yup\r\n        .string()\r\n        .required(\"Choix du sexe obligatoire\"),\r\n    dateOfBirth: Yup\r\n        .date()\r\n        .min(new Date('01-01-1900'))\r\n        .max(new Date())\r\n        .required(\"Date de naissance obligatoire\"),\r\n    email: Yup\r\n        .string()\r\n        .email('Email invalide')\r\n        .required('Email obligatoire'),\r\n});\r\n\r\nconst CreateNewCandidate = () => {\r\n    const initialValues = {\r\n        cand1stName: '',\r\n        cand2ndName: '',\r\n        cand3rdName: '',\r\n        momName: '',\r\n        dadName: '',\r\n        email: '',\r\n        image: \"\",\r\n        phoneNumb: '',\r\n        placeOfBirth: '',\r\n        dateOfBirth: '',\r\n        birthCertNumber: '',\r\n        gender: \"\",\r\n    }\r\n\r\n    const [state, setState] = useForm({ image: \"\" })\r\n\r\n\r\n\r\n    const uploadFile = async (e) => {\r\n        const files = e.target.files;\r\n        const data = new FormData();\r\n        data.append('file', files[0]);\r\n        data.append('upload_preset', 'ineximages');\r\n        const res = await fetch('https://api.cloudinary.com/v1_1/inex/image/upload', {\r\n            method: 'POST',\r\n            body: data\r\n        });\r\n        const file = await res.json();\r\n        console.log(file);\r\n        // this.setState({ image: file.secure_url });\r\n        setState({ image: file.secure_url })\r\n\r\n    }\r\n\r\n\r\n\r\n    const getGenderObject = (genderID) => {\r\n        const genderObj = {\r\n            'id': genderID\r\n        }\r\n        return genderObj\r\n    }\r\n\r\n    const { data, loading, error: errGender } = useQuery(getAllGendersQuery)\r\n    { loading && <p>Loading...</p>; }\r\n    { errGender && <Error error={errGender} />; }\r\n    const getGenders = data && data.genders\r\n    console.log(getGenders);\r\n    const getGenderOptions = getGenders && getGenders.map((item) => (\r\n        { value: item.id, label: item.genderName }))\r\n    console.log(state.image);\r\n    const [createCandidate, { error }] = useMutation(createCandidateMutation)\r\n\r\n    return (\r\n\r\n        <Formik\r\n            method=\"POST\"\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions, setSubmitting, resetForm) => {\r\n                const res = await createCandidate({\r\n                    variables:\r\n                    {\r\n                        ...values,\r\n                        image: state.image,\r\n                        gender: getObjectFromID(values.gender.value),\r\n                        candCode: uniqueCodeGen(12),\r\n                    }\r\n                });\r\n                Router.push({\r\n                    pathname: '/show/singleCand',\r\n                    query: {\r\n                        id: res.data.createCandidate.id\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    console.log(JSON.stringify(values, null, 2));\r\n                    console.log(res);\r\n                    resetForm();\r\n                    actions.setSubmitting(false);\r\n                }, 200);\r\n            }}\r\n\r\n        >\r\n            {({ values, setFieldValue, isSubmitting }) => (\r\n                <MiniStyledPage>\r\n                    <h4>Renseignement Candidat</h4>\r\n                    <Error error={error} />\r\n                    <StyledForm disabledd={isSubmitting} aria-busy={isSubmitting} >\r\n                        <Form>\r\n                            <AllControls>\r\n                                <TwoGroups>\r\n\r\n                                    <InputGroup>\r\n                                        <SygexInput name=\"file\" type=\"file\" onChange={uploadFile} disabled={isSubmitting} />\r\n                                        <Select name=\"gender\" onChange={value => setFieldValue('gender', value)} disabled={isSubmitting} options={getGenderOptions} styles={customStyle} placeholder={\"Votre Sexe\"} />\r\n                                        <SygexInput name=\"cand1stName\" type=\"text\" label=\"Nom\" disabled={isSubmitting} />\r\n                                        <SygexInput name=\"cand2ndName\" type=\"text\" label=\"Prénom\" disabled={isSubmitting} />\r\n                                        <SygexInput name=\"cand3rdName\" type=\"text\" label=\"Autres Noms\" disabled={isSubmitting} />\r\n                                        <SygexInput name=\"placeOfBirth\" type=\"text\" label=\"Lieu de Naissance\" disabled={isSubmitting} />\r\n                                        <SygexInput name=\"dadName\" type=\"text\" label=\"Noms du pere\" disabled={isSubmitting} />\r\n                                        <SygexInput name=\"momName\" type=\"text\" label=\"Noms de la mere\" disabled={isSubmitting} />\r\n                                    </InputGroup>\r\n                                    <InputGroup>\r\n                                        <SygexInput name=\"dateOfBirth\" format=\"d MMM yyyy\" type=\"date\" label=\"Date de Naissance\" disabled={isSubmitting} />\r\n                                        <SygexInput name=\"birthCertNumber\" type=\"text\" label=\"Numéro acte de Naissance\" disabled={isSubmitting} />\r\n                                        <SygexInput name=\"phoneNumb\" type=\"number\" label=\"Numéro de portable\" disabled={isSubmitting} />\r\n                                        <SygexInput name=\"email\" type=\"email\" label=\"Email\" disabled={isSubmitting} />\r\n                                        <PicFrame>{state.image && <img src={state.image} alt=\"Upload image\" disabled={isSubmitting} />}</PicFrame>\r\n                                    </InputGroup>\r\n                                </TwoGroups>\r\n                                <ButtonStyled>\r\n                                    <StyledButton type=\"submit\">Valid{isSubmitting ? 'ation en cours' : 'er'}</StyledButton>\r\n                                </ButtonStyled>\r\n                            </AllControls>\r\n                        </Form>\r\n                    </StyledForm>\r\n                </MiniStyledPage>\r\n            )}\r\n        </Formik>\r\n\r\n\r\n    );\r\n}\r\nexport default CreateNewCandidate;"]},"metadata":{},"sourceType":"module"}