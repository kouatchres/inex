{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport gql from 'graphql-tag'; //************create mutations  */\n\nconst signInCandidate = gql`\n  mutation signInCandidate($candCode: String!) {\n    candidateSignIn(candCode: $candCode) {\n      id\n      cand1stName\n    }\n  }\n`; //\n\nconst updateSessionMutation = gql`\n  mutation updateSessionMutation(\n    $id: ID!\n    $sessionName: String\n    $sessionCode: String\n  ) {\n    updateSession(\n      id: $id\n      sessionName: $sessionName\n      sessionCode: $sessionCode\n    ) {\n      sessionName\n      sessionCode\n      id\n    }\n  }\n`;\nconst updateEducationTypeMutation = gql`\n  mutation updateEducationTypeMutation(\n    $id: ID!\n    $educationTypeName: String\n    $educationTypeCode: String\n  ) {\n    updateEducationType(\n      id: $id\n      educationTypeName: $educationTypeName\n      educationTypeCode: $educationTypeCode\n    ) {\n      id\n      educationTypeName\n      educationTypeCode\n    }\n  }\n`;\nconst updateSubjectTypeMutation = gql`\n  mutation updateSubjectTypeMutation(\n    $id: ID!\n    $subjectTypeName: String\n    $subjectTypeCode: String\n  ) {\n    updateSubjectType(\n      id: $id\n      subjectTypeName: $subjectTypeName\n      subjectTypeCode: $subjectTypeCode\n    ) {\n      id\n      subjectTypeName\n      subjectTypeCode\n    }\n  }\n`;\nconst updateSubjectMutation = gql`\n  mutation updateSubjectMutation(\n    $id: ID!\n    $subjectName: String\n    $subjectCode: String\n  ) {\n    updateSubject(\n      id: $id\n      subjectName: $subjectName\n      subjectCode: $subjectCode\n    ) {\n      subjectName\n      subjectCode\n      id\n    }\n  }\n`;\nconst updateRankMutation = gql`\n  mutation updateRankMutation($id: ID!, $rankName: String, $rankCode: String) {\n    updateRank(id: $id, rankName: $rankName, rankCode: $rankCode) {\n      id\n      rankName\n      rankCode\n    }\n  }\n`;\nconst updateSeriesMutation = gql`\n  mutation updateSeriesMutation(\n    $id: ID!\n    $seriesName: String\n    $seriesCode: String\n  ) {\n    updateSeries(id: $id, seriesName: $seriesName, seriesCode: $seriesCode) {\n      seriesName\n      seriesCode\n      id\n    }\n  }\n`;\nconst updateDivisionMutation = gql`\n  mutation updateDivisionMutation(\n    $id: ID!\n    $divName: String\n    $divCode: String\n  ) {\n    updateDivision(id: $id, divName: $divName, divCode: $divCode) {\n      id\n      divName\n      divCode\n    }\n  }\n`;\nconst updateRegionMutation = gql`\n  mutation updateRegionMutation($id: ID!, $regName: String, $regCode: String) {\n    updateRegion(id: $id, regName: $regName, regCode: $regCode) {\n      id\n      regName\n      regCode\n    }\n  }\n`;\nconst createNewReportMutation = gql`\n  mutation createNewReportMutation(\n    $reportImage: String!\n    $reportName: String!\n    $centerExamSessionExaminer: CenterExamSessionExaminerWhereUniqueInput!\n\n  ) {\n    createReport(\n      reportImage: $reportImage\n      reportName: $reportName\n      centerExamSessionExaminer: $centerExamSessionExaminer\n    ) {\n      id\n      reportName\n      reportImage\n    }\n  }\n`;\nconst createNewGenderMutation = gql`\n  mutation createNewGenderMutation($genderName: String!, $genderCode: String!) {\n    createGender(genderName: $genderName, genderCode: $genderCode) {\n      id\n      genderCode\n      genderName\n    }\n  }\n`;\nconst createRegistrationMutation = gql`\n  mutation createRegistrationMutation(\n    $candidate: CandidateWhereUniqueInput!\n    $candExamSecretCode: String!\n    $candExamSession: String!\n    $candRegistrationNumber: String!\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\n    $centerExamSessionSeries: CenterExamSessionSeriesWhereUniqueInput!\n    $series: SeriesWhereUniqueInput!\n  ) {\n    createRegistration(\n      candidate: $candidate\n      candExamSecretCode: $candExamSecretCode\n      candExamSession: $candExamSession\n      candRegistrationNumber: $candRegistrationNumber\n      centerExamSession: $centerExamSession\n      centerExamSessionSeries: $centerExamSessionSeries\n      series: $series\n    ) {\n      id\n      centerExamSession {\n        id\n        center {\n          id\n          centerName\n        }\n      }\n      candidate {\n        id\n        cand1stName\n      }\n    }\n  }\n`;\nconst createCenterExamSessionMutation = gql`\n  mutation createCenterExamSessionMutation(\n    $examSession: ExamSessionWhereUniqueInput!\n    $center: CenterWhereUniqueInput!\n  ) {\n    createCenterExamSession(examSession: $examSession, center: $center) {\n      id\n    }\n  }\n`;\nconst createPhaseRankMutation = gql`\n  mutation createPhaseRankMutation(\n    $phase: PhaseWhereUniqueInput!\n    $rankName:  String!                                                                                                                                                                    \n    $rankCode:  String!                                                                                                                                                                   \n  ) {\n    createPhaseRank(phase: $phase, rankName : $rankName, rankCode: $rankCode ){                                                                                                                                                                      \n      id\n    }\n  }\n`;\nconst createCenterExamSessionExaminerMutation = gql`\n  mutation createCenterExamSessionExaminerMutation(\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\n    $examiner:  ExaminerWhereUniqueInput! \n    $phaseRank:  PhaseRankWhereUniqueInput! \n  ) {\n    createCenterExamSessionExaminer(\n    phaseRank: $phaseRank,\n    centerExamSession: $centerExamSession,\n    examiner: $examiner\n    ){                                                                                                                                                                      \n      id\n    }\n  }\n`;\nconst createCenterExamSessionSeriesMutation = gql`\n  mutation createCenterExamSessionSeriesMutation(\n    $series: SeriesWhereUniqueInput!\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\n  ) {\n    createCenterExamSessionSeries(\n      series: $series\n      centerExamSession: $centerExamSession\n    ) {\n      id\n    }\n  }\n`; // const createCenterExamSessionexaminerorityMutation = gql`\n//   mutation createCenterExamSessionexaminerorityMutation(\n//     $rank: RankWhereUniqueInput!\n//     $centerExamSession: CenterExamSessionWhereUniqueInput!\n//     $examinerName: String!\n//     $examinerCode: String!\n//     $examinerCNI: String!\n//     $examinerPhone: Int!\n//     $examinerMatricule: String!\n//   ) {\n//     createCenterExamSessionexaminerority(\n//       rank: $rank\n//       centerExamSession: $centerExamSession\n//       examinerCNI: $examinerCNI\n//       examinerName: $examinerName\n//       examinerCode: $examinerCode\n//       examinerPhone: $examinerPhone\n//       examinerMatricule: $examinerMatricule\n//     ) {\n//       examinerName\n//       examinerCode\n//       examinerPhone\n//     }\n//   }\n// `\n\nconst createDivisionMutation = gql`\n  mutation createDivisionMutation(\n    $divName: String!\n    $divCode: String!\n    $region: RegionWhereUniqueInput!\n  ) {\n    createDivision(divName: $divName, divCode: $divCode, region: $region) {\n      id\n      divName\n    }\n  }\n`;\nconst createCenterMutation = gql`\n  mutation createCenterMutation(\n    $centerName: String!\n    $centerNumber: Int\n    $centerCode: String!\n    $centerSecretCode: String!\n    $town: TownWhereUniqueInput!\n  ) {\n    createCenter(\n      centerSecretCode: $centerSecretCode\n      centerName: $centerName\n      centerNumber: $centerNumber\n      centerCode: $centerCode\n      town: $town\n    ) {\n      id\n      centerName\n      centerSecretCode\n      centerCode\n      town {\n        townName\n      }\n    }\n  }\n`;\nconst createSeriesMutation = gql`\n  mutation createSeriesMutation(\n    $seriesName: String!\n    $seriesCode: String!\n    $educationType: EducationTypeWhereUniqueInput!\n  ) {\n    createSeries(\n      seriesName: $seriesName\n      seriesCode: $seriesCode\n      educationType: $educationType\n    ) {\n      id\n      seriesName\n    }\n  }\n`;\nconst createEducationTypeMutation = gql`\n  mutation createEducationTypeMutation(\n    $educationTypeName: String!\n    $educationTypeCode: String!\n  ) {\n    createEducationType(\n      educationTypeName: $educationTypeName\n      educationTypeCode: $educationTypeCode\n    ) {\n      id\n      educationTypeName\n    }\n  }\n`;\nconst createTownMutation = gql`\n  mutation createTownMutation(\n    $townName: String!\n    $townCode: String!\n    $subDiv: SubDivisionWhereUniqueInput!\n  ) {\n    createTown(townName: $townName, townCode: $townCode, subDiv: $subDiv) {\n      id\n      townName\n      townCode\n      subDiv {\n        subDivName\n      }\n    }\n  }\n`;\nconst createNewSubjectTypeMutation = gql`\n  mutation createNewSubjectTypeMutation(\n    $subjectTypeName: String!\n    $subjectTypeCode: String!\n  ) {\n    createSubjectType(\n      subjectTypeName: $subjectTypeName\n      subjectTypeCode: $subjectTypeCode\n    ) {\n      id\n      subjectTypeName\n    }\n  }\n`;\nconst createNewSubjectMutation = gql`\n  mutation createNewSubjectMutation(\n    $subjectName: String!\n    $subjectCode: String!\n    $subjectType: SubjectTypeWhereUniqueInput!\n    $educType: EducationTypeWhereUniqueInput!\n  ) {\n    createSubject(\n      subjectName: $subjectName\n      educType: $educType\n      subjectCode: $subjectCode\n      subjectType: $subjectType\n    ) {\n      subjectCode\n      subjectName\n    }\n  }\n`;\nconst createSubDivisionMutation = gql`\n  mutation createSubDivisionMutation(\n    $subDivName: String!\n    $subDivCode: String!\n    $division: DivisionWhereUniqueInput!\n  ) {\n    createSubDivision(\n      subDivName: $subDivName\n      subDivCode: $subDivCode\n      division: $division\n    ) {\n      id\n      subDivName\n      subDivCode\n      division {\n        divName\n      }\n    }\n  }\n`;\nconst createNewSessionMutation = gql`\n  mutation createNewSessionMutation(\n    $sessionName: String!\n    $sessionCode: String!\n  ) {\n    createSession(sessionName: $sessionName, sessionCode: $sessionCode) {\n      id\n      sessionName\n    }\n  }\n`;\nconst createNewRankMutation = gql`\n  mutation createNewRankMutation($rankName: String!, $rankCode: String!) {\n    createRank(rankName: $rankName, rankCode: $rankCode) {\n      id\n      rankName\n    }\n  }\n`;\nconst createNewRegionMutation = gql`\n  mutation createNewRegionMutation(\n    $regName: String!\n     $regCode: String!\n      $country: CountryWhereUniqueInput!\n      ) {\n    createRegion(\n       country: $country \n        regName: $regName\n         regCode: $regCode\n         ) {\n      id\n      regName\n    }\n  }\n`;\nconst signupUserMutation = gql`\n  mutation signupUserMutation(\n    $name: String!\n     $email: String!\n      $password: String!\n      ) {\n    signup(\n       password: $password \n        name: $name\n         email: $email\n         ) {\n      id\n      name\n      email\n    }\n  }\n`;\nconst loginUserMutation = gql`\n  mutation loginUserMutation(\n     $email: String!\n      $password: String!\n      ) {\n    login(\n       password: $password \n         email: $email\n         ) {\n      id\n      email\n    }\n  }\n`;\nconst createNewCountryMutation = gql`\n  mutation createNewCountryMutation($countryName: String!, $countryCode: String!) {\n    createCountry(countryName: $countryName, countryCode: $countryCode) {\n      id\n      countryName\n      countryCode\n    }\n  }\n`;\nconst createPhaseMutation = gql`\n  mutation createPhaseMutation($phaseName: String!, $phaseCode: String!){\n    createPhase(phaseName: $phaseName, phaseCode: $phaseCode) {\n      id\n      phaseName\n    }\n  }\n`;\nconst createExamMutation = gql`\n  mutation createExamMutation($examName: String!, $examCode: String!) {\n    createExam(examName: $examName, examCode: $examCode) {\n      id\n      examName\n    }\n  }\n`;\nconst registerSubjectSeriesMutation = gql`\n  mutation registerSubjectSeriesMutation(\n    $subject: SubjectWhereUniqueInput!\n    $series: SeriesWhereUniqueInput!\n    $coeff: Int!\n  ) {\n    createSubjectSeries(subject: $subject, series: $series, coeff: $coeff) {\n      id\n      series {\n        id\n        seriesName\n        subjectSeries {\n          id\n          subject {\n            id\n            subjectName\n          }\n        }\n      }\n    }\n  }\n`;\nconst registerNewSubjectSeriesMutation = gql`\n  mutation registerNewSubjectSeriesMutation(\n    $series: SeriesWhereUniqueInput!\n    $coeff: Int!\n    $subjectName: String!\n    $subjectCode: String!\n  ) {\n    createSubjectSeries(\n      subjectCode: $subjectCode\n      subjectName: $subjectName\n      series: $series\n      coeff: $coeff\n    ) {\n      id\n      series {\n        id\n        seriesName\n        subjectSeries {\n          id\n          subjectName\n          subjectCode\n        }\n      }\n    }\n  }\n`;\nconst createCandidateMutation = gql`\n  mutation createCandidateMutation(\n    $cand1stName: String!\n    $cand2ndName: String\n    $cand3rdName: String\n    $dadName: String\n    $momName: String\n    $candCode: String\n    $email: String!\n    $image: String!\n    $phoneNumb: Int\n    $dateOfBirth: DateTime\n    $birthCertNumber: String\n    $placeOfBirth: String\n    $gender: GenderWhereUniqueInput!\n  ) {\n    createCandidate(\n      cand1stName: $cand1stName\n      cand2ndName: $cand2ndName\n      dadName: $dadName\n      momName: $momName\n      cand3rdName: $cand3rdName\n      candCode: $candCode\n      email: $email\n      image: $image\n      phoneNumb: $phoneNumb\n      dateOfBirth: $dateOfBirth\n      birthCertNumber: $birthCertNumber\n      placeOfBirth: $placeOfBirth\n      gender: $gender\n    ) {\n      id\n      cand1stName\n      cand2ndName\n      cand3rdName\n      momName\n      dadName\n      candCode\n      birthCertNumber\n      dateOfBirth\n      image\n    }\n  }\n`;\nconst createExaminerMutation = gql`\n  mutation createExaminerMutation(\n    $examiner1stName: String!\n    $examiner2ndName: String!\n    $examinerOtherNames: String\n    $examinerCode: String!\n    $examinerEmail: String!\n    $examinerCNI: String!\n    $examinerMatricule: String!\n    $examinerImage: String!\n    $examinerPhone: Int!\n    $gender: GenderWhereUniqueInput!\n  ) {\n    createExaminer(\n      examiner1stName: $examiner1stName\n      examiner2ndName: $examiner2ndName\n      examinerOtherNames: $examinerOtherNames\n      examinerMatricule: $examinerMatricule\n      examinerCode: $examinerCode\n      examinerCNI: $examinerCNI\n      examinerEmail: $examinerEmail\n      examinerImage: $examinerImage\n      examinerPhone: $examinerPhone\n      gender: $gender\n    ) {\n      id\n      examiner1stName\n      examiner2ndName\n      examinerOtherNames\n      examinerCode\n      examinerEmail\n      examinerImage\n      examinerPhone\n    }\n  }\n`; //************create mutations  */\n////**************Update mutations */\n\nconst updateSubDivisionMutation = gql`\n  mutation updateSubDivisionMutation(\n    $id: ID!\n    $subDivName: String\n    $subDivCode: String\n  ) {\n    updateSubDivision(\n      id: $id\n      subDivName: $subDivName\n      subDivCode: $subDivCode\n    ) {\n      subDivName\n      subDivCode\n      id\n    }\n  }\n`;\nconst updateCenterMutation = gql`\n  mutation updateCenterMutation(\n    $id: ID!\n    $centerName: String\n    $centerCode: String\n    $centerNumber: Int\n  ) {\n    updateCenter(\n      id: $id\n      centerName: $centerName\n      centerCode: $centerCode\n      centerNumber: $centerNumber\n    ) {\n      id\n      centerName\n      centerNumber\n      centerCode\n    }\n  }\n`;\nconst updateTownMutation = gql`\n  mutation updateTownMutation($id: ID!, $townName: String, $townCode: String) {\n    updateTown(id: $id, townName: $townName, townCode: $townCode) {\n      townName\n      townCode\n      id\n    }\n  }\n`;\nconst updateExamMutation = gql`\n  mutation updateExamMutation($id: ID!, $examName: String, $examCode: String) {\n    updateExam(id: $id, examName: $examName, examCode: $examCode) {\n      examName\n      examCode\n      id\n    }\n  }\n`;\nconst updateScoreMutation = gql`\n  mutation updateScoreMutation(\n    $subjectSeries: SubjectSeriesWhereUniqueInput!\n    $subjectAve: Float!\n    $candExamSecretCode: String!\n  ) {\n    updateScore(\n      subjectSeries: $subjectSeries\n      subjectAve: $subjectAve\n      candExamSecretCode: $candExamSecretCode\n    ) {\n      subjectAve\n      coeff\n      id\n      subjectSeries {\n        id\n        subjectCode\n        subjectName\n      }\n    }\n  }\n`; // const createUserMutation = gql`\n//   mutation createUserMutation(\n//     $email: String!\n//     $name: String!\n//     $password: String!\n//     ) {\n//     createUser( \n//                email: $email!\n//                name: $name!\n//                password: $password!\n//                ) {\n//       id\n//       name\n//       email\n//       password\n//     }\n//   }\n// `\n\nconst updateCandidateMutation = gql`\n  mutation updateCandidateMutation(\n    $id: ID!\n    $cand1stName: String\n    $cand2ndName: String\n    $cand3rdName: String\n    $momName: String\n    $dadName: String\n    $email: String\n    $image: String\n    $phoneNumb: Int\n    $placeOfBirth: String\n    $dateOfBirth: DateTime\n    $birthCertNumber: String\n    $gender: GenderWhereUniqueInput\n  ) {\n    updateCandidate(\n      id: $id\n      cand1stName: $cand1stName\n      cand2ndName: $cand2ndName\n      cand3rdName: $cand3rdName\n      momName: $momName\n      dadName: $dadName\n      email: $email\n      image: $image\n      phoneNumb: $phoneNumb\n      placeOfBirth: $placeOfBirth\n      dateOfBirth: $dateOfBirth\n      birthCertNumber: $birthCertNumber\n      gender: $gender\n    ) {\n      id\n      cand1stName\n      cand2ndName\n      cand3rdName\n      momName\n      dadName\n      email\n      image\n      phoneNumb\n      placeOfBirth\n      dateOfBirth\n      birthCertNumber\n      gender {\n        id\n      }\n    }\n  }\n`;\nconst updateGenderMutation = gql`\n  mutation updateGenderMutation(\n    $id: ID!\n    $genderName: String\n    $genderCode: String\n  ) {\n    updateGender(id: $id, genderName: $genderName, genderCode: $genderCode) {\n      id\n      genderName\n      genderCode\n    }\n  }\n`;\nconst signUpMutation = gql`\n  mutation signUpMutation($email: String!, $name: String!, $password: String!) {\n    signUp(email: $email, name: $name, password: $password) {\n      id\n      email\n      resetToken\n      password\n    }\n  }\n`;\n\nconst updateItemMutation = async (e, updateMutation) => {\n  e.preventDefault();\n  console.log('Updating Region!!');\n  const res = await updateMutation({\n    variables: _objectSpread({\n      id: this.props.id\n    }, this.state)\n  });\n  console.log('Region Updated!!');\n}; ////**************Update mutations */\n\n\nexport { createCandidateMutation, createNewSubjectMutation, createNewSubjectTypeMutation, createTownMutation, createCenterExamSessionExaminerMutation, createDivisionMutation, createRegistrationMutation, createCenterMutation, createEducationTypeMutation, createSeriesMutation, createSubDivisionMutation, createNewSessionMutation, createNewRankMutation, createNewReportMutation, createNewRegionMutation, createNewGenderMutation, createExamMutation, registerSubjectSeriesMutation, registerNewSubjectSeriesMutation, updateCenterMutation, updateTownMutation, updateSessionMutation, updateRegionMutation, updateExamMutation, updateSubDivisionMutation, updateGenderMutation, updateCandidateMutation, updateScoreMutation, updateDivisionMutation, updateItemMutation, createExaminerMutation, createPhaseMutation, createCenterExamSessionSeriesMutation, updateSeriesMutation, updateRankMutation, createPhaseRankMutation, createNewCountryMutation, signUpMutation, updateSubjectMutation, updateSubjectTypeMutation, createCenterExamSessionMutation, updateEducationTypeMutation, signInCandidate, loginUserMutation, signupUserMutation };","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/queries&Mutations&Functions/Mutations.jsx"],"names":["gql","signInCandidate","updateSessionMutation","updateEducationTypeMutation","updateSubjectTypeMutation","updateSubjectMutation","updateRankMutation","updateSeriesMutation","updateDivisionMutation","updateRegionMutation","createNewReportMutation","createNewGenderMutation","createRegistrationMutation","createCenterExamSessionMutation","createPhaseRankMutation","createCenterExamSessionExaminerMutation","createCenterExamSessionSeriesMutation","createDivisionMutation","createCenterMutation","createSeriesMutation","createEducationTypeMutation","createTownMutation","createNewSubjectTypeMutation","createNewSubjectMutation","createSubDivisionMutation","createNewSessionMutation","createNewRankMutation","createNewRegionMutation","signupUserMutation","loginUserMutation","createNewCountryMutation","createPhaseMutation","createExamMutation","registerSubjectSeriesMutation","registerNewSubjectSeriesMutation","createCandidateMutation","createExaminerMutation","updateSubDivisionMutation","updateCenterMutation","updateTownMutation","updateExamMutation","updateScoreMutation","updateCandidateMutation","updateGenderMutation","signUpMutation","updateItemMutation","e","updateMutation","preventDefault","console","log","res","variables","id","props","state"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag'\r\n\r\n//************create mutations  */\r\nconst signInCandidate = gql`\r\n  mutation signInCandidate($candCode: String!) {\r\n    candidateSignIn(candCode: $candCode) {\r\n      id\r\n      cand1stName\r\n    }\r\n  }\r\n`\r\n//\r\n\r\nconst updateSessionMutation = gql`\r\n  mutation updateSessionMutation(\r\n    $id: ID!\r\n    $sessionName: String\r\n    $sessionCode: String\r\n  ) {\r\n    updateSession(\r\n      id: $id\r\n      sessionName: $sessionName\r\n      sessionCode: $sessionCode\r\n    ) {\r\n      sessionName\r\n      sessionCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateEducationTypeMutation = gql`\r\n  mutation updateEducationTypeMutation(\r\n    $id: ID!\r\n    $educationTypeName: String\r\n    $educationTypeCode: String\r\n  ) {\r\n    updateEducationType(\r\n      id: $id\r\n      educationTypeName: $educationTypeName\r\n      educationTypeCode: $educationTypeCode\r\n    ) {\r\n      id\r\n      educationTypeName\r\n      educationTypeCode\r\n    }\r\n  }\r\n`\r\nconst updateSubjectTypeMutation = gql`\r\n  mutation updateSubjectTypeMutation(\r\n    $id: ID!\r\n    $subjectTypeName: String\r\n    $subjectTypeCode: String\r\n  ) {\r\n    updateSubjectType(\r\n      id: $id\r\n      subjectTypeName: $subjectTypeName\r\n      subjectTypeCode: $subjectTypeCode\r\n    ) {\r\n      id\r\n      subjectTypeName\r\n      subjectTypeCode\r\n    }\r\n  }\r\n`\r\n\r\nconst updateSubjectMutation = gql`\r\n  mutation updateSubjectMutation(\r\n    $id: ID!\r\n    $subjectName: String\r\n    $subjectCode: String\r\n  ) {\r\n    updateSubject(\r\n      id: $id\r\n      subjectName: $subjectName\r\n      subjectCode: $subjectCode\r\n    ) {\r\n      subjectName\r\n      subjectCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateRankMutation = gql`\r\n  mutation updateRankMutation($id: ID!, $rankName: String, $rankCode: String) {\r\n    updateRank(id: $id, rankName: $rankName, rankCode: $rankCode) {\r\n      id\r\n      rankName\r\n      rankCode\r\n    }\r\n  }\r\n`\r\n\r\nconst updateSeriesMutation = gql`\r\n  mutation updateSeriesMutation(\r\n    $id: ID!\r\n    $seriesName: String\r\n    $seriesCode: String\r\n  ) {\r\n    updateSeries(id: $id, seriesName: $seriesName, seriesCode: $seriesCode) {\r\n      seriesName\r\n      seriesCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateDivisionMutation = gql`\r\n  mutation updateDivisionMutation(\r\n    $id: ID!\r\n    $divName: String\r\n    $divCode: String\r\n  ) {\r\n    updateDivision(id: $id, divName: $divName, divCode: $divCode) {\r\n      id\r\n      divName\r\n      divCode\r\n    }\r\n  }\r\n`\r\n\r\nconst updateRegionMutation = gql`\r\n  mutation updateRegionMutation($id: ID!, $regName: String, $regCode: String) {\r\n    updateRegion(id: $id, regName: $regName, regCode: $regCode) {\r\n      id\r\n      regName\r\n      regCode\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewReportMutation = gql`\r\n  mutation createNewReportMutation(\r\n    $reportImage: String!\r\n    $reportName: String!\r\n    $centerExamSessionExaminer: CenterExamSessionExaminerWhereUniqueInput!\r\n\r\n  ) {\r\n    createReport(\r\n      reportImage: $reportImage\r\n      reportName: $reportName\r\n      centerExamSessionExaminer: $centerExamSessionExaminer\r\n    ) {\r\n      id\r\n      reportName\r\n      reportImage\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewGenderMutation = gql`\r\n  mutation createNewGenderMutation($genderName: String!, $genderCode: String!) {\r\n    createGender(genderName: $genderName, genderCode: $genderCode) {\r\n      id\r\n      genderCode\r\n      genderName\r\n    }\r\n  }\r\n`\r\n\r\nconst createRegistrationMutation = gql`\r\n  mutation createRegistrationMutation(\r\n    $candidate: CandidateWhereUniqueInput!\r\n    $candExamSecretCode: String!\r\n    $candExamSession: String!\r\n    $candRegistrationNumber: String!\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n    $centerExamSessionSeries: CenterExamSessionSeriesWhereUniqueInput!\r\n    $series: SeriesWhereUniqueInput!\r\n  ) {\r\n    createRegistration(\r\n      candidate: $candidate\r\n      candExamSecretCode: $candExamSecretCode\r\n      candExamSession: $candExamSession\r\n      candRegistrationNumber: $candRegistrationNumber\r\n      centerExamSession: $centerExamSession\r\n      centerExamSessionSeries: $centerExamSessionSeries\r\n      series: $series\r\n    ) {\r\n      id\r\n      centerExamSession {\r\n        id\r\n        center {\r\n          id\r\n          centerName\r\n        }\r\n      }\r\n      candidate {\r\n        id\r\n        cand1stName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createCenterExamSessionMutation = gql`\r\n  mutation createCenterExamSessionMutation(\r\n    $examSession: ExamSessionWhereUniqueInput!\r\n    $center: CenterWhereUniqueInput!\r\n  ) {\r\n    createCenterExamSession(examSession: $examSession, center: $center) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst createPhaseRankMutation = gql`\r\n  mutation createPhaseRankMutation(\r\n    $phase: PhaseWhereUniqueInput!\r\n    $rankName:  String!                                                                                                                                                                    \r\n    $rankCode:  String!                                                                                                                                                                   \r\n  ) {\r\n    createPhaseRank(phase: $phase, rankName : $rankName, rankCode: $rankCode ){                                                                                                                                                                      \r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst createCenterExamSessionExaminerMutation = gql`\r\n  mutation createCenterExamSessionExaminerMutation(\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n    $examiner:  ExaminerWhereUniqueInput! \r\n    $phaseRank:  PhaseRankWhereUniqueInput! \r\n  ) {\r\n    createCenterExamSessionExaminer(\r\n    phaseRank: $phaseRank,\r\n    centerExamSession: $centerExamSession,\r\n    examiner: $examiner\r\n    ){                                                                                                                                                                      \r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst createCenterExamSessionSeriesMutation = gql`\r\n  mutation createCenterExamSessionSeriesMutation(\r\n    $series: SeriesWhereUniqueInput!\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n  ) {\r\n    createCenterExamSessionSeries(\r\n      series: $series\r\n      centerExamSession: $centerExamSession\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\n\r\n// const createCenterExamSessionexaminerorityMutation = gql`\r\n//   mutation createCenterExamSessionexaminerorityMutation(\r\n//     $rank: RankWhereUniqueInput!\r\n//     $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n//     $examinerName: String!\r\n//     $examinerCode: String!\r\n//     $examinerCNI: String!\r\n//     $examinerPhone: Int!\r\n//     $examinerMatricule: String!\r\n//   ) {\r\n//     createCenterExamSessionexaminerority(\r\n//       rank: $rank\r\n//       centerExamSession: $centerExamSession\r\n//       examinerCNI: $examinerCNI\r\n//       examinerName: $examinerName\r\n//       examinerCode: $examinerCode\r\n//       examinerPhone: $examinerPhone\r\n//       examinerMatricule: $examinerMatricule\r\n//     ) {\r\n//       examinerName\r\n//       examinerCode\r\n//       examinerPhone\r\n//     }\r\n//   }\r\n// `\r\n\r\nconst createDivisionMutation = gql`\r\n  mutation createDivisionMutation(\r\n    $divName: String!\r\n    $divCode: String!\r\n    $region: RegionWhereUniqueInput!\r\n  ) {\r\n    createDivision(divName: $divName, divCode: $divCode, region: $region) {\r\n      id\r\n      divName\r\n    }\r\n  }\r\n`\r\n\r\nconst createCenterMutation = gql`\r\n  mutation createCenterMutation(\r\n    $centerName: String!\r\n    $centerNumber: Int\r\n    $centerCode: String!\r\n    $centerSecretCode: String!\r\n    $town: TownWhereUniqueInput!\r\n  ) {\r\n    createCenter(\r\n      centerSecretCode: $centerSecretCode\r\n      centerName: $centerName\r\n      centerNumber: $centerNumber\r\n      centerCode: $centerCode\r\n      town: $town\r\n    ) {\r\n      id\r\n      centerName\r\n      centerSecretCode\r\n      centerCode\r\n      town {\r\n        townName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createSeriesMutation = gql`\r\n  mutation createSeriesMutation(\r\n    $seriesName: String!\r\n    $seriesCode: String!\r\n    $educationType: EducationTypeWhereUniqueInput!\r\n  ) {\r\n    createSeries(\r\n      seriesName: $seriesName\r\n      seriesCode: $seriesCode\r\n      educationType: $educationType\r\n    ) {\r\n      id\r\n      seriesName\r\n    }\r\n  }\r\n`\r\nconst createEducationTypeMutation = gql`\r\n  mutation createEducationTypeMutation(\r\n    $educationTypeName: String!\r\n    $educationTypeCode: String!\r\n  ) {\r\n    createEducationType(\r\n      educationTypeName: $educationTypeName\r\n      educationTypeCode: $educationTypeCode\r\n    ) {\r\n      id\r\n      educationTypeName\r\n    }\r\n  }\r\n`\r\n\r\nconst createTownMutation = gql`\r\n  mutation createTownMutation(\r\n    $townName: String!\r\n    $townCode: String!\r\n    $subDiv: SubDivisionWhereUniqueInput!\r\n  ) {\r\n    createTown(townName: $townName, townCode: $townCode, subDiv: $subDiv) {\r\n      id\r\n      townName\r\n      townCode\r\n      subDiv {\r\n        subDivName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewSubjectTypeMutation = gql`\r\n  mutation createNewSubjectTypeMutation(\r\n    $subjectTypeName: String!\r\n    $subjectTypeCode: String!\r\n  ) {\r\n    createSubjectType(\r\n      subjectTypeName: $subjectTypeName\r\n      subjectTypeCode: $subjectTypeCode\r\n    ) {\r\n      id\r\n      subjectTypeName\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewSubjectMutation = gql`\r\n  mutation createNewSubjectMutation(\r\n    $subjectName: String!\r\n    $subjectCode: String!\r\n    $subjectType: SubjectTypeWhereUniqueInput!\r\n    $educType: EducationTypeWhereUniqueInput!\r\n  ) {\r\n    createSubject(\r\n      subjectName: $subjectName\r\n      educType: $educType\r\n      subjectCode: $subjectCode\r\n      subjectType: $subjectType\r\n    ) {\r\n      subjectCode\r\n      subjectName\r\n    }\r\n  }\r\n`\r\n\r\nconst createSubDivisionMutation = gql`\r\n  mutation createSubDivisionMutation(\r\n    $subDivName: String!\r\n    $subDivCode: String!\r\n    $division: DivisionWhereUniqueInput!\r\n  ) {\r\n    createSubDivision(\r\n      subDivName: $subDivName\r\n      subDivCode: $subDivCode\r\n      division: $division\r\n    ) {\r\n      id\r\n      subDivName\r\n      subDivCode\r\n      division {\r\n        divName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewSessionMutation = gql`\r\n  mutation createNewSessionMutation(\r\n    $sessionName: String!\r\n    $sessionCode: String!\r\n  ) {\r\n    createSession(sessionName: $sessionName, sessionCode: $sessionCode) {\r\n      id\r\n      sessionName\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewRankMutation = gql`\r\n  mutation createNewRankMutation($rankName: String!, $rankCode: String!) {\r\n    createRank(rankName: $rankName, rankCode: $rankCode) {\r\n      id\r\n      rankName\r\n    }\r\n  }\r\n`;\r\n\r\nconst createNewRegionMutation = gql`\r\n  mutation createNewRegionMutation(\r\n    $regName: String!\r\n     $regCode: String!\r\n      $country: CountryWhereUniqueInput!\r\n      ) {\r\n    createRegion(\r\n       country: $country \r\n        regName: $regName\r\n         regCode: $regCode\r\n         ) {\r\n      id\r\n      regName\r\n    }\r\n  }\r\n`\r\n\r\nconst signupUserMutation = gql`\r\n  mutation signupUserMutation(\r\n    $name: String!\r\n     $email: String!\r\n      $password: String!\r\n      ) {\r\n    signup(\r\n       password: $password \r\n        name: $name\r\n         email: $email\r\n         ) {\r\n      id\r\n      name\r\n      email\r\n    }\r\n  }\r\n`\r\n\r\nconst loginUserMutation = gql`\r\n  mutation loginUserMutation(\r\n     $email: String!\r\n      $password: String!\r\n      ) {\r\n    login(\r\n       password: $password \r\n         email: $email\r\n         ) {\r\n      id\r\n      email\r\n    }\r\n  }\r\n`\r\n\r\nconst createNewCountryMutation = gql`\r\n  mutation createNewCountryMutation($countryName: String!, $countryCode: String!) {\r\n    createCountry(countryName: $countryName, countryCode: $countryCode) {\r\n      id\r\n      countryName\r\n      countryCode\r\n    }\r\n  }\r\n`\r\n\r\nconst createPhaseMutation = gql`\r\n  mutation createPhaseMutation($phaseName: String!, $phaseCode: String!){\r\n    createPhase(phaseName: $phaseName, phaseCode: $phaseCode) {\r\n      id\r\n      phaseName\r\n    }\r\n  }\r\n`\r\n\r\nconst createExamMutation = gql`\r\n  mutation createExamMutation($examName: String!, $examCode: String!) {\r\n    createExam(examName: $examName, examCode: $examCode) {\r\n      id\r\n      examName\r\n    }\r\n  }\r\n`\r\n\r\nconst registerSubjectSeriesMutation = gql`\r\n  mutation registerSubjectSeriesMutation(\r\n    $subject: SubjectWhereUniqueInput!\r\n    $series: SeriesWhereUniqueInput!\r\n    $coeff: Int!\r\n  ) {\r\n    createSubjectSeries(subject: $subject, series: $series, coeff: $coeff) {\r\n      id\r\n      series {\r\n        id\r\n        seriesName\r\n        subjectSeries {\r\n          id\r\n          subject {\r\n            id\r\n            subjectName\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst registerNewSubjectSeriesMutation = gql`\r\n  mutation registerNewSubjectSeriesMutation(\r\n    $series: SeriesWhereUniqueInput!\r\n    $coeff: Int!\r\n    $subjectName: String!\r\n    $subjectCode: String!\r\n  ) {\r\n    createSubjectSeries(\r\n      subjectCode: $subjectCode\r\n      subjectName: $subjectName\r\n      series: $series\r\n      coeff: $coeff\r\n    ) {\r\n      id\r\n      series {\r\n        id\r\n        seriesName\r\n        subjectSeries {\r\n          id\r\n          subjectName\r\n          subjectCode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst createCandidateMutation = gql`\r\n  mutation createCandidateMutation(\r\n    $cand1stName: String!\r\n    $cand2ndName: String\r\n    $cand3rdName: String\r\n    $dadName: String\r\n    $momName: String\r\n    $candCode: String\r\n    $email: String!\r\n    $image: String!\r\n    $phoneNumb: Int\r\n    $dateOfBirth: DateTime\r\n    $birthCertNumber: String\r\n    $placeOfBirth: String\r\n    $gender: GenderWhereUniqueInput!\r\n  ) {\r\n    createCandidate(\r\n      cand1stName: $cand1stName\r\n      cand2ndName: $cand2ndName\r\n      dadName: $dadName\r\n      momName: $momName\r\n      cand3rdName: $cand3rdName\r\n      candCode: $candCode\r\n      email: $email\r\n      image: $image\r\n      phoneNumb: $phoneNumb\r\n      dateOfBirth: $dateOfBirth\r\n      birthCertNumber: $birthCertNumber\r\n      placeOfBirth: $placeOfBirth\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      cand1stName\r\n      cand2ndName\r\n      cand3rdName\r\n      momName\r\n      dadName\r\n      candCode\r\n      birthCertNumber\r\n      dateOfBirth\r\n      image\r\n    }\r\n  }\r\n`\r\n\r\nconst createExaminerMutation = gql`\r\n  mutation createExaminerMutation(\r\n    $examiner1stName: String!\r\n    $examiner2ndName: String!\r\n    $examinerOtherNames: String\r\n    $examinerCode: String!\r\n    $examinerEmail: String!\r\n    $examinerCNI: String!\r\n    $examinerMatricule: String!\r\n    $examinerImage: String!\r\n    $examinerPhone: Int!\r\n    $gender: GenderWhereUniqueInput!\r\n  ) {\r\n    createExaminer(\r\n      examiner1stName: $examiner1stName\r\n      examiner2ndName: $examiner2ndName\r\n      examinerOtherNames: $examinerOtherNames\r\n      examinerMatricule: $examinerMatricule\r\n      examinerCode: $examinerCode\r\n      examinerCNI: $examinerCNI\r\n      examinerEmail: $examinerEmail\r\n      examinerImage: $examinerImage\r\n      examinerPhone: $examinerPhone\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      examiner1stName\r\n      examiner2ndName\r\n      examinerOtherNames\r\n      examinerCode\r\n      examinerEmail\r\n      examinerImage\r\n      examinerPhone\r\n    }\r\n  }\r\n`\r\n\r\n//************create mutations  */\r\n\r\n////**************Update mutations */\r\n\r\nconst updateSubDivisionMutation = gql`\r\n  mutation updateSubDivisionMutation(\r\n    $id: ID!\r\n    $subDivName: String\r\n    $subDivCode: String\r\n  ) {\r\n    updateSubDivision(\r\n      id: $id\r\n      subDivName: $subDivName\r\n      subDivCode: $subDivCode\r\n    ) {\r\n      subDivName\r\n      subDivCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateCenterMutation = gql`\r\n  mutation updateCenterMutation(\r\n    $id: ID!\r\n    $centerName: String\r\n    $centerCode: String\r\n    $centerNumber: Int\r\n  ) {\r\n    updateCenter(\r\n      id: $id\r\n      centerName: $centerName\r\n      centerCode: $centerCode\r\n      centerNumber: $centerNumber\r\n    ) {\r\n      id\r\n      centerName\r\n      centerNumber\r\n      centerCode\r\n    }\r\n  }\r\n`\r\n\r\nconst updateTownMutation = gql`\r\n  mutation updateTownMutation($id: ID!, $townName: String, $townCode: String) {\r\n    updateTown(id: $id, townName: $townName, townCode: $townCode) {\r\n      townName\r\n      townCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateExamMutation = gql`\r\n  mutation updateExamMutation($id: ID!, $examName: String, $examCode: String) {\r\n    updateExam(id: $id, examName: $examName, examCode: $examCode) {\r\n      examName\r\n      examCode\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst updateScoreMutation = gql`\r\n  mutation updateScoreMutation(\r\n    $subjectSeries: SubjectSeriesWhereUniqueInput!\r\n    $subjectAve: Float!\r\n    $candExamSecretCode: String!\r\n  ) {\r\n    updateScore(\r\n      subjectSeries: $subjectSeries\r\n      subjectAve: $subjectAve\r\n      candExamSecretCode: $candExamSecretCode\r\n    ) {\r\n      subjectAve\r\n      coeff\r\n      id\r\n      subjectSeries {\r\n        id\r\n        subjectCode\r\n        subjectName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n// const createUserMutation = gql`\r\n//   mutation createUserMutation(\r\n//     $email: String!\r\n//     $name: String!\r\n//     $password: String!\r\n//     ) {\r\n//     createUser( \r\n//                email: $email!\r\n//                name: $name!\r\n//                password: $password!\r\n//                ) {\r\n//       id\r\n//       name\r\n//       email\r\n//       password\r\n//     }\r\n//   }\r\n// `\r\n\r\nconst updateCandidateMutation = gql`\r\n  mutation updateCandidateMutation(\r\n    $id: ID!\r\n    $cand1stName: String\r\n    $cand2ndName: String\r\n    $cand3rdName: String\r\n    $momName: String\r\n    $dadName: String\r\n    $email: String\r\n    $image: String\r\n    $phoneNumb: Int\r\n    $placeOfBirth: String\r\n    $dateOfBirth: DateTime\r\n    $birthCertNumber: String\r\n    $gender: GenderWhereUniqueInput\r\n  ) {\r\n    updateCandidate(\r\n      id: $id\r\n      cand1stName: $cand1stName\r\n      cand2ndName: $cand2ndName\r\n      cand3rdName: $cand3rdName\r\n      momName: $momName\r\n      dadName: $dadName\r\n      email: $email\r\n      image: $image\r\n      phoneNumb: $phoneNumb\r\n      placeOfBirth: $placeOfBirth\r\n      dateOfBirth: $dateOfBirth\r\n      birthCertNumber: $birthCertNumber\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      cand1stName\r\n      cand2ndName\r\n      cand3rdName\r\n      momName\r\n      dadName\r\n      email\r\n      image\r\n      phoneNumb\r\n      placeOfBirth\r\n      dateOfBirth\r\n      birthCertNumber\r\n      gender {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst updateGenderMutation = gql`\r\n  mutation updateGenderMutation(\r\n    $id: ID!\r\n    $genderName: String\r\n    $genderCode: String\r\n  ) {\r\n    updateGender(id: $id, genderName: $genderName, genderCode: $genderCode) {\r\n      id\r\n      genderName\r\n      genderCode\r\n    }\r\n  }\r\n`\r\n\r\nconst signUpMutation = gql`\r\n  mutation signUpMutation($email: String!, $name: String!, $password: String!) {\r\n    signUp(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      resetToken\r\n      password\r\n    }\r\n  }\r\n`\r\n\r\nconst updateItemMutation = async (e, updateMutation) => {\r\n  e.preventDefault()\r\n  console.log('Updating Region!!')\r\n  const res = await updateMutation({\r\n    variables: {\r\n      id: this.props.id,\r\n      ...this.state,\r\n    },\r\n  })\r\n  console.log('Region Updated!!')\r\n}\r\n\r\n////**************Update mutations */\r\n\r\nexport {\r\n  createCandidateMutation,\r\n  createNewSubjectMutation,\r\n  createNewSubjectTypeMutation,\r\n  createTownMutation,\r\n  createCenterExamSessionExaminerMutation,\r\n  createDivisionMutation,\r\n  createRegistrationMutation,\r\n  createCenterMutation,\r\n  createEducationTypeMutation,\r\n  createSeriesMutation,\r\n  createSubDivisionMutation,\r\n  createNewSessionMutation,\r\n  createNewRankMutation,\r\n  createNewReportMutation,\r\n  createNewRegionMutation,\r\n  createNewGenderMutation,\r\n  createExamMutation,\r\n  registerSubjectSeriesMutation,\r\n  registerNewSubjectSeriesMutation,\r\n  updateCenterMutation,\r\n  updateTownMutation,\r\n  updateSessionMutation,\r\n  updateRegionMutation,\r\n  updateExamMutation,\r\n  updateSubDivisionMutation,\r\n  updateGenderMutation,\r\n  updateCandidateMutation,\r\n  updateScoreMutation,\r\n  updateDivisionMutation,\r\n  updateItemMutation,\r\n  createExaminerMutation,\r\n  createPhaseMutation,\r\n  createCenterExamSessionSeriesMutation,\r\n  updateSeriesMutation,\r\n  updateRankMutation,\r\n  createPhaseRankMutation,\r\n  createNewCountryMutation,\r\n  signUpMutation,\r\n  updateSubjectMutation,\r\n  updateSubjectTypeMutation,\r\n  createCenterExamSessionMutation,\r\n  updateEducationTypeMutation,\r\n  signInCandidate,\r\n  loginUserMutation,\r\n  signupUserMutation,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}