{"ast":null,"code":"var _jsxFileName = \"E:\\\\SYGEFEX\\\\Sygefex-front-Formik\\\\src\\\\components\\\\utils\\\\FormInputs.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useField } from 'formik';\nimport styled, { keyframes } from 'styled-components';\nconst loading = keyframes([\"from{background-position:0 0;}to{background-position:100% 100%;}\"]);\nconst customStyle = {\n  control: provided => _objectSpread(_objectSpread({}, provided), {}, {\n    fontFamily: 'Roboto Slab',\n    border: \"0px solid black\",\n    borderBottom: \"0.9px solid #0780b7\",\n    fontSize: '1.6rem',\n    outline: 'none',\n    backgroundColor: 'white',\n    color: '#000',\n    borderRadius: '0',\n    boxShadow: \"none\",\n    alignItems: \"center\",\n    '&:hover': {\n      borderBottom: ' 2px solid #d4351c',\n      borderRadius: '0'\n    },\n    // border style on hover\n    '&:focus': {\n      borderBottom: ' 2px solid #d4351c',\n      borderRadius: '0'\n    } // border style on hover\n\n  }),\n  option: provided => _objectSpread(_objectSpread({}, provided), {}, {\n    textAlign: 'left'\n  })\n};\nconst StyledInput = styled.input.withConfig({\n  displayName: \"FormInputs__StyledInput\",\n  componentId: \"ii1nqi-0\"\n})([\"padding-top:1rem;margin-top:0.4rem;font-size:1.5rem;border-style:none;width:100%;outline:none;border-bottom:0.09rem solid \", \";z-index:10;font-family:\\\"Roboto Slab\\\";&:valid + label{top:-.25rem;font-size:1.1rem;color:\", \";}&:focus,&active{outline:none;border-bottom:0.2rem solid \", \";}&:focus + label{top:-.25rem;font-size:1.1rem;color:#aaa;}\"], props => props.theme.blues[2], props => props.theme.britishBlue, props => props.theme.britishRed);\nconst InputGroup = styled.div.withConfig({\n  displayName: \"FormInputs__InputGroup\",\n  componentId: \"ii1nqi-1\"\n})([\"position:relative;\"]);\nconst StyledLabel = styled.label.withConfig({\n  displayName: \"FormInputs__StyledLabel\",\n  componentId: \"ii1nqi-2\"\n})([\"font-size:1.5rem;border-style:none;position:absolute;left:1rem;top:1.5rem;color:\", \";pointer-events:none;transition:all 1s ease-out;font-family:\\\"Roboto Slab\\\";&:focus{outline:none;}\"], props => props.theme.greys[2]);\nconst StyledSelect = styled.select.withConfig({\n  displayName: \"FormInputs__StyledSelect\",\n  componentId: \"ii1nqi-3\"\n})([\"margin-top:1rem;font-size:1.5rem;border-style:none;border-bottom:0.09rem solid \", \";option{background:white;font-weight:400;display:flex;white-space:pre;min-height:20px;padding:0px 2px 1px;background:\", \";border-radius:0.5rem;}&:focus{outline:none;border-color:\", \";}\"], props => props.theme.blues[2], props => props.theme.blues[0], props => props.theme.britishRed);\nconst StyledErrorMessage = styled.div.withConfig({\n  displayName: \"FormInputs__StyledErrorMessage\",\n  componentId: \"ii1nqi-4\"\n})([\"padding-top:0.2rem;font-size:1.3rem;color:\", \";\"], props => props.theme.britishRed);\nconst StyledButton = styled.button.withConfig({\n  displayName: \"FormInputs__StyledButton\",\n  componentId: \"ii1nqi-5\"\n})([\"background-color:\", \";color:\", \";border:0;border-radius:.5rem;font-size:3rem;font-weight:300;line-height:1.5rem;text-shadow:3px 4px 5px #0000;box-shadow:\", \" cursor:pointer;\"], props => props.theme.blues[2], props => props.theme.white, props => props.theme.bs2);\nconst ButtonStyled = styled.div.withConfig({\n  displayName: \"FormInputs__ButtonStyled\",\n  componentId: \"ii1nqi-6\"\n})([\"padding-bottom:0.5rem;padding-top:1rem;button{border-radius:0.6rem;font-size:1.7rem;font-weight:bold;box-shadow:\", \";border:0.05rem solid \", \";color:\", \";background:\", \";cursor:pointer;padding:0.8rem;outline:none;&:hover{color:\", \" background-color:\", \";}}\"], props => props.theme.formBS, props => props.theme.blues[2], props => props.theme.blues[2], props => props.theme.pureWhite, props => props.theme.blues[2], props => props.theme.sand);\nconst StyledForm = styled.div.withConfig({\n  displayName: \"FormInputs__StyledForm\",\n  componentId: \"ii1nqi-7\"\n})([\"margin:0 2rem;padding:0.6rem;font-size:1.5rem;border-radius:.5rem;border:0.09rem solid \", \";box-shadow:\", \";min-width:20rem;&[disabled]{opacity:0.3;}&::before{height:0.3rem;content:'';display:block;background-image:linear-gradient(to right,#0780b7 0%,#e2b04a 20%,#0780b7 100%);}&[aria-busy='true']::before{background-size:50% auto;animation:\", \" 0.5s linear infinite;}\"], props => props.theme.blues[2], props => props.theme.formBS, loading);\n\nconst SygexInput = (_ref) => {\n  let {\n    label\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const [field, meta] = useField(props);\n  return __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, __jsx(StyledInput, _extends({\n    className: \"text-input\"\n  }, field, props, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  })), __jsx(StyledLabel, {\n    htmlFor: props.id || props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, label), meta.touched && meta.error ? __jsx(StyledErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, meta.error) : null);\n};\n\nconst SygexSelect = (_ref2) => {\n  let {\n    label\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"label\"]);\n\n  const [field, meta] = useField(props);\n  return __jsx(React.Fragment, null, __jsx(StyledSelect, _extends({}, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  })), meta.touched && meta.error ? __jsx(StyledErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, meta.error) : null);\n};\n\nexport { StyledLabel, StyledButton, customStyle, SygexSelect, ButtonStyled, SygexInput, StyledForm };","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/utils/FormInputs.jsx"],"names":["React","useField","styled","keyframes","loading","customStyle","control","provided","fontFamily","border","borderBottom","fontSize","outline","backgroundColor","color","borderRadius","boxShadow","alignItems","option","textAlign","StyledInput","input","props","theme","blues","britishBlue","britishRed","InputGroup","div","StyledLabel","label","greys","StyledSelect","select","StyledErrorMessage","StyledButton","button","white","bs2","ButtonStyled","formBS","pureWhite","sand","StyledForm","SygexInput","field","meta","id","name","touched","error","SygexSelect"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { useField } from 'formik';\r\n\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst loading = keyframes`\r\n  from {\r\n    background-position: 0 0;\r\n    /* rotate: 0; */\r\n  }\r\n\r\n  to {\r\n    background-position: 100% 100%;\r\n    /* rotate: 360deg; */\r\n  }\r\n`;\r\n\r\n\r\nconst customStyle = {\r\n  control: (provided) => ({\r\n    ...provided,\r\n    fontFamily: 'Roboto Slab',\r\n    border: \"0px solid black\",\r\n    borderBottom: \"0.9px solid #0780b7\",\r\n    fontSize: '1.6rem',\r\n    outline: 'none',\r\n    backgroundColor: 'white',\r\n    color: '#000',\r\n    borderRadius: '0',\r\n    boxShadow: \"none\",\r\n    alignItems: \"center\",\r\n    '&:hover': {\r\n      borderBottom: ' 2px solid #d4351c',\r\n      borderRadius: '0',\r\n    }, // border style on hover\r\n    '&:focus': {\r\n      borderBottom: ' 2px solid #d4351c',\r\n      borderRadius: '0',\r\n    }, // border style on hover\r\n\r\n  }),\r\n  option: (provided) => ({\r\n    ...provided,\r\n    textAlign: 'left',\r\n\r\n  }),\r\n}\r\n\r\n\r\n\r\n\r\nconst StyledInput = styled.input`\r\n    padding-top:1rem;\r\n    /* display:block; */\r\n    margin-top:0.4rem;\r\n    font-size: 1.5rem;\r\n    border-style: none;\r\n    width:100%;\r\n    outline: none;\r\n    border-bottom: 0.09rem solid ${(props) => props.theme.blues[2]};\r\n     z-index:10;\r\n     font-family:\"Roboto Slab\";\r\n    \r\n     &:valid + label{\r\n      top:-.25rem;\r\n      font-size:1.1rem;\r\n      color:${props => props.theme.britishBlue};\r\n     }\r\n    &:focus,\r\n    &active {\r\n      outline: none; \r\n    border-bottom: 0.2rem solid ${(props) => props.theme.britishRed};\r\n    }\r\n    &:focus + label{\r\n      top:-.25rem;\r\n      font-size:1.1rem;\r\n      color:#aaa;\r\n    }\r\n   \r\n     \r\n      \r\n    `;\r\n\r\nconst InputGroup = styled.div`\r\nposition:relative;\r\n  `;\r\n\r\nconst StyledLabel = styled.label`\r\n    font-size: 1.5rem;\r\n    border-style: none;\r\n    position:absolute;\r\n    left:1rem;\r\n    top:1.5rem;\r\n    color: ${props => props.theme.greys[2]};\r\n    pointer-events:none;\r\n    transition: all 1s ease-out;\r\n    font-family:\"Roboto Slab\";\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n   margin-top:1rem;\r\n    font-size: 1.5rem;\r\n    border-style: none;\r\n     border-bottom: 0.09rem solid ${(props) => props.theme.blues[2]};\r\n     option {\r\n         background: white;\r\n         font-weight: 400;\r\n         display: flex;\r\n         white-space: pre;\r\n         min-height: 20px;\r\n         padding: 0px 2px 1px;\r\n         background: ${props => props.theme.blues[0]};\r\n         border-radius:0.5rem;\r\n       }\r\n    &:focus {\r\n      outline: none;\r\n      border-color: ${(props) => props.theme.britishRed};\r\n    }\r\n`;\r\n\r\nconst StyledErrorMessage = styled.div`\r\npadding-top:0.2rem;\r\nfont-size:1.3rem;\r\ncolor: ${props => props.theme.britishRed};\r\n/* padding-left: 0.5rem; */\r\n`;\r\n\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: ${props => props.theme.blues[2]};\r\n  color: ${props => props.theme.white};\r\n  border: 0;\r\n  border-radius: .5rem;\r\n  font-size: 3rem;\r\n  font-weight: 300;\r\n  line-height: 1.5rem;\r\n  text-shadow:3px 4px 5px #0000;\r\n  /* padding:0.7rem ; */\r\n  /* margin-bottom: 1rem auto; */\r\n  box-shadow: ${props => props.theme.bs2}\r\n  /* margin-bottom: 1.1rem; */\r\n  cursor: pointer;\r\n  /* &:hover {\r\n    background-color: ${props => props.theme.grey[10]};\r\n  }\r\n  &:disabled {\r\n    background-color: ${props => props.theme.grey[13]};\r\n  }  */\r\n  \r\n`;\r\n\r\nconst ButtonStyled = styled.div`\r\npadding-bottom: 0.5rem;\r\npadding-top: 1rem;\r\nbutton{\r\n    border-radius: 0.6rem;\r\n    font-size: 1.7rem;\r\n    font-weight:bold;\r\n    box-shadow:${props => props.theme.formBS};\r\n    border: 0.05rem solid ${props => props.theme.blues[2]};\r\n    color: ${ props => props.theme.blues[2]};\r\n    background: ${ props => props.theme.pureWhite};\r\n    cursor: pointer;\r\n    padding:  0.8rem;\r\n    outline: none;\r\n    &:hover {\r\n      \r\n    color: ${props => props.theme.blues[2]}\r\n    background-color: ${props => props.theme.sand};\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst StyledForm = styled.div`\r\nmargin: 0 2rem;\r\npadding:0.6rem;\r\nfont-size: 1.5rem;\r\nborder-radius: .5rem;\r\nborder: 0.09rem solid ${(props) => props.theme.blues[2]};\r\n/* border-top: 1.5rem solid ${ (props) => props.theme.blues[2]}; */\r\n/* border-left: 0.09rem solid ${ (props) => props.theme.blues[2]};\r\nborder-right: 0.09rem solid ${ (props) => props.theme.blues[2]};\r\nborder-bottom: 0.09rem solid ${ (props) => props.theme.blues[2]}; */\r\nbox-shadow: ${(props) => props.theme.formBS};\r\nmin-width: 20rem;\r\n\r\n\r\n&[disabled] {\r\n      opacity: 0.3;\r\n    }\r\n    &::before {\r\n      height: 0.3rem;\r\n      content: '';\r\n      display: block;\r\n      background-image: linear-gradient(to right, #0780b7 0%, #e2b04a 20%, #0780b7 100%);\r\n      /* background-image: linear-gradient(to right, #ff3019 0%, #e2b04a 50%, #ff3019 100%); */\r\n    }\r\n    &[aria-busy='true']::before {\r\n      background-size: 50% auto;\r\n      animation: ${loading} 0.5s linear infinite;\r\n    }\r\n\r\n`;\r\n\r\nconst SygexInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <InputGroup>\r\n      <StyledInput className=\"text-input\" {...field} {...props} required />\r\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nconst SygexSelect = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      {/* <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel> */}\r\n      <StyledSelect {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport\r\n{\r\n  StyledLabel,\r\n    StyledButton,\r\n    customStyle,\r\n    SygexSelect,\r\n    ButtonStyled,\r\n    SygexInput,\r\n    StyledForm\r\n}"]},"metadata":{},"sourceType":"module"}