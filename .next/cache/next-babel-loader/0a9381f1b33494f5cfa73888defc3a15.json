{"ast":null,"code":"import React from 'react';\nimport { concat } from 'apollo-link';\n\nconst uniqueCodeGen = keyLength => {\n  var i,\n      key = '',\n      //  characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  characters = 'abcdefghijklmnopqrstuvwxyzABCDEF@#$%&GHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n\n  for (i = 0; i < keyLength; i++) {\n    key += characters.substr(Math.floor(Math.random() * charactersLength + 1), 1);\n  }\n\n  return key;\n};\n\nconst objectFromCode = codeValue => {\n  const storedObject = {\n    candCode: `${codeValue}`\n  };\n  return storedObject;\n};\n\nconst getObjectFromID = suppliedID => {\n  const theObject = {\n    id: `${suppliedID}`\n  };\n  return theObject;\n};\n\nconst centerExamSessionObjectFromCode = codeValue => {\n  const storedObject = {\n    centerExamSession: `${codeValue}`\n  };\n  return storedObject;\n};\n\nconst candExamSessionCode = (candID, examID, sessionID) => {\n  return `${candID + examID + sessionID}`;\n};\n\nconst getSelectedObject = (dataSource, objectID) => {\n  // 1 copy the data source\n  if (dataSource.length > 0) {\n    const tempObjects = [...dataSource]; // get the object\n\n    const selectedObject = tempObjects.find(item => item.id === objectID);\n    return selectedObject;\n  }\n}; // function to model a number with leading zeroes\n\n\nNumber.prototype.pad = function (size) {\n  var s = String(this);\n\n  while (s.length < (size || 2)) {\n    s = '0' + s;\n  }\n\n  return s;\n};\n\nconst calcCandAve = candScores => {\n  const aveTotal = candScores && candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0);\n  const coeffTotal = candScores.reduce((tally, item) => item.subjectAve === null ? tally : tally + item.coeff, 0);\n  const candAve = aveTotal / coeffTotal;\n  return candAve;\n};\n\nconst calcCandTotalScore = candScores => {\n  const aveTotal = candScores && candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0);\n  return aveTotal;\n};\n\nconst calcCandTotalCoeff = candScores => {\n  const coeffTotal = candScores && candScores.reduce((tally, item) => item.subjectAve === null ? tally : tally + item.coeff, 0);\n  return coeffTotal;\n};\n\nconst roundFloatNumber = (value, decimals) => {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n};\n\nconst removeTypename = value => {\n  if (value === null || value === undefined) {\n    return value;\n  } else if (Array.isArray(value)) {\n    return value.map(v => removeTypename(v));\n  } else if (typeof value === 'object') {\n    const newObj = {};\n    Object.entries(value).forEach(([key, v]) => {\n      if (key !== '__typename') {\n        newObj[key] = removeTypename(v);\n      }\n    });\n    return newObj;\n  }\n\n  return value;\n};\n\nconst uploadFile = async e => {\n  const files = e.target.files;\n  const data = new FormData();\n  data.append('file', files[0]);\n  data.append('upload_preset', 'ineximages');\n  const res = await fetch('https://api.cloudinary.com/v1_1/inex/image/upload', {\n    method: 'POST',\n    body: data\n  });\n  const file = await res.json();\n  console.log(file); // this.setState({ image: file.secure_url });\n\n  setState({\n    image: file.secure_url\n  });\n};\n\nexport { candExamSessionCode, roundFloatNumber, calcCandTotalScore, calcCandTotalCoeff, calcCandAve, objectFromCode, uniqueCodeGen, getSelectedObject, getObjectFromID, removeTypename, uploadFile, centerExamSessionObjectFromCode };","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/queries&Mutations&Functions/Functions.jsx"],"names":["React","concat","uniqueCodeGen","keyLength","i","key","characters","charactersLength","length","substr","Math","floor","random","objectFromCode","codeValue","storedObject","candCode","getObjectFromID","suppliedID","theObject","id","centerExamSessionObjectFromCode","centerExamSession","candExamSessionCode","candID","examID","sessionID","getSelectedObject","dataSource","objectID","tempObjects","selectedObject","find","item","Number","prototype","pad","size","s","String","calcCandAve","candScores","aveTotal","reduce","tally","subjectAve","coeff","coeffTotal","candAve","calcCandTotalScore","calcCandTotalCoeff","roundFloatNumber","value","decimals","round","removeTypename","undefined","Array","isArray","map","v","newObj","Object","entries","forEach","uploadFile","e","files","target","data","FormData","append","res","fetch","method","body","file","json","console","log","setState","image","secure_url"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { concat } from 'apollo-link'\r\n\r\n\r\nconst uniqueCodeGen = keyLength => {\r\n  var i,\r\n    key = '',\r\n    //  characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    characters =\r\n      'abcdefghijklmnopqrstuvwxyzABCDEF@#$%&GHIJKLMNOPQRSTUVWXYZ0123456789'\r\n\r\n  var charactersLength = characters.length\r\n\r\n  for (i = 0; i < keyLength; i++) {\r\n    key += characters.substr(\r\n      Math.floor(Math.random() * charactersLength + 1),\r\n      1,\r\n    )\r\n  }\r\n\r\n  return key\r\n}\r\n\r\nconst objectFromCode = codeValue => {\r\n  const storedObject = {\r\n    candCode: `${codeValue}`,\r\n  }\r\n  return storedObject\r\n}\r\n\r\nconst getObjectFromID = suppliedID => {\r\n  const theObject = {\r\n    id: `${suppliedID}`,\r\n  }\r\n  return theObject\r\n}\r\n\r\nconst centerExamSessionObjectFromCode = codeValue => {\r\n  const storedObject = {\r\n    centerExamSession: `${codeValue}`,\r\n  }\r\n  return storedObject\r\n}\r\n\r\nconst candExamSessionCode = (candID, examID, sessionID) => {\r\n  return `${candID + examID + sessionID}`\r\n}\r\n\r\nconst getSelectedObject = (dataSource, objectID) => {\r\n  // 1 copy the data source\r\n  if (dataSource.length > 0) {\r\n    const tempObjects = [...dataSource]\r\n    // get the object\r\n    const selectedObject = tempObjects.find(item => item.id === objectID)\r\n    return selectedObject\r\n  }\r\n}\r\n// function to model a number with leading zeroes\r\nNumber.prototype.pad = function (size) {\r\n  var s = String(this)\r\n  while (s.length < (size || 2)) {\r\n    s = '0' + s\r\n  }\r\n  return s\r\n}\r\n\r\nconst calcCandAve = candScores => {\r\n  const aveTotal =\r\n    candScores &&\r\n    candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0)\r\n  const coeffTotal = candScores.reduce(\r\n    (tally, item) => (item.subjectAve === null ? tally : tally + item.coeff),\r\n    0,\r\n  )\r\n  const candAve = aveTotal / coeffTotal\r\n  return candAve\r\n}\r\nconst calcCandTotalScore = candScores => {\r\n  const aveTotal =\r\n    candScores &&\r\n    candScores.reduce((tally, item) => tally + item.subjectAve * item.coeff, 0)\r\n  return aveTotal\r\n}\r\nconst calcCandTotalCoeff = candScores => {\r\n  const coeffTotal =\r\n    candScores &&\r\n    candScores.reduce(\r\n      (tally, item) => (item.subjectAve === null ? tally : tally + item.coeff),\r\n      0,\r\n    )\r\n  return coeffTotal\r\n}\r\nconst roundFloatNumber = (value, decimals) => {\r\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals)\r\n}\r\nconst removeTypename = (value) => {\r\n  if (value === null || value === undefined) {\r\n    return value;\r\n  } else if (Array.isArray(value)) {\r\n    return value.map(v => removeTypename(v));\r\n  } else if (typeof value === 'object') {\r\n    const newObj = {};\r\n    Object.entries(value).forEach(([key, v]) => {\r\n      if (key !== '__typename') {\r\n        newObj[key] = removeTypename(v);\r\n      }\r\n    });\r\n    return newObj;\r\n  }\r\n  return value;\r\n};\r\n\r\nconst uploadFile = async (e) => {\r\n  const files = e.target.files;\r\n  const data = new FormData();\r\n  data.append('file', files[0]);\r\n  data.append('upload_preset', 'ineximages');\r\n  const res = await fetch('https://api.cloudinary.com/v1_1/inex/image/upload', {\r\n    method: 'POST',\r\n    body: data\r\n  });\r\n  const file = await res.json();\r\n  console.log(file);\r\n  // this.setState({ image: file.secure_url });\r\n  setState({ image: file.secure_url })\r\n}\r\n\r\nexport {\r\n  candExamSessionCode,\r\n  roundFloatNumber,\r\n  calcCandTotalScore,\r\n  calcCandTotalCoeff,\r\n  calcCandAve,\r\n  objectFromCode,\r\n  uniqueCodeGen,\r\n  getSelectedObject,\r\n  getObjectFromID,\r\n  removeTypename,\r\n  uploadFile,\r\n  centerExamSessionObjectFromCode,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}