{"ast":null,"code":"var _jsxFileName = \"E:\\\\SYGEFEX\\\\Sygefex-front-Formik\\\\src\\\\components\\\\series\\\\CreateNewSeriesHook.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { MinimStyledPage } from '../styles/StyledPage';\nimport Error from '../ErrorMessage.js';\nimport { Formik, Form } from 'formik';\nimport Select from 'react-select';\nimport { customStyle, SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport { createSeriesMutation } from '../queries&Mutations&Functions/Mutations';\nimport { getAllEducationTypesQuery, getAllSeriesQuery } from '../queries&Mutations&Functions/Queries';\nimport { getObjectFromID, removeTypename } from '../queries&Mutations&Functions/Functions';\nconst InputGroup = styled.div.withConfig({\n  displayName: \"CreateNewSeriesHook__InputGroup\",\n  componentId: \"sc-28dpeg-0\"\n})([\"display:flex;flex-direction:column;margin:0 1rem;\"]);\nconst AllControls = styled.div.withConfig({\n  displayName: \"CreateNewSeriesHook__AllControls\",\n  componentId: \"sc-28dpeg-1\"\n})([\"display:flex;flex-direction:column;\"]);\nconst validationSchema = Yup.object().shape({\n  seriesName: Yup.string().required('Libéllé de la série obligatoire'),\n  seriesCode: Yup.string().required('Code de la série obligatoire'),\n  educType: Yup.string().required(\"Choissisez un type d'enseignement\")\n});\n\nconst CreateNewSeriesHook = () => {\n  const initialValues = {\n    seriesName: '',\n    seriesCode: '',\n    educType: \"\"\n  };\n  const {\n    data: dataEducType,\n    loading: loadingEducType,\n    error: errorEducType\n  } = useQuery(getAllEducationTypesQuery);\n  {\n    loadingEducType && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }\n    }, \"Loading...\");\n  }\n  {\n    errorEducType && __jsx(Error, {\n      error: errorEducType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    });\n  }\n  const getEducationTypes = dataEducType && dataEducType.educationTypes;\n  console.log(getEducationTypes);\n  const getEducTypeOptions = getEducationTypes && getEducationTypes.map(item => ({\n    value: item.id,\n    label: item.educationTypeName\n  }));\n  const refinedEducTypes = educationTypes && removeTypename(getEducTypeOptions);\n  const [createSeries, {\n    loading,\n    error\n  }] = useMutation(createSeriesMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, actions, setSubmitting, resetForm) => {\n      const res = await createSeries({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          educationType: refinedEducTypes && getObjectFromID(values.educType.value)\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        actions.resetForm(true);\n        actions.setSubmitting(false);\n      }, 200);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, ({\n    values,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return __jsx(MinimStyledPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, \" Nouvelle S\\xE9rie\"), __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting,\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }\n    }, __jsx(AllControls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }\n    }, __jsx(Select, {\n      name: \"educType\",\n      onChange: value => setFieldValue('educType', value),\n      options: getEducTypeOptions,\n      placeholder: \"Type d'Enseignement\",\n      styles: customStyle,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), __jsx(SygexInput, {\n      name: \"seriesName\",\n      type: \"text\",\n      label: \"Lib\\xE9ll\\xE9 de la S\\xE9rie\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), __jsx(SygexInput, {\n      name: \"seriesCode\",\n      type: \"text\",\n      label: \"Code de la S\\xE9rie\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), __jsx(ButtonStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Valid\", isSubmitting ? 'ation en cours' : 'er'))))));\n  });\n};\n\nexport default CreateNewSeriesHook;","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/series/CreateNewSeriesHook.jsx"],"names":["React","useMutation","useQuery","MinimStyledPage","Error","Formik","Form","Select","customStyle","SygexInput","StyledForm","ButtonStyled","StyledButton","styled","Yup","createSeriesMutation","getAllEducationTypesQuery","getAllSeriesQuery","getObjectFromID","removeTypename","InputGroup","div","AllControls","validationSchema","object","shape","seriesName","string","required","seriesCode","educType","CreateNewSeriesHook","initialValues","data","dataEducType","loading","loadingEducType","error","errorEducType","getEducationTypes","educationTypes","console","log","getEducTypeOptions","map","item","value","id","label","educationTypeName","refinedEducTypes","createSeries","values","actions","setSubmitting","resetForm","res","variables","educationType","setTimeout","JSON","stringify","setFieldValue","isSubmitting"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { MinimStyledPage } from '../styles/StyledPage'\r\nimport Error from '../ErrorMessage.js';\r\nimport { Formik, Form } from 'formik';\r\nimport Select from 'react-select'\r\nimport { customStyle, SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs'\r\nimport styled from 'styled-components';\r\nimport * as Yup from 'yup';\r\nimport { createSeriesMutation } from '../queries&Mutations&Functions/Mutations';\r\nimport { getAllEducationTypesQuery, getAllSeriesQuery } from '../queries&Mutations&Functions/Queries';\r\nimport { getObjectFromID, removeTypename } from '../queries&Mutations&Functions/Functions';\r\n\r\nconst InputGroup = styled.div`\r\n    \r\n    display: flex;\r\n    flex-direction:column;\r\n    margin:0 1rem;\r\n   \r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\nflex-direction:column;\r\n`;\r\n\r\nconst validationSchema = Yup\r\n\t.object()\r\n\t.shape({\r\n\t\tseriesName: Yup\r\n\t\t\t.string()\r\n\t\t\t.required('Libéllé de la série obligatoire'),\r\n\t\tseriesCode: Yup\r\n\t\t\t.string()\r\n\t\t\t.required('Code de la série obligatoire'),\r\n\t\teducType: Yup.string().required(\"Choissisez un type d'enseignement\")\r\n\t});\r\n\r\nconst CreateNewSeriesHook = () => {\r\n\tconst initialValues = {\r\n\t\tseriesName: '',\r\n\t\tseriesCode: '',\r\n\t\teducType: \"\",\r\n\t}\r\n\r\n\tconst { data: dataEducType, loading: loadingEducType, error: errorEducType } = useQuery(getAllEducationTypesQuery)\r\n\r\n\t{ loadingEducType && <p>Loading...</p>; }\r\n\t{ errorEducType && <Error error={errorEducType} />; }\r\n\r\n\tconst getEducationTypes = dataEducType && dataEducType.educationTypes;\r\n\tconsole.log(getEducationTypes);\r\n\tconst getEducTypeOptions =\r\n\t\tgetEducationTypes &&\r\n\t\tgetEducationTypes.map((item) => ({ value: item.id, label: item.educationTypeName }));\r\n\r\n\tconst refinedEducTypes =\r\n\t\teducationTypes && removeTypename(getEducTypeOptions);\r\n\r\n\tconst [createSeries, { loading, error }] = useMutation(createSeriesMutation)\r\n\treturn (\r\n\r\n\t\t<Formik\r\n\t\t\tmethod=\"POST\"\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tonSubmit={async (values, actions, setSubmitting, resetForm) => {\r\n\t\t\t\tconst res = await createSeries({\r\n\t\t\t\t\tvariables:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\teducationType: refinedEducTypes && getObjectFromID(values.educType.value)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tconsole.log(JSON.stringify(values, null, 2));\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tactions.resetForm(true);\r\n\t\t\t\t\tactions.setSubmitting(false);\r\n\t\t\t\t}, 200);\r\n\t\t\t}}>\r\n\t\t\t{({ values, setFieldValue, isSubmitting }) => {\r\n\t\t\t\treturn (\r\n\r\n\t\t\t\t\t<MinimStyledPage>\r\n\t\t\t\t\t\t<h4> Nouvelle Série</h4>\r\n\t\t\t\t\t\t<Error error={error} />\r\n\t\t\t\t\t\t<StyledForm disabled={isSubmitting} aria-busy={isSubmitting} >\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<AllControls>\r\n\t\t\t\t\t\t\t\t\t<InputGroup>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Select name=\"educType\" onChange={(value) => (setFieldValue('educType', value))} options={getEducTypeOptions} placeholder={\"Type d'Enseignement\"} styles={customStyle} disabled={isSubmitting} />\r\n\t\t\t\t\t\t\t\t\t\t<SygexInput name=\"seriesName\" type=\"text\" label=\"Libéllé de la Série\" disabled={isSubmitting} />\r\n\t\t\t\t\t\t\t\t\t\t<SygexInput name=\"seriesCode\" type=\"text\" label=\"Code de la Série\" disabled={isSubmitting} />\r\n\r\n\t\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t\t\t<ButtonStyled>\r\n\t\t\t\t\t\t\t\t\t\t<StyledButton type=\"submit\">Valid{isSubmitting ? 'ation en cours' : 'er'}</StyledButton>\r\n\t\t\t\t\t\t\t\t\t</ButtonStyled>\r\n\t\t\t\t\t\t\t\t</AllControls>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</StyledForm>\r\n\t\t\t\t\t</MinimStyledPage>\r\n\r\n\t\t\t\t)\r\n\t\t\t}}\r\n\t\t</Formik>\r\n\r\n\r\n\t);\r\n}\r\nexport default CreateNewSeriesHook;"]},"metadata":{},"sourceType":"module"}