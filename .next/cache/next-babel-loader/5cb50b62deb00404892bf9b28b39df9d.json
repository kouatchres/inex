{"ast":null,"code":"var _jsxFileName = \"E:\\\\SYGEFEX\\\\Sygefex-front-Formik\\\\src\\\\components\\\\region\\\\NewRegionHooks.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { MinimStyledPage } from '../styles/StyledPage';\nimport Error from '../ErrorMessage.js';\nimport { Formik, Form } from 'formik';\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { getAllCountrysQuery } from '../queries&Mutations&Functions/Queries';\nimport { removeTypename, getObjectFromID } from '../queries&Mutations&Functions/Functions';\nimport { createNewRegionMutation } from '../queries&Mutations&Functions/Mutations';\nconst InputGroup = styled.div.withConfig({\n  displayName: \"NewRegionHooks__InputGroup\",\n  componentId: \"uvihyy-0\"\n})([\"display:flex;flex-direction:column;margin:0 1rem;\"]);\nconst AllControls = styled.div.withConfig({\n  displayName: \"NewRegionHooks__AllControls\",\n  componentId: \"uvihyy-1\"\n})([\"display:flex;flex-direction:column;\"]);\nconst validationSchema = Yup.object().shape({\n  regName: Yup.string().required('Nom Région Obligatoire'),\n  regCode: Yup.string().required('Code Région Obligatoire') // country: Yup\n  //     .object()\n  //     .required('Pays Obligatoire')\n\n});\n\nconst NewRegionHooks = () => {\n  const initialValues = {\n    regName: \"\",\n    regCode: \"\",\n    country: \"\" //   country: refinedCountry && getObjectFromID(id)\n\n  };\n  const {\n    data,\n    loading: loadingCount,\n    error: errorCount\n  } = useQuery(getAllCountrysQuery);\n  {\n    loadingCount && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    }, \"Loading Countries from DB...\");\n  }\n  {\n    errorCount && __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    });\n  }\n\n  const {\n    countries\n  } = _objectSpread({}, data);\n\n  const reducedCountries = countries && countries.reduce(item => item);\n  const refinedCountry = reducedCountries && removeTypename(reducedCountries);\n\n  const {\n    id\n  } = _objectSpread({}, refinedCountry);\n\n  const [createRegion, {\n    loading,\n    error\n  }] = useMutation(createNewRegionMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, actions, setSubmitting, resetForm) => {\n      const res = await createRegion({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          country: refinedCountry && getObjectFromID(id)\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        actions.resetForm(true);\n        actions.setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, ({\n    isSubmitting\n  }) => {\n    return __jsx(MinimStyledPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Nouvelle R\\xE9gion\"), __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting,\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, __jsx(AllControls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, __jsx(SygexInput, {\n      name: \"regName\",\n      type: \"text\",\n      label: \"Nom la R\\xE9gion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }), __jsx(SygexInput, {\n      name: \"regCode\",\n      type: \"text\",\n      label: \"Code la R\\xE9gion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    })), __jsx(ButtonStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, \"Valid\", isSubmitting ? 'ation en cours' : 'er'))))));\n  });\n};\n\nexport default NewRegionHooks;","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/region/NewRegionHooks.jsx"],"names":["React","MinimStyledPage","Error","Formik","Form","SygexInput","StyledForm","ButtonStyled","StyledButton","styled","Yup","useQuery","useMutation","getAllCountrysQuery","removeTypename","getObjectFromID","createNewRegionMutation","InputGroup","div","AllControls","validationSchema","object","shape","regName","string","required","regCode","NewRegionHooks","initialValues","country","data","loading","loadingCount","error","errorCount","countries","reducedCountries","reduce","item","refinedCountry","id","createRegion","values","actions","setSubmitting","resetForm","res","variables","setTimeout","console","log","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { MinimStyledPage } from '../styles/StyledPage'\r\nimport Error from '../ErrorMessage.js';\r\nimport { Formik, Form } from 'formik';\r\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs'\r\nimport styled from 'styled-components';\r\nimport * as Yup from 'yup';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { getAllCountrysQuery } from '../queries&Mutations&Functions/Queries'\r\nimport { removeTypename, getObjectFromID } from '../queries&Mutations&Functions/Functions'\r\nimport { createNewRegionMutation } from '../queries&Mutations&Functions/Mutations'\r\n\r\n\r\nconst InputGroup = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    margin:0 1rem;\r\n   \r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\nflex-direction:column;\r\n`;\r\n\r\nconst validationSchema = Yup\r\n    .object()\r\n    .shape({\r\n        regName: Yup\r\n            .string()\r\n            .required('Nom Région Obligatoire'),\r\n        regCode: Yup\r\n            .string()\r\n            .required('Code Région Obligatoire'),\r\n        // country: Yup\r\n        //     .object()\r\n        //     .required('Pays Obligatoire')\r\n    });\r\n\r\n\r\n\r\nconst NewRegionHooks = () => {\r\n\r\n\r\n    const initialValues = {\r\n        regName: \"\",\r\n        regCode: \"\",\r\n        country: \"\"\r\n        //   country: refinedCountry && getObjectFromID(id)\r\n    }\r\n\r\n    const { data, loading: loadingCount, error: errorCount } = useQuery(getAllCountrysQuery)\r\n    { loadingCount && <p>Loading Countries from DB...</p> }\r\n    { errorCount && <Error error={error} /> }\r\n    const { countries } = { ...data }\r\n    const reducedCountries = countries && countries.reduce((item) => item)\r\n    const refinedCountry = reducedCountries && removeTypename(reducedCountries)\r\n    const { id } = { ...refinedCountry }\r\n\r\n    const [createRegion, { loading, error }] = useMutation(createNewRegionMutation)\r\n\r\n    return (\r\n\r\n        <Formik\r\n            method=\"POST\"\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions, setSubmitting, resetForm) => {\r\n                const res = await createRegion({\r\n                    variables:\r\n                    {\r\n                        ...values,\r\n                        country: refinedCountry && getObjectFromID(id)\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    console.log(JSON.stringify(values, null, 2));\r\n                    console.log(res);\r\n                    actions.resetForm(true);\r\n                    actions.setSubmitting(false);\r\n                }, 400);\r\n            }}>\r\n            {({ isSubmitting }) => {\r\n                return (\r\n                    <MinimStyledPage>\r\n                        <h4>Nouvelle Région</h4>\r\n                        <Error error={error} />\r\n                        <StyledForm disabled={isSubmitting} aria-busy={isSubmitting} >\r\n                            <Form>\r\n                                <AllControls>\r\n                                    <InputGroup>\r\n\r\n                                        <SygexInput name=\"regName\" type=\"text\" label=\"Nom la Région\" />\r\n                                        <SygexInput name=\"regCode\" type=\"text\" label=\"Code la Région\" />\r\n\r\n                                    </InputGroup>\r\n                                    <ButtonStyled>\r\n                                        <StyledButton type=\"submit\" disabled={isSubmitting}>Valid{isSubmitting ? 'ation en cours' : 'er'}</StyledButton>\r\n                                    </ButtonStyled>\r\n                                </AllControls>\r\n                            </Form>\r\n                        </StyledForm>\r\n                    </MinimStyledPage>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\nexport default NewRegionHooks"]},"metadata":{},"sourceType":"module"}