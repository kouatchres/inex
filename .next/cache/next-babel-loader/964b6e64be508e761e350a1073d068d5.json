{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\SYGEFEX\\\\Sygefex-front-Formik\\\\src\\\\components\\\\region\\\\NewRegionHooks.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { MinimStyledPage } from '../styles/StyledPage';\nimport Error from '../ErrorMessage.js';\nimport { Formik, Form } from 'formik';\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { getAllCountrysQuery } from '../queries&Mutations&Functions/Queries';\nimport { removeTypename, getObjectFromID } from '../queries&Mutations&Functions/Functions';\nimport { createNewRegionMutation } from '../queries&Mutations&Functions/Mutations';\nvar InputGroup = styled.div.withConfig({\n  displayName: \"NewRegionHooks__InputGroup\",\n  componentId: \"uvihyy-0\"\n})([\"display:flex;flex-direction:column;margin:0 1rem;\"]);\n_c = InputGroup;\nvar AllControls = styled.div.withConfig({\n  displayName: \"NewRegionHooks__AllControls\",\n  componentId: \"uvihyy-1\"\n})([\"display:flex;flex-direction:column;\"]);\n_c2 = AllControls;\nvar validationSchema = Yup.object().shape({\n  regName: Yup.string().required('Nom Région Obligatoire'),\n  regCode: Yup.string().required('Code Région Obligatoire') // country: Yup\n  //     .object()\n  //     .required('Pays Obligatoire')\n\n});\n\nvar NewRegionHooks = function NewRegionHooks() {\n  _s();\n\n  var initialValues = {\n    regName: \"\",\n    regCode: \"\",\n    country: \"\" //   country: refinedCountry && getObjectFromID(id)\n\n  };\n\n  var _useQuery = useQuery(getAllCountrysQuery),\n      data = _useQuery.data,\n      loadingCount = _useQuery.loading,\n      errorCount = _useQuery.error;\n\n  {\n    loadingCount && __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    }, \"Loading Countries from DB...\");\n  }\n  {\n    errorCount && __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    });\n  }\n\n  var _data = _objectSpread({}, data),\n      countries = _data.countries;\n\n  var reducedCountries = countries && countries.reduce(function (item) {\n    return item;\n  });\n  var refinedCountry = reducedCountries && removeTypename(reducedCountries);\n\n  var _refinedCountry = _objectSpread({}, refinedCountry),\n      id = _refinedCountry.id;\n\n  var _useMutation = useMutation(createNewRegionMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createRegion = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, actions, setSubmitting, resetForm) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return createRegion({\n                  variables: _objectSpread(_objectSpread({}, values), {}, {\n                    country: refinedCountry && getObjectFromID(id)\n                  })\n                });\n\n              case 2:\n                res = _context.sent;\n                setTimeout(function () {\n                  console.log(JSON.stringify(values, null, 2));\n                  console.log(res);\n                  actions.resetForm(true);\n                  actions.setSubmitting(false);\n                }, 400);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return __jsx(MinimStyledPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Nouvelle R\\xE9gion\"), __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting,\n      \"aria-busy\": isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, __jsx(AllControls, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, __jsx(SygexInput, {\n      name: \"regName\",\n      type: \"text\",\n      label: \"Nom la R\\xE9gion\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }), __jsx(SygexInput, {\n      name: \"regCode\",\n      type: \"text\",\n      label: \"Code la R\\xE9gion\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    })), __jsx(ButtonStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, \"Valid\", isSubmitting ? 'ation en cours' : 'er'))))));\n  });\n};\n\n_s(NewRegionHooks, \"8HwzYMRPkAsRsw8gakBAWrlRs2k=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c3 = NewRegionHooks;\nexport default NewRegionHooks;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"InputGroup\");\n$RefreshReg$(_c2, \"AllControls\");\n$RefreshReg$(_c3, \"NewRegionHooks\");","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/region/NewRegionHooks.jsx"],"names":["React","MinimStyledPage","Error","Formik","Form","SygexInput","StyledForm","ButtonStyled","StyledButton","styled","Yup","useQuery","useMutation","getAllCountrysQuery","removeTypename","getObjectFromID","createNewRegionMutation","InputGroup","div","AllControls","validationSchema","object","shape","regName","string","required","regCode","NewRegionHooks","initialValues","country","data","loadingCount","loading","errorCount","error","countries","reducedCountries","reduce","item","refinedCountry","id","createRegion","values","actions","setSubmitting","resetForm","variables","res","setTimeout","console","log","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { MinimStyledPage } from '../styles/StyledPage'\r\nimport Error from '../ErrorMessage.js';\r\nimport { Formik, Form } from 'formik';\r\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton } from '../utils/FormInputs'\r\nimport styled from 'styled-components';\r\nimport * as Yup from 'yup';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { getAllCountrysQuery } from '../queries&Mutations&Functions/Queries'\r\nimport { removeTypename, getObjectFromID } from '../queries&Mutations&Functions/Functions'\r\nimport { createNewRegionMutation } from '../queries&Mutations&Functions/Mutations'\r\n\r\n\r\nconst InputGroup = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    margin:0 1rem;\r\n   \r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\nflex-direction:column;\r\n`;\r\n\r\nconst validationSchema = Yup\r\n    .object()\r\n    .shape({\r\n        regName: Yup\r\n            .string()\r\n            .required('Nom Région Obligatoire'),\r\n        regCode: Yup\r\n            .string()\r\n            .required('Code Région Obligatoire'),\r\n        // country: Yup\r\n        //     .object()\r\n        //     .required('Pays Obligatoire')\r\n    });\r\n\r\n\r\n\r\nconst NewRegionHooks = () => {\r\n\r\n\r\n    const initialValues = {\r\n        regName: \"\",\r\n        regCode: \"\",\r\n        country: \"\"\r\n        //   country: refinedCountry && getObjectFromID(id)\r\n    }\r\n\r\n    const { data, loading: loadingCount, error: errorCount } = useQuery(getAllCountrysQuery)\r\n    { loadingCount && <p>Loading Countries from DB...</p> }\r\n    { errorCount && <Error error={error} /> }\r\n    const { countries } = { ...data }\r\n    const reducedCountries = countries && countries.reduce((item) => item)\r\n    const refinedCountry = reducedCountries && removeTypename(reducedCountries)\r\n    const { id } = { ...refinedCountry }\r\n\r\n    const [createRegion, { loading, error }] = useMutation(createNewRegionMutation)\r\n\r\n    return (\r\n\r\n        <Formik\r\n            method=\"POST\"\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions, setSubmitting, resetForm) => {\r\n                const res = await createRegion({\r\n                    variables:\r\n                    {\r\n                        ...values,\r\n                        country: refinedCountry && getObjectFromID(id)\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    console.log(JSON.stringify(values, null, 2));\r\n                    console.log(res);\r\n                    actions.resetForm(true);\r\n                    actions.setSubmitting(false);\r\n                }, 400);\r\n            }}>\r\n            {({ isSubmitting }) => {\r\n                return (\r\n                    <MinimStyledPage>\r\n                        <h4>Nouvelle Région</h4>\r\n                        <Error error={error} />\r\n                        <StyledForm disabled={isSubmitting} aria-busy={isSubmitting} >\r\n                            <Form>\r\n                                <AllControls>\r\n                                    <InputGroup>\r\n\r\n                                        <SygexInput name=\"regName\" type=\"text\" label=\"Nom la Région\" />\r\n                                        <SygexInput name=\"regCode\" type=\"text\" label=\"Code la Région\" />\r\n\r\n                                    </InputGroup>\r\n                                    <ButtonStyled>\r\n                                        <StyledButton type=\"submit\" disabled={isSubmitting}>Valid{isSubmitting ? 'ation en cours' : 'er'}</StyledButton>\r\n                                    </ButtonStyled>\r\n                                </AllControls>\r\n                            </Form>\r\n                        </StyledForm>\r\n                    </MinimStyledPage>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\nexport default NewRegionHooks"]},"metadata":{},"sourceType":"module"}