{"ast":null,"code":"var _jsxFileName = \"E:\\\\SYGEFEX\\\\Sygefex-front-Formik\\\\src\\\\components\\\\score\\\\EnterNewMarksHook.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { MinimStyledPage } from '../styles/StyledPage';\nimport Error from '../ErrorMessage.js';\nimport Select from 'react-select';\nimport useForm from '../utils/useForm';\nimport { Formik, Form } from 'formik';\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton, customStyle } from '../utils/FormInputs';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport { updateScoreMutation } from \"../queries&Mutations&Functions/Mutations\";\nimport { getObjectFromID, removeTypename } from \"../queries&Mutations&Functions/Functions\";\nimport { getAllEducationTypesQuery, getAllSubjectsOfASeriesQuery, getAllSeriesOfAnEducationTypeQuery } from \"../queries&Mutations&Functions/Queries\";\nconst InputGroup = styled.div.withConfig({\n  displayName: \"EnterNewMarksHook__InputGroup\",\n  componentId: \"sc-147e2er-0\"\n})([\"display:flex;flex-direction:column;min-width:13rem;margin:0 1rem;\"]);\nconst AllControls = styled.div.withConfig({\n  displayName: \"EnterNewMarksHook__AllControls\",\n  componentId: \"sc-147e2er-1\"\n})([\"display:flex;flex-direction:column;\"]);\nconst validationSchema = Yup.object().shape({\n  candExamSecretCode: Yup.string().required(\"Code d'Anonymat du candidat Obligatoire\"),\n  educType: Yup.string().required(\"Choix Du type d'Enseignement Obligatoire\"),\n  subjectSeries: Yup.string().required(\"Choix de la matière Obligatoire\"),\n  series: Yup.string().required(\"Choix de la Séries Obligatoire\"),\n  subjectAve: Yup.number().min(0, 'Pas de note négative').max(20, 'Pas de note supérieure a 20').required('Note du candidate obligatoire')\n});\n\nconst EnterNewMarks = () => {\n  const initialValues = {\n    subjectAve: \"\",\n    series: \"12\",\n    subjectSeries: \"\",\n    educType: \"12\",\n    candExamSecretCode: \"\"\n  };\n  const [state, setState, handleReactSelectChange] = useForm({\n    educTypeID: \"\",\n    seriesID: \"\"\n  });\n  const {\n    data: dataEducType,\n    loadingEducType,\n    errEducType\n  } = useQuery(getAllEducationTypesQuery);\n  {\n    loadingEducType && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 26\n      }\n    }, \"loading...\");\n  }\n  {\n    errEducType && __jsx(Error, {\n      error: errEducType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }\n    });\n  }\n  console.log(dataEducType);\n  const getEducationTypes = dataEducType && dataEducType.educationTypes;\n  console.log(getEducationTypes);\n  const getEducTypesOptions = getEducationTypes && getEducationTypes.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    value: item.id,\n    label: item.educationTypeName\n  }));\n  const {\n    data: dataEducationType,\n    loading: loadingSeries,\n    error: errSeries\n  } = useQuery(getAllSeriesOfAnEducationTypeQuery, {\n    skip: !state.educTypeID,\n    variables: {\n      id: state.educTypeID\n    }\n  });\n  {\n    loadingSeries && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }\n    }, \"loading...\");\n  }\n  {\n    errSeries && __jsx(Error, {\n      error: errSeries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }\n    });\n  }\n  console.log(dataEducationType);\n  const getEducationType = dataEducationType && dataEducationType.educationType;\n\n  const {\n    series\n  } = _objectSpread({}, getEducationType);\n\n  console.log(series);\n  const refinedSeries = series && removeTypename(series);\n  const getSeriesOptions = refinedSeries && refinedSeries.map(item => ({\n    value: item.id,\n    label: item.seriesName\n  }));\n  const {\n    data: dataSubjSeries,\n    loading: loadingSubjSer,\n    error: errSubjSer\n  } = useQuery(getAllSubjectsOfASeriesQuery, {\n    skip: !state.seriesID,\n    variables: {\n      id: state.seriesID\n    }\n  });\n  {\n    loadingSubjSer && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"loading...\");\n  }\n  {\n    errSubjSer && __jsx(Error, {\n      error: errSubjSer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    });\n  }\n  console.log(dataSubjSeries);\n  const getSeries = dataSubjSeries && dataSubjSeries.series;\n\n  const {\n    subjectSeries\n  } = _objectSpread({}, getSeries);\n\n  console.log(subjectSeries);\n  const refinedSubjectSeries = subjectSeries && removeTypename(subjectSeries);\n  const getSubjectsOptions = refinedSubjectSeries && refinedSubjectSeries.map(item => ({\n    value: item.id,\n    label: item.subjectName\n  }));\n  const [updateScore, {\n    loading,\n    error\n  }] = useMutation(updateScoreMutation);\n  return __jsx(Formik, {\n    method: \"POST\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, actions, setSubmitting, resetForm) => {\n      const res = await updateScore({\n        variables: _objectSpread(_objectSpread({}, values), {}, {\n          subjectSeries: refinedSubjectSeries && getObjectFromID(values.subjectSeries.value)\n        })\n      });\n      setTimeout(() => {\n        console.log(JSON.stringify(values, null, 2));\n        console.log(res);\n        actions.resetForm(true);\n        actions.setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return __jsx(MinimStyledPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Notes des candidats\"), __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }), __jsx(StyledForm, {\n      disabled: isSubmitting,\n      \"aria-busy\": isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, __jsx(AllControls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, __jsx(Select, {\n      onChange: handleReactSelectChange,\n      name: \"educTypeID\",\n      styles: customStyle,\n      placeholder: \"Le type d'enseignement\",\n      options: getEducTypesOptions,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }), __jsx(Select, {\n      onChange: handleReactSelectChange,\n      name: \"seriesID\",\n      styles: customStyle,\n      placeholder: \"La Serie\",\n      options: getSeriesOptions,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }), __jsx(Select, {\n      onChange: value => setFieldValue('subjectSeries', value),\n      name: \"subjectSeries\",\n      styles: customStyle,\n      placeholder: \"Matiere\",\n      options: getSubjectsOptions,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 41\n      }\n    }), __jsx(SygexInput, {\n      name: \"candExamSecretCode\",\n      type: \"text\",\n      label: \"sAnonymat du candidat\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }), __jsx(SygexInput, {\n      name: \"subjectAve\",\n      type: \"number\",\n      step: \"0.001\",\n      label: \"Note en la mati\\xE8re\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }\n    })), __jsx(ButtonStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    }, __jsx(StyledButton, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 41\n      }\n    }, \"Valid\", isSubmitting ? 'ation en cours' : 'er'))))));\n  });\n};\n\nexport default EnterNewMarks;","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/score/EnterNewMarksHook.jsx"],"names":["React","useMutation","useQuery","MinimStyledPage","Error","Select","useForm","Formik","Form","SygexInput","StyledForm","ButtonStyled","StyledButton","customStyle","styled","Yup","updateScoreMutation","getObjectFromID","removeTypename","getAllEducationTypesQuery","getAllSubjectsOfASeriesQuery","getAllSeriesOfAnEducationTypeQuery","InputGroup","div","AllControls","validationSchema","object","shape","candExamSecretCode","string","required","educType","subjectSeries","series","subjectAve","number","min","max","EnterNewMarks","initialValues","state","setState","handleReactSelectChange","educTypeID","seriesID","data","dataEducType","loadingEducType","errEducType","console","log","getEducationTypes","educationTypes","getEducTypesOptions","map","item","value","id","label","educationTypeName","dataEducationType","loading","loadingSeries","error","errSeries","skip","variables","getEducationType","educationType","refinedSeries","getSeriesOptions","seriesName","dataSubjSeries","loadingSubjSer","errSubjSer","getSeries","refinedSubjectSeries","getSubjectsOptions","subjectName","updateScore","values","actions","setSubmitting","resetForm","res","setTimeout","JSON","stringify","setFieldValue","isSubmitting"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { MinimStyledPage } from '../styles/StyledPage'\r\nimport Error from '../ErrorMessage.js';\r\nimport Select from 'react-select'\r\nimport useForm from '../utils/useForm'\r\nimport { Formik, Form } from 'formik';\r\nimport { SygexInput, StyledForm, ButtonStyled, StyledButton, customStyle } from '../utils/FormInputs'\r\nimport styled from 'styled-components';\r\nimport * as Yup from 'yup';\r\nimport { updateScoreMutation } from \"../queries&Mutations&Functions/Mutations\";\r\nimport { getObjectFromID, removeTypename } from \"../queries&Mutations&Functions/Functions\";\r\nimport {\r\n    getAllEducationTypesQuery,\r\n    getAllSubjectsOfASeriesQuery,\r\n    getAllSeriesOfAnEducationTypeQuery\r\n} from \"../queries&Mutations&Functions/Queries\";\r\n\r\nconst InputGroup = styled.div`\r\n    \r\n    display: flex;\r\n    flex-direction:column;\r\n    min-width:13rem;\r\n    margin:0 1rem;\r\n   \r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\nflex-direction:column;\r\n/* min-width: 17rem; */\r\n`;\r\n\r\nconst validationSchema = Yup\r\n    .object()\r\n    .shape({\r\n        candExamSecretCode: Yup\r\n            .string()\r\n            .required(\"Code d'Anonymat du candidat Obligatoire\"),\r\n        educType: Yup\r\n            .string()\r\n            .required(\"Choix Du type d'Enseignement Obligatoire\"),\r\n        subjectSeries: Yup\r\n            .string()\r\n            .required(\"Choix de la matière Obligatoire\"),\r\n        series: Yup\r\n            .string()\r\n            .required(\"Choix de la Séries Obligatoire\"),\r\n        subjectAve: Yup\r\n            .number()\r\n            .min(0, 'Pas de note négative')\r\n            .max(20, 'Pas de note supérieure a 20')\r\n            .required('Note du candidate obligatoire'),\r\n    });\r\n\r\nconst EnterNewMarks = () => {\r\n    const initialValues = {\r\n        subjectAve: \"\",\r\n        series: \"12\",\r\n        subjectSeries: \"\",\r\n        educType: \"12\",\r\n        candExamSecretCode: \"\",\r\n    };\r\n\r\n\r\n    const [state, setState, handleReactSelectChange] = useForm({ educTypeID: \"\", seriesID: \"\" })\r\n\r\n    const { data: dataEducType, loadingEducType, errEducType } = useQuery(getAllEducationTypesQuery)\r\n    { loadingEducType && <p>loading...</p>; }\r\n    { errEducType && <Error error={errEducType} />; }\r\n    console.log(dataEducType);\r\n\r\n    const getEducationTypes = dataEducType && dataEducType.educationTypes;\r\n    console.log(getEducationTypes);\r\n    const getEducTypesOptions =\r\n        getEducationTypes &&\r\n        getEducationTypes.map(item => ({ ...item, value: item.id, label: item.educationTypeName }));\r\n\r\n    const { data: dataEducationType, loading: loadingSeries, error: errSeries } = useQuery(getAllSeriesOfAnEducationTypeQuery, {\r\n        skip: !state.educTypeID,\r\n        variables: { id: state.educTypeID }\r\n    })\r\n\r\n    { loadingSeries && <p>loading...</p>; }\r\n    { errSeries && <Error error={errSeries} />; }\r\n    console.log(dataEducationType);\r\n    const getEducationType = dataEducationType && dataEducationType.educationType;\r\n    const { series } = { ...getEducationType };\r\n    console.log(series);\r\n    const refinedSeries = series && removeTypename(series);\r\n    const getSeriesOptions =\r\n        refinedSeries &&\r\n        refinedSeries.map(item => ({ value: item.id, label: item.seriesName }));\r\n\r\n\r\n    const { data: dataSubjSeries, loading: loadingSubjSer, error: errSubjSer } = useQuery(getAllSubjectsOfASeriesQuery, {\r\n        skip: !state.seriesID,\r\n        variables: { id: state.seriesID }\r\n    })\r\n\r\n    { loadingSubjSer && <p>loading...</p>; }\r\n    { errSubjSer && <Error error={errSubjSer} />; }\r\n    console.log(dataSubjSeries);\r\n    const getSeries = dataSubjSeries && dataSubjSeries.series;\r\n    const { subjectSeries } = { ...getSeries };\r\n    console.log(subjectSeries);\r\n\r\n    const refinedSubjectSeries =\r\n        subjectSeries && removeTypename(subjectSeries);\r\n    const getSubjectsOptions =\r\n        refinedSubjectSeries &&\r\n        refinedSubjectSeries.map(item => ({ value: item.id, label: item.subjectName }));\r\n\r\n\r\n    const [updateScore, { loading, error }] = useMutation(updateScoreMutation)\r\n    return (\r\n        <Formik\r\n            method=\"POST\"\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions, setSubmitting, resetForm) => {\r\n                const res = await updateScore({\r\n                    variables: {\r\n                        ...values,\r\n                        subjectSeries: refinedSubjectSeries && getObjectFromID(values.subjectSeries.value)\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    console.log(JSON.stringify(values, null, 2));\r\n                    console.log(res);\r\n                    actions.resetForm(true);\r\n                    actions.setSubmitting(false);\r\n                }, 400);\r\n            }}>\r\n            {({ values, setFieldValue, isSubmitting }) => {\r\n                return (\r\n                    <MinimStyledPage>\r\n                        <h4>Notes des candidats</h4>\r\n                        <Error error={error} />\r\n                        <StyledForm disabled={isSubmitting} aria-busy={isSubmitting} >\r\n                            <Form>\r\n                                <AllControls>\r\n                                    <InputGroup>\r\n                                        <Select onChange={handleReactSelectChange} name=\"educTypeID\" styles={customStyle} placeholder={\"Le type d'enseignement\"} options={getEducTypesOptions} disabled={isSubmitting} />\r\n                                        <Select onChange={handleReactSelectChange} name=\"seriesID\" styles={customStyle} placeholder={\"La Serie\"} options={getSeriesOptions} disabled={isSubmitting} />\r\n                                        <Select onChange={(value) => (setFieldValue('subjectSeries', value))} name=\"subjectSeries\" styles={customStyle} placeholder={\"Matiere\"} options={getSubjectsOptions} disabled={isSubmitting} />\r\n\r\n                                        <SygexInput name=\"candExamSecretCode\" type=\"text\" label=\"sAnonymat du candidat\" disabled={isSubmitting} />\r\n                                        <SygexInput\r\n                                            name=\"subjectAve\"\r\n                                            type=\"number\"\r\n                                            step=\"0.001\"\r\n                                            label=\"Note en la matière\"\r\n                                            disabled={isSubmitting}\r\n                                        />\r\n\r\n                                    </InputGroup>\r\n                                    <ButtonStyled>\r\n                                        <StyledButton type=\"submit\" disabled={isSubmitting}>Valid{isSubmitting ? 'ation en cours' : 'er'}</StyledButton>\r\n                                    </ButtonStyled>\r\n                                </AllControls>\r\n                            </Form>\r\n                        </StyledForm>\r\n                    </MinimStyledPage>\r\n                )\r\n            }}\r\n        </Formik>\r\n\r\n    );\r\n}\r\nexport default EnterNewMarks;"]},"metadata":{},"sourceType":"module"}