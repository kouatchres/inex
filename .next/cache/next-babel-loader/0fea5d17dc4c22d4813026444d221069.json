{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\n\nconst useForm = initialValues => {\n  const {\n    0: state,\n    1: setState\n  } = useState(initialValues);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const val = type === \"number\" ? parseInt(value) : value;\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      [name]: val\n    }));\n  };\n\n  const handleReactSelectChange = (action, value) => {\n    console.log({\n      action\n    });\n    console.log({\n      value\n    });\n    setState(state => _objectSpread(_objectSpread({}, state), {}, {\n      [value.name]: action.value\n    }));\n  };\n\n  return [state, setState, handleReactSelectChange, handleInputChange];\n};\n\nexport default useForm;","map":{"version":3,"sources":["E:/SYGEFEX/Sygefex-front-Formik/src/components/utils/useForm.jsx"],"names":["useState","useForm","initialValues","state","setState","handleInputChange","e","name","value","type","target","val","parseInt","handleReactSelectChange","action","console","log"],"mappings":";;;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAIC,aAAD,IAAmB;AAC/B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAACE,aAAD,CAAlC;;AAEA,QAAMG,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAAwBH,CAAC,CAACI,MAAhC;AACA,UAAMC,GAAG,GAAGF,IAAI,KAAK,QAAT,GAAoBG,QAAQ,CAACJ,KAAD,CAA5B,GAAsCA,KAAlD;AACAJ,IAAAA,QAAQ,CAACD,KAAK,oCAAUA,KAAV;AAAiB,OAACI,IAAD,GAAQI;AAAzB,MAAN,CAAR;AACH,GAJD;;AAMA,QAAME,uBAAuB,GAAG,CAACC,MAAD,EAASN,KAAT,KAAmB;AAC/CO,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAER,MAAAA;AAAF,KAAZ;AACAJ,IAAAA,QAAQ,CAACD,KAAK,oCAAUA,KAAV;AAAiB,OAACK,KAAK,CAACD,IAAP,GAAcO,MAAM,CAACN;AAAtC,MAAN,CAAR;AACH,GAJD;;AAMA,SAAO,CAACL,KAAD,EAAQC,QAAR,EAAkBS,uBAAlB,EAA2CR,iBAA3C,CAAP;AACH,CAhBD;;AAiBA,eAAeJ,OAAf","sourcesContent":["\r\nimport { useState } from 'react'\r\n\r\nconst useForm = (initialValues) => {\r\n    const [state, setState] = useState(initialValues)\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value, type } = e.target;\r\n        const val = type === \"number\" ? parseInt(value) : value;\r\n        setState(state => ({ ...state, [name]: val }));\r\n    };\r\n\r\n    const handleReactSelectChange = (action, value) => {\r\n        console.log({ action });\r\n        console.log({ value });\r\n        setState(state => ({ ...state, [value.name]: action.value }))\r\n    }\r\n\r\n    return [state, setState, handleReactSelectChange, handleInputChange]\r\n}\r\nexport default useForm"]},"metadata":{},"sourceType":"module"}